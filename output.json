{
    "Address": {
        "properties": {
            "line1": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Line1"
            },
            "line2": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Line2"
            },
            "postal_code": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Postal Code"
            },
            "city": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "City"
            },
            "state": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "State"
            },
            "country": {
                "type": "string",
                "pattern": "^\\w{2}$",
                "title": "Country"
            }
        },
        "type": "object",
        "required": [
            "country"
        ],
        "title": "Address"
    },
    "AdvertisementCampaign": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id"
            },
            "image_url": {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri",
                "title": "Image Url"
            },
            "image_url_dark": {
                "anyOf": [
                    {
                        "type": "string",
                        "maxLength": 2083,
                        "minLength": 1,
                        "format": "uri"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Image Url Dark"
            },
            "text": {
                "type": "string",
                "title": "Text"
            },
            "link_url": {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri",
                "title": "Link Url"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "image_url",
            "image_url_dark",
            "text",
            "link_url"
        ],
        "title": "AdvertisementCampaign"
    },
    "AdvertisementCampaignListResource": {
        "properties": {
            "items": {
                "items": {
                    "$ref": "#/components/schemas/AdvertisementCampaign"
                },
                "type": "array",
                "title": "Items"
            },
            "pagination": {
                "$ref": "#/components/schemas/Pagination"
            },
            "dimensions": {
                "prefixItems": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "integer"
                    }
                ],
                "items": {
                    "type": "integer"
                },
                "type": "array",
                "maxItems": 2,
                "minItems": 2,
                "title": "Dimensions",
                "description": "The dimensions (width, height) in pixels of the advertisement images."
            }
        },
        "type": "object",
        "required": [
            "items",
            "pagination",
            "dimensions"
        ],
        "title": "AdvertisementCampaignListResource"
    },
    "AlreadyActiveSubscriptionError": {
        "properties": {
            "error": {
                "type": "string",
                "const": "AlreadyActiveSubscriptionError",
                "title": "Error"
            },
            "detail": {
                "type": "string",
                "title": "Detail"
            }
        },
        "type": "object",
        "required": [
            "error",
            "detail"
        ],
        "title": "AlreadyActiveSubscriptionError"
    },
    "AlreadyCanceledSubscription": {
        "properties": {
            "error": {
                "type": "string",
                "const": "AlreadyCanceledSubscription",
                "title": "Error"
            },
            "detail": {
                "type": "string",
                "title": "Detail"
            }
        },
        "type": "object",
        "required": [
            "error",
            "detail"
        ],
        "title": "AlreadyCanceledSubscription"
    },
    "Assignee": {
        "properties": {
            "id": {
                "type": "integer",
                "title": "Id"
            },
            "login": {
                "type": "string",
                "title": "Login"
            },
            "html_url": {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri",
                "title": "Html Url"
            },
            "avatar_url": {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri",
                "title": "Avatar Url"
            }
        },
        "type": "object",
        "required": [
            "id",
            "login",
            "html_url",
            "avatar_url"
        ],
        "title": "Assignee"
    },
    "AttachedCustomField": {
        "properties": {
            "custom_field_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Custom Field Id",
                "description": "ID of the custom field."
            },
            "custom_field": {
                "$ref": "#/components/schemas/CustomField",
                "title": "CustomField"
            },
            "order": {
                "type": "integer",
                "title": "Order",
                "description": "Order of the custom field in the resource."
            },
            "required": {
                "type": "boolean",
                "title": "Required",
                "description": "Whether the value is required for this custom field."
            }
        },
        "type": "object",
        "required": [
            "custom_field_id",
            "custom_field",
            "order",
            "required"
        ],
        "title": "AttachedCustomField",
        "description": "Schema of a custom field attached to a resource."
    },
    "AttachedCustomFieldCreate": {
        "properties": {
            "custom_field_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Custom Field Id",
                "description": "ID of the custom field to attach."
            },
            "required": {
                "type": "boolean",
                "title": "Required",
                "description": "Whether the value is required for this custom field."
            }
        },
        "type": "object",
        "required": [
            "custom_field_id",
            "required"
        ],
        "title": "AttachedCustomFieldCreate",
        "description": "Schema to attach a custom field to a resource."
    },
    "Author": {
        "properties": {
            "id": {
                "type": "integer",
                "title": "Id"
            },
            "login": {
                "type": "string",
                "title": "Login"
            },
            "html_url": {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri",
                "title": "Html Url"
            },
            "avatar_url": {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri",
                "title": "Avatar Url"
            }
        },
        "type": "object",
        "required": [
            "id",
            "login",
            "html_url",
            "avatar_url"
        ],
        "title": "Author"
    },
    "AuthorizeOrganization": {
        "properties": {
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id"
            },
            "slug": {
                "type": "string",
                "title": "Slug"
            },
            "avatar_url": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Avatar Url"
            }
        },
        "type": "object",
        "required": [
            "id",
            "slug",
            "avatar_url"
        ],
        "title": "AuthorizeOrganization"
    },
    "AuthorizeResponseOrganization": {
        "properties": {
            "client": {
                "$ref": "#/components/schemas/OAuth2ClientPublic"
            },
            "sub_type": {
                "type": "string",
                "const": "organization",
                "title": "Sub Type"
            },
            "sub": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/AuthorizeOrganization"
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "scopes": {
                "items": {
                    "$ref": "#/components/schemas/Scope"
                },
                "type": "array",
                "title": "Scopes"
            },
            "organizations": {
                "items": {
                    "$ref": "#/components/schemas/AuthorizeOrganization"
                },
                "type": "array",
                "title": "Organizations"
            }
        },
        "type": "object",
        "required": [
            "client",
            "sub_type",
            "sub",
            "scopes",
            "organizations"
        ],
        "title": "AuthorizeResponseOrganization"
    },
    "AuthorizeResponseUser": {
        "properties": {
            "client": {
                "$ref": "#/components/schemas/OAuth2ClientPublic"
            },
            "sub_type": {
                "type": "string",
                "const": "user",
                "title": "Sub Type"
            },
            "sub": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/AuthorizeUser"
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "scopes": {
                "items": {
                    "$ref": "#/components/schemas/Scope"
                },
                "type": "array",
                "title": "Scopes"
            }
        },
        "type": "object",
        "required": [
            "client",
            "sub_type",
            "sub",
            "scopes"
        ],
        "title": "AuthorizeResponseUser"
    },
    "AuthorizeUser": {
        "properties": {
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id"
            },
            "email": {
                "type": "string",
                "format": "email",
                "title": "Email"
            },
            "avatar_url": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Avatar Url"
            }
        },
        "type": "object",
        "required": [
            "id",
            "email",
            "avatar_url"
        ],
        "title": "AuthorizeUser"
    },
    "BenefitAds": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the benefit."
            },
            "type": {
                "type": "string",
                "const": "ads",
                "title": "Type"
            },
            "description": {
                "type": "string",
                "title": "Description",
                "description": "The description of the benefit."
            },
            "selectable": {
                "type": "boolean",
                "title": "Selectable",
                "description": "Whether the benefit is selectable when creating a product."
            },
            "deletable": {
                "type": "boolean",
                "title": "Deletable",
                "description": "Whether the benefit is deletable."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id",
                "description": "The ID of the organization owning the benefit."
            },
            "properties": {
                "$ref": "#/components/schemas/BenefitAdsProperties"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "type",
            "description",
            "selectable",
            "deletable",
            "organization_id",
            "properties"
        ],
        "title": "BenefitAds",
        "description": "A benefit of type `ads`.\n\nUse it so your backers can display ads on your README, website, etc."
    },
    "BenefitAdsCreate": {
        "properties": {
            "type": {
                "type": "string",
                "const": "ads",
                "title": "Type"
            },
            "description": {
                "type": "string",
                "maxLength": 42,
                "minLength": 3,
                "title": "Description",
                "description": "The description of the benefit. Will be displayed on products having this benefit."
            },
            "organization_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4",
                        "description": "The organization ID.",
                        "x-polar-selector-widget": {
                            "displayProperty": "name",
                            "resourceName": "Organization",
                            "resourceRoot": "/v1/organizations"
                        }
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Organization Id",
                "description": "The ID of the organization owning the benefit. **Required unless you use an organization token.**"
            },
            "properties": {
                "$ref": "#/components/schemas/BenefitAdsProperties"
            }
        },
        "type": "object",
        "required": [
            "type",
            "description",
            "properties"
        ],
        "title": "BenefitAdsCreate"
    },
    "BenefitAdsProperties": {
        "properties": {
            "image_height": {
                "type": "integer",
                "title": "Image Height",
                "description": "The height of the displayed ad.",
                "default": 400
            },
            "image_width": {
                "type": "integer",
                "title": "Image Width",
                "description": "The width of the displayed ad.",
                "default": 400
            }
        },
        "type": "object",
        "title": "BenefitAdsProperties",
        "description": "Properties for a benefit of type `ads`."
    },
    "BenefitAdsSubscriber": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the benefit."
            },
            "type": {
                "type": "string",
                "const": "ads",
                "title": "Type"
            },
            "description": {
                "type": "string",
                "title": "Description",
                "description": "The description of the benefit."
            },
            "selectable": {
                "type": "boolean",
                "title": "Selectable",
                "description": "Whether the benefit is selectable when creating a product."
            },
            "deletable": {
                "type": "boolean",
                "title": "Deletable",
                "description": "Whether the benefit is deletable."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id",
                "description": "The ID of the organization owning the benefit."
            },
            "organization": {
                "$ref": "#/components/schemas/Organization"
            },
            "properties": {
                "$ref": "#/components/schemas/BenefitAdsProperties"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "type",
            "description",
            "selectable",
            "deletable",
            "organization_id",
            "organization",
            "properties"
        ],
        "title": "BenefitAdsSubscriber"
    },
    "BenefitAdsUpdate": {
        "properties": {
            "description": {
                "anyOf": [
                    {
                        "type": "string",
                        "maxLength": 42,
                        "minLength": 3
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Description",
                "description": "The description of the benefit. Will be displayed on products having this benefit."
            },
            "type": {
                "type": "string",
                "const": "ads",
                "title": "Type"
            },
            "properties": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/BenefitAdsProperties"
                    },
                    {
                        "type": "null"
                    }
                ]
            }
        },
        "type": "object",
        "required": [
            "type"
        ],
        "title": "BenefitAdsUpdate"
    },
    "BenefitBase": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the benefit."
            },
            "type": {
                "$ref": "#/components/schemas/BenefitType",
                "description": "The type of the benefit."
            },
            "description": {
                "type": "string",
                "title": "Description",
                "description": "The description of the benefit."
            },
            "selectable": {
                "type": "boolean",
                "title": "Selectable",
                "description": "Whether the benefit is selectable when creating a product."
            },
            "deletable": {
                "type": "boolean",
                "title": "Deletable",
                "description": "Whether the benefit is deletable."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id",
                "description": "The ID of the organization owning the benefit."
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "type",
            "description",
            "selectable",
            "deletable",
            "organization_id"
        ],
        "title": "BenefitBase"
    },
    "BenefitCustom": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the benefit."
            },
            "type": {
                "type": "string",
                "const": "custom",
                "title": "Type"
            },
            "description": {
                "type": "string",
                "title": "Description",
                "description": "The description of the benefit."
            },
            "selectable": {
                "type": "boolean",
                "title": "Selectable",
                "description": "Whether the benefit is selectable when creating a product."
            },
            "deletable": {
                "type": "boolean",
                "title": "Deletable",
                "description": "Whether the benefit is deletable."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id",
                "description": "The ID of the organization owning the benefit."
            },
            "properties": {
                "$ref": "#/components/schemas/BenefitCustomProperties"
            },
            "is_tax_applicable": {
                "type": "boolean",
                "title": "Is Tax Applicable",
                "deprecated": true
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "type",
            "description",
            "selectable",
            "deletable",
            "organization_id",
            "properties",
            "is_tax_applicable"
        ],
        "title": "BenefitCustom",
        "description": "A benefit of type `custom`.\n\nUse it to grant any kind of benefit that doesn't fit in the other types."
    },
    "BenefitCustomCreate": {
        "properties": {
            "type": {
                "type": "string",
                "const": "custom",
                "title": "Type"
            },
            "description": {
                "type": "string",
                "maxLength": 42,
                "minLength": 3,
                "title": "Description",
                "description": "The description of the benefit. Will be displayed on products having this benefit."
            },
            "organization_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4",
                        "description": "The organization ID.",
                        "x-polar-selector-widget": {
                            "displayProperty": "name",
                            "resourceName": "Organization",
                            "resourceRoot": "/v1/organizations"
                        }
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Organization Id",
                "description": "The ID of the organization owning the benefit. **Required unless you use an organization token.**"
            },
            "properties": {
                "$ref": "#/components/schemas/BenefitCustomCreateProperties"
            }
        },
        "type": "object",
        "required": [
            "type",
            "description",
            "properties"
        ],
        "title": "BenefitCustomCreate",
        "description": "Schema to create a benefit of type `custom`."
    },
    "BenefitCustomCreateProperties": {
        "properties": {
            "note": {
                "anyOf": [
                    {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Private note to be shared with customers who have this benefit granted."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Note"
            }
        },
        "type": "object",
        "title": "BenefitCustomCreateProperties",
        "description": "Properties for creating a benefit of type `custom`."
    },
    "BenefitCustomProperties": {
        "properties": {
            "note": {
                "anyOf": [
                    {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Private note to be shared with customers who have this benefit granted."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Note"
            }
        },
        "type": "object",
        "required": [
            "note"
        ],
        "title": "BenefitCustomProperties",
        "description": "Properties for a benefit of type `custom`."
    },
    "BenefitCustomSubscriber": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the benefit."
            },
            "type": {
                "type": "string",
                "const": "custom",
                "title": "Type"
            },
            "description": {
                "type": "string",
                "title": "Description",
                "description": "The description of the benefit."
            },
            "selectable": {
                "type": "boolean",
                "title": "Selectable",
                "description": "Whether the benefit is selectable when creating a product."
            },
            "deletable": {
                "type": "boolean",
                "title": "Deletable",
                "description": "Whether the benefit is deletable."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id",
                "description": "The ID of the organization owning the benefit."
            },
            "organization": {
                "$ref": "#/components/schemas/Organization"
            },
            "properties": {
                "$ref": "#/components/schemas/BenefitCustomSubscriberProperties"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "type",
            "description",
            "selectable",
            "deletable",
            "organization_id",
            "organization",
            "properties"
        ],
        "title": "BenefitCustomSubscriber"
    },
    "BenefitCustomSubscriberProperties": {
        "properties": {
            "note": {
                "anyOf": [
                    {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Private note to be shared with customers who have this benefit granted."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Note"
            }
        },
        "type": "object",
        "required": [
            "note"
        ],
        "title": "BenefitCustomSubscriberProperties",
        "description": "Properties available to subscribers for a benefit of type `custom`."
    },
    "BenefitCustomUpdate": {
        "properties": {
            "description": {
                "anyOf": [
                    {
                        "type": "string",
                        "maxLength": 42,
                        "minLength": 3
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Description",
                "description": "The description of the benefit. Will be displayed on products having this benefit."
            },
            "type": {
                "type": "string",
                "const": "custom",
                "title": "Type"
            },
            "properties": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/BenefitCustomProperties"
                    },
                    {
                        "type": "null"
                    }
                ]
            }
        },
        "type": "object",
        "required": [
            "type"
        ],
        "title": "BenefitCustomUpdate"
    },
    "BenefitDiscord": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the benefit."
            },
            "type": {
                "type": "string",
                "const": "discord",
                "title": "Type"
            },
            "description": {
                "type": "string",
                "title": "Description",
                "description": "The description of the benefit."
            },
            "selectable": {
                "type": "boolean",
                "title": "Selectable",
                "description": "Whether the benefit is selectable when creating a product."
            },
            "deletable": {
                "type": "boolean",
                "title": "Deletable",
                "description": "Whether the benefit is deletable."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id",
                "description": "The ID of the organization owning the benefit."
            },
            "properties": {
                "$ref": "#/components/schemas/BenefitDiscordProperties"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "type",
            "description",
            "selectable",
            "deletable",
            "organization_id",
            "properties"
        ],
        "title": "BenefitDiscord",
        "description": "A benefit of type `discord`.\n\nUse it to automatically invite your backers to a Discord server."
    },
    "BenefitDiscordCreate": {
        "properties": {
            "type": {
                "type": "string",
                "const": "discord",
                "title": "Type"
            },
            "description": {
                "type": "string",
                "maxLength": 42,
                "minLength": 3,
                "title": "Description",
                "description": "The description of the benefit. Will be displayed on products having this benefit."
            },
            "organization_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4",
                        "description": "The organization ID.",
                        "x-polar-selector-widget": {
                            "displayProperty": "name",
                            "resourceName": "Organization",
                            "resourceRoot": "/v1/organizations"
                        }
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Organization Id",
                "description": "The ID of the organization owning the benefit. **Required unless you use an organization token.**"
            },
            "properties": {
                "$ref": "#/components/schemas/BenefitDiscordCreateProperties"
            }
        },
        "type": "object",
        "required": [
            "type",
            "description",
            "properties"
        ],
        "title": "BenefitDiscordCreate"
    },
    "BenefitDiscordCreateProperties": {
        "properties": {
            "guild_token": {
                "type": "string",
                "title": "Guild Token"
            },
            "role_id": {
                "type": "string",
                "title": "Role Id",
                "description": "The ID of the Discord role to grant."
            }
        },
        "type": "object",
        "required": [
            "guild_token",
            "role_id"
        ],
        "title": "BenefitDiscordCreateProperties",
        "description": "Properties to create a benefit of type `discord`."
    },
    "BenefitDiscordProperties": {
        "properties": {
            "guild_id": {
                "type": "string",
                "title": "Guild Id",
                "description": "The ID of the Discord server."
            },
            "role_id": {
                "type": "string",
                "title": "Role Id",
                "description": "The ID of the Discord role to grant."
            },
            "guild_token": {
                "type": "string",
                "title": "Guild Token"
            }
        },
        "type": "object",
        "required": [
            "guild_id",
            "role_id",
            "guild_token"
        ],
        "title": "BenefitDiscordProperties",
        "description": "Properties for a benefit of type `discord`."
    },
    "BenefitDiscordSubscriber": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the benefit."
            },
            "type": {
                "type": "string",
                "const": "discord",
                "title": "Type"
            },
            "description": {
                "type": "string",
                "title": "Description",
                "description": "The description of the benefit."
            },
            "selectable": {
                "type": "boolean",
                "title": "Selectable",
                "description": "Whether the benefit is selectable when creating a product."
            },
            "deletable": {
                "type": "boolean",
                "title": "Deletable",
                "description": "Whether the benefit is deletable."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id",
                "description": "The ID of the organization owning the benefit."
            },
            "organization": {
                "$ref": "#/components/schemas/Organization"
            },
            "properties": {
                "$ref": "#/components/schemas/BenefitDiscordSubscriberProperties"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "type",
            "description",
            "selectable",
            "deletable",
            "organization_id",
            "organization",
            "properties"
        ],
        "title": "BenefitDiscordSubscriber"
    },
    "BenefitDiscordSubscriberProperties": {
        "properties": {
            "guild_id": {
                "type": "string",
                "title": "Guild Id",
                "description": "The ID of the Discord server."
            }
        },
        "type": "object",
        "required": [
            "guild_id"
        ],
        "title": "BenefitDiscordSubscriberProperties",
        "description": "Properties available to subscribers for a benefit of type `discord`."
    },
    "BenefitDiscordUpdate": {
        "properties": {
            "description": {
                "anyOf": [
                    {
                        "type": "string",
                        "maxLength": 42,
                        "minLength": 3
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Description",
                "description": "The description of the benefit. Will be displayed on products having this benefit."
            },
            "type": {
                "type": "string",
                "const": "discord",
                "title": "Type"
            },
            "properties": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/BenefitDiscordCreateProperties"
                    },
                    {
                        "type": "null"
                    }
                ]
            }
        },
        "type": "object",
        "required": [
            "type"
        ],
        "title": "BenefitDiscordUpdate"
    },
    "BenefitDownloadables": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the benefit."
            },
            "type": {
                "type": "string",
                "const": "downloadables",
                "title": "Type"
            },
            "description": {
                "type": "string",
                "title": "Description",
                "description": "The description of the benefit."
            },
            "selectable": {
                "type": "boolean",
                "title": "Selectable",
                "description": "Whether the benefit is selectable when creating a product."
            },
            "deletable": {
                "type": "boolean",
                "title": "Deletable",
                "description": "Whether the benefit is deletable."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id",
                "description": "The ID of the organization owning the benefit."
            },
            "properties": {
                "$ref": "#/components/schemas/BenefitDownloadablesProperties"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "type",
            "description",
            "selectable",
            "deletable",
            "organization_id",
            "properties"
        ],
        "title": "BenefitDownloadables"
    },
    "BenefitDownloadablesCreate": {
        "properties": {
            "type": {
                "type": "string",
                "const": "downloadables",
                "title": "Type"
            },
            "description": {
                "type": "string",
                "maxLength": 42,
                "minLength": 3,
                "title": "Description",
                "description": "The description of the benefit. Will be displayed on products having this benefit."
            },
            "organization_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4",
                        "description": "The organization ID.",
                        "x-polar-selector-widget": {
                            "displayProperty": "name",
                            "resourceName": "Organization",
                            "resourceRoot": "/v1/organizations"
                        }
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Organization Id",
                "description": "The ID of the organization owning the benefit. **Required unless you use an organization token.**"
            },
            "properties": {
                "$ref": "#/components/schemas/BenefitDownloadablesCreateProperties"
            }
        },
        "type": "object",
        "required": [
            "type",
            "description",
            "properties"
        ],
        "title": "BenefitDownloadablesCreate"
    },
    "BenefitDownloadablesCreateProperties": {
        "properties": {
            "archived": {
                "additionalProperties": {
                    "type": "boolean"
                },
                "propertyNames": {
                    "format": "uuid4"
                },
                "type": "object",
                "title": "Archived",
                "default": {}
            },
            "files": {
                "items": {
                    "type": "string",
                    "format": "uuid4"
                },
                "type": "array",
                "minItems": 1,
                "title": "Files"
            }
        },
        "type": "object",
        "required": [
            "files"
        ],
        "title": "BenefitDownloadablesCreateProperties"
    },
    "BenefitDownloadablesProperties": {
        "properties": {
            "archived": {
                "additionalProperties": {
                    "type": "boolean"
                },
                "propertyNames": {
                    "format": "uuid4"
                },
                "type": "object",
                "title": "Archived"
            },
            "files": {
                "items": {
                    "type": "string",
                    "format": "uuid4"
                },
                "type": "array",
                "title": "Files"
            }
        },
        "type": "object",
        "required": [
            "archived",
            "files"
        ],
        "title": "BenefitDownloadablesProperties"
    },
    "BenefitDownloadablesSubscriber": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the benefit."
            },
            "type": {
                "type": "string",
                "const": "downloadables",
                "title": "Type"
            },
            "description": {
                "type": "string",
                "title": "Description",
                "description": "The description of the benefit."
            },
            "selectable": {
                "type": "boolean",
                "title": "Selectable",
                "description": "Whether the benefit is selectable when creating a product."
            },
            "deletable": {
                "type": "boolean",
                "title": "Deletable",
                "description": "Whether the benefit is deletable."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id",
                "description": "The ID of the organization owning the benefit."
            },
            "organization": {
                "$ref": "#/components/schemas/Organization"
            },
            "properties": {
                "$ref": "#/components/schemas/BenefitDownloadablesSubscriberProperties"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "type",
            "description",
            "selectable",
            "deletable",
            "organization_id",
            "organization",
            "properties"
        ],
        "title": "BenefitDownloadablesSubscriber"
    },
    "BenefitDownloadablesSubscriberProperties": {
        "properties": {
            "active_files": {
                "items": {
                    "type": "string",
                    "format": "uuid4"
                },
                "type": "array",
                "title": "Active Files"
            }
        },
        "type": "object",
        "required": [
            "active_files"
        ],
        "title": "BenefitDownloadablesSubscriberProperties"
    },
    "BenefitDownloadablesUpdate": {
        "properties": {
            "description": {
                "anyOf": [
                    {
                        "type": "string",
                        "maxLength": 42,
                        "minLength": 3
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Description",
                "description": "The description of the benefit. Will be displayed on products having this benefit."
            },
            "type": {
                "type": "string",
                "const": "downloadables",
                "title": "Type"
            },
            "properties": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/BenefitDownloadablesCreateProperties"
                    },
                    {
                        "type": "null"
                    }
                ]
            }
        },
        "type": "object",
        "required": [
            "type"
        ],
        "title": "BenefitDownloadablesUpdate"
    },
    "BenefitGitHubRepository": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the benefit."
            },
            "type": {
                "type": "string",
                "const": "github_repository",
                "title": "Type"
            },
            "description": {
                "type": "string",
                "title": "Description",
                "description": "The description of the benefit."
            },
            "selectable": {
                "type": "boolean",
                "title": "Selectable",
                "description": "Whether the benefit is selectable when creating a product."
            },
            "deletable": {
                "type": "boolean",
                "title": "Deletable",
                "description": "Whether the benefit is deletable."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id",
                "description": "The ID of the organization owning the benefit."
            },
            "properties": {
                "$ref": "#/components/schemas/BenefitGitHubRepositoryProperties"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "type",
            "description",
            "selectable",
            "deletable",
            "organization_id",
            "properties"
        ],
        "title": "BenefitGitHubRepository",
        "description": "A benefit of type `github_repository`.\n\nUse it to automatically invite your backers to a private GitHub repository."
    },
    "BenefitGitHubRepositoryCreate": {
        "properties": {
            "type": {
                "type": "string",
                "const": "github_repository",
                "title": "Type"
            },
            "description": {
                "type": "string",
                "maxLength": 42,
                "minLength": 3,
                "title": "Description",
                "description": "The description of the benefit. Will be displayed on products having this benefit."
            },
            "organization_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4",
                        "description": "The organization ID.",
                        "x-polar-selector-widget": {
                            "displayProperty": "name",
                            "resourceName": "Organization",
                            "resourceRoot": "/v1/organizations"
                        }
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Organization Id",
                "description": "The ID of the organization owning the benefit. **Required unless you use an organization token.**"
            },
            "properties": {
                "$ref": "#/components/schemas/BenefitGitHubRepositoryCreateProperties"
            }
        },
        "type": "object",
        "required": [
            "type",
            "description",
            "properties"
        ],
        "title": "BenefitGitHubRepositoryCreate"
    },
    "BenefitGitHubRepositoryCreateProperties": {
        "properties": {
            "repository_owner": {
                "type": "string",
                "title": "Repository Owner",
                "description": "The owner of the repository.",
                "examples": [
                    "polarsource"
                ]
            },
            "repository_name": {
                "type": "string",
                "title": "Repository Name",
                "description": "The name of the repository.",
                "examples": [
                    "private_repo"
                ]
            },
            "permission": {
                "type": "string",
                "enum": [
                    "pull",
                    "triage",
                    "push",
                    "maintain",
                    "admin"
                ],
                "title": "Permission",
                "description": "The permission level to grant. Read more about roles and their permissions on [GitHub documentation](https://docs.github.com/en/organizations/managing-user-access-to-your-organizations-repositories/managing-repository-roles/repository-roles-for-an-organization#permissions-for-each-role)."
            }
        },
        "type": "object",
        "required": [
            "repository_owner",
            "repository_name",
            "permission"
        ],
        "title": "BenefitGitHubRepositoryCreateProperties",
        "description": "Properties to create a benefit of type `github_repository`."
    },
    "BenefitGitHubRepositoryProperties": {
        "properties": {
            "repository_owner": {
                "type": "string",
                "title": "Repository Owner",
                "description": "The owner of the repository.",
                "examples": [
                    "polarsource"
                ]
            },
            "repository_name": {
                "type": "string",
                "title": "Repository Name",
                "description": "The name of the repository.",
                "examples": [
                    "private_repo"
                ]
            },
            "permission": {
                "type": "string",
                "enum": [
                    "pull",
                    "triage",
                    "push",
                    "maintain",
                    "admin"
                ],
                "title": "Permission",
                "description": "The permission level to grant. Read more about roles and their permissions on [GitHub documentation](https://docs.github.com/en/organizations/managing-user-access-to-your-organizations-repositories/managing-repository-roles/repository-roles-for-an-organization#permissions-for-each-role)."
            },
            "repository_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Repository Id",
                "deprecated": true
            }
        },
        "type": "object",
        "required": [
            "repository_owner",
            "repository_name",
            "permission"
        ],
        "title": "BenefitGitHubRepositoryProperties",
        "description": "Properties for a benefit of type `github_repository`."
    },
    "BenefitGitHubRepositorySubscriber": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the benefit."
            },
            "type": {
                "type": "string",
                "const": "github_repository",
                "title": "Type"
            },
            "description": {
                "type": "string",
                "title": "Description",
                "description": "The description of the benefit."
            },
            "selectable": {
                "type": "boolean",
                "title": "Selectable",
                "description": "Whether the benefit is selectable when creating a product."
            },
            "deletable": {
                "type": "boolean",
                "title": "Deletable",
                "description": "Whether the benefit is deletable."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id",
                "description": "The ID of the organization owning the benefit."
            },
            "organization": {
                "$ref": "#/components/schemas/Organization"
            },
            "properties": {
                "$ref": "#/components/schemas/BenefitGitHubRepositorySubscriberProperties"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "type",
            "description",
            "selectable",
            "deletable",
            "organization_id",
            "organization",
            "properties"
        ],
        "title": "BenefitGitHubRepositorySubscriber"
    },
    "BenefitGitHubRepositorySubscriberProperties": {
        "properties": {
            "repository_owner": {
                "type": "string",
                "title": "Repository Owner",
                "description": "The owner of the repository.",
                "examples": [
                    "polarsource"
                ]
            },
            "repository_name": {
                "type": "string",
                "title": "Repository Name",
                "description": "The name of the repository.",
                "examples": [
                    "private_repo"
                ]
            }
        },
        "type": "object",
        "required": [
            "repository_owner",
            "repository_name"
        ],
        "title": "BenefitGitHubRepositorySubscriberProperties",
        "description": "Properties available to subscribers for a benefit of type `github_repository`."
    },
    "BenefitGitHubRepositoryUpdate": {
        "properties": {
            "description": {
                "anyOf": [
                    {
                        "type": "string",
                        "maxLength": 42,
                        "minLength": 3
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Description",
                "description": "The description of the benefit. Will be displayed on products having this benefit."
            },
            "type": {
                "type": "string",
                "const": "github_repository",
                "title": "Type"
            },
            "properties": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/BenefitGitHubRepositoryCreateProperties"
                    },
                    {
                        "type": "null"
                    }
                ]
            }
        },
        "type": "object",
        "required": [
            "type"
        ],
        "title": "BenefitGitHubRepositoryUpdate"
    },
    "BenefitGrant": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the grant."
            },
            "granted_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Granted At",
                "description": "The timestamp when the benefit was granted. If `None`, the benefit is not granted."
            },
            "is_granted": {
                "type": "boolean",
                "title": "Is Granted",
                "description": "Whether the benefit is granted."
            },
            "revoked_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Revoked At",
                "description": "The timestamp when the benefit was revoked. If `None`, the benefit is not revoked."
            },
            "is_revoked": {
                "type": "boolean",
                "title": "Is Revoked",
                "description": "Whether the benefit is revoked."
            },
            "subscription_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Subscription Id",
                "description": "The ID of the subscription that granted this benefit."
            },
            "order_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Order Id",
                "description": "The ID of the order that granted this benefit."
            },
            "customer_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Customer Id",
                "description": "The ID of the customer concerned by this grant."
            },
            "user_id": {
                "type": "string",
                "format": "uuid4",
                "title": "User Id",
                "deprecated": true
            },
            "benefit_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Benefit Id",
                "description": "The ID of the benefit concerned by this grant."
            },
            "customer": {
                "$ref": "#/components/schemas/Customer"
            },
            "properties": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/BenefitGrantDiscordProperties"
                    },
                    {
                        "$ref": "#/components/schemas/BenefitGrantGitHubRepositoryProperties"
                    },
                    {
                        "$ref": "#/components/schemas/BenefitGrantDownloadablesProperties"
                    },
                    {
                        "$ref": "#/components/schemas/BenefitGrantLicenseKeysProperties"
                    },
                    {
                        "$ref": "#/components/schemas/BenefitGrantAdsProperties"
                    },
                    {
                        "$ref": "#/components/schemas/BenefitGrantCustomProperties"
                    }
                ],
                "title": "Properties"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "is_granted",
            "is_revoked",
            "subscription_id",
            "order_id",
            "customer_id",
            "user_id",
            "benefit_id",
            "customer",
            "properties"
        ],
        "title": "BenefitGrant"
    },
    "BenefitGrantAdsProperties": {
        "properties": {
            "advertisement_campaign_id": {
                "type": "string",
                "title": "Advertisement Campaign Id"
            }
        },
        "type": "object",
        "required": [
            "advertisement_campaign_id"
        ],
        "title": "BenefitGrantAdsProperties"
    },
    "BenefitGrantCustomProperties": {
        "properties": {},
        "type": "object",
        "title": "BenefitGrantCustomProperties"
    },
    "BenefitGrantDiscordProperties": {
        "properties": {
            "account_id": {
                "type": "string",
                "title": "Account Id"
            },
            "guild_id": {
                "type": "string",
                "title": "Guild Id"
            },
            "role_id": {
                "type": "string",
                "title": "Role Id"
            }
        },
        "type": "object",
        "title": "BenefitGrantDiscordProperties"
    },
    "BenefitGrantDownloadablesProperties": {
        "properties": {
            "files": {
                "items": {
                    "type": "string"
                },
                "type": "array",
                "title": "Files"
            }
        },
        "type": "object",
        "title": "BenefitGrantDownloadablesProperties"
    },
    "BenefitGrantGitHubRepositoryProperties": {
        "properties": {
            "account_id": {
                "type": "string",
                "title": "Account Id"
            },
            "repository_owner": {
                "type": "string",
                "title": "Repository Owner"
            },
            "repository_name": {
                "type": "string",
                "title": "Repository Name"
            },
            "permission": {
                "type": "string",
                "enum": [
                    "pull",
                    "triage",
                    "push",
                    "maintain",
                    "admin"
                ],
                "title": "Permission"
            }
        },
        "type": "object",
        "title": "BenefitGrantGitHubRepositoryProperties"
    },
    "BenefitGrantLicenseKeysProperties": {
        "properties": {
            "license_key_id": {
                "type": "string",
                "title": "License Key Id"
            },
            "display_key": {
                "type": "string",
                "title": "Display Key"
            }
        },
        "type": "object",
        "title": "BenefitGrantLicenseKeysProperties"
    },
    "BenefitGrantWebhook": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the grant."
            },
            "granted_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Granted At",
                "description": "The timestamp when the benefit was granted. If `None`, the benefit is not granted."
            },
            "is_granted": {
                "type": "boolean",
                "title": "Is Granted",
                "description": "Whether the benefit is granted."
            },
            "revoked_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Revoked At",
                "description": "The timestamp when the benefit was revoked. If `None`, the benefit is not revoked."
            },
            "is_revoked": {
                "type": "boolean",
                "title": "Is Revoked",
                "description": "Whether the benefit is revoked."
            },
            "subscription_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Subscription Id",
                "description": "The ID of the subscription that granted this benefit."
            },
            "order_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Order Id",
                "description": "The ID of the order that granted this benefit."
            },
            "customer_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Customer Id",
                "description": "The ID of the customer concerned by this grant."
            },
            "user_id": {
                "type": "string",
                "format": "uuid4",
                "title": "User Id",
                "deprecated": true
            },
            "benefit_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Benefit Id",
                "description": "The ID of the benefit concerned by this grant."
            },
            "customer": {
                "$ref": "#/components/schemas/Customer"
            },
            "properties": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/BenefitGrantDiscordProperties"
                    },
                    {
                        "$ref": "#/components/schemas/BenefitGrantGitHubRepositoryProperties"
                    },
                    {
                        "$ref": "#/components/schemas/BenefitGrantDownloadablesProperties"
                    },
                    {
                        "$ref": "#/components/schemas/BenefitGrantLicenseKeysProperties"
                    },
                    {
                        "$ref": "#/components/schemas/BenefitGrantAdsProperties"
                    },
                    {
                        "$ref": "#/components/schemas/BenefitGrantCustomProperties"
                    }
                ],
                "title": "Properties"
            },
            "benefit": {
                "$ref": "#/components/schemas/Benefit",
                "title": "Benefit"
            },
            "previous_properties": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/BenefitGrantDiscordProperties"
                    },
                    {
                        "$ref": "#/components/schemas/BenefitGrantGitHubRepositoryProperties"
                    },
                    {
                        "$ref": "#/components/schemas/BenefitGrantDownloadablesProperties"
                    },
                    {
                        "$ref": "#/components/schemas/BenefitGrantLicenseKeysProperties"
                    },
                    {
                        "$ref": "#/components/schemas/BenefitGrantAdsProperties"
                    },
                    {
                        "$ref": "#/components/schemas/BenefitGrantCustomProperties"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Previous Properties"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "is_granted",
            "is_revoked",
            "subscription_id",
            "order_id",
            "customer_id",
            "user_id",
            "benefit_id",
            "customer",
            "properties",
            "benefit"
        ],
        "title": "BenefitGrantWebhook"
    },
    "BenefitLicenseKeyActivationProperties": {
        "properties": {
            "limit": {
                "type": "integer",
                "maximum": 50,
                "exclusiveMinimum": 0,
                "title": "Limit"
            },
            "enable_customer_admin": {
                "type": "boolean",
                "title": "Enable Customer Admin"
            }
        },
        "type": "object",
        "required": [
            "limit",
            "enable_customer_admin"
        ],
        "title": "BenefitLicenseKeyActivationProperties"
    },
    "BenefitLicenseKeyExpirationProperties": {
        "properties": {
            "ttl": {
                "type": "integer",
                "exclusiveMinimum": 0,
                "title": "Ttl"
            },
            "timeframe": {
                "type": "string",
                "enum": [
                    "year",
                    "month",
                    "day"
                ],
                "title": "Timeframe"
            }
        },
        "type": "object",
        "required": [
            "ttl",
            "timeframe"
        ],
        "title": "BenefitLicenseKeyExpirationProperties"
    },
    "BenefitLicenseKeys": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the benefit."
            },
            "type": {
                "type": "string",
                "const": "license_keys",
                "title": "Type"
            },
            "description": {
                "type": "string",
                "title": "Description",
                "description": "The description of the benefit."
            },
            "selectable": {
                "type": "boolean",
                "title": "Selectable",
                "description": "Whether the benefit is selectable when creating a product."
            },
            "deletable": {
                "type": "boolean",
                "title": "Deletable",
                "description": "Whether the benefit is deletable."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id",
                "description": "The ID of the organization owning the benefit."
            },
            "properties": {
                "$ref": "#/components/schemas/BenefitLicenseKeysProperties"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "type",
            "description",
            "selectable",
            "deletable",
            "organization_id",
            "properties"
        ],
        "title": "BenefitLicenseKeys"
    },
    "BenefitLicenseKeysCreate": {
        "properties": {
            "type": {
                "type": "string",
                "const": "license_keys",
                "title": "Type"
            },
            "description": {
                "type": "string",
                "maxLength": 42,
                "minLength": 3,
                "title": "Description",
                "description": "The description of the benefit. Will be displayed on products having this benefit."
            },
            "organization_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4",
                        "description": "The organization ID.",
                        "x-polar-selector-widget": {
                            "displayProperty": "name",
                            "resourceName": "Organization",
                            "resourceRoot": "/v1/organizations"
                        }
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Organization Id",
                "description": "The ID of the organization owning the benefit. **Required unless you use an organization token.**"
            },
            "properties": {
                "$ref": "#/components/schemas/BenefitLicenseKeysCreateProperties"
            }
        },
        "type": "object",
        "required": [
            "type",
            "description",
            "properties"
        ],
        "title": "BenefitLicenseKeysCreate"
    },
    "BenefitLicenseKeysCreateProperties": {
        "properties": {
            "prefix": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Prefix"
            },
            "expires": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/BenefitLicenseKeyExpirationProperties"
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "activations": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/BenefitLicenseKeyActivationProperties"
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "limit_usage": {
                "anyOf": [
                    {
                        "type": "integer",
                        "exclusiveMinimum": 0
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Limit Usage"
            }
        },
        "type": "object",
        "title": "BenefitLicenseKeysCreateProperties"
    },
    "BenefitLicenseKeysProperties": {
        "properties": {
            "prefix": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Prefix"
            },
            "expires": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/BenefitLicenseKeyExpirationProperties"
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "activations": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/BenefitLicenseKeyActivationProperties"
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "limit_usage": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Limit Usage"
            }
        },
        "type": "object",
        "required": [
            "prefix",
            "expires",
            "activations",
            "limit_usage"
        ],
        "title": "BenefitLicenseKeysProperties"
    },
    "BenefitLicenseKeysSubscriber": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the benefit."
            },
            "type": {
                "type": "string",
                "const": "license_keys",
                "title": "Type"
            },
            "description": {
                "type": "string",
                "title": "Description",
                "description": "The description of the benefit."
            },
            "selectable": {
                "type": "boolean",
                "title": "Selectable",
                "description": "Whether the benefit is selectable when creating a product."
            },
            "deletable": {
                "type": "boolean",
                "title": "Deletable",
                "description": "Whether the benefit is deletable."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id",
                "description": "The ID of the organization owning the benefit."
            },
            "organization": {
                "$ref": "#/components/schemas/Organization"
            },
            "properties": {
                "$ref": "#/components/schemas/BenefitLicenseKeysSubscriberProperties"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "type",
            "description",
            "selectable",
            "deletable",
            "organization_id",
            "organization",
            "properties"
        ],
        "title": "BenefitLicenseKeysSubscriber"
    },
    "BenefitLicenseKeysSubscriberProperties": {
        "properties": {
            "prefix": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Prefix"
            },
            "expires": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/BenefitLicenseKeyExpirationProperties"
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "activations": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/BenefitLicenseKeyActivationProperties"
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "limit_usage": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Limit Usage"
            }
        },
        "type": "object",
        "required": [
            "prefix",
            "expires",
            "activations",
            "limit_usage"
        ],
        "title": "BenefitLicenseKeysSubscriberProperties"
    },
    "BenefitLicenseKeysUpdate": {
        "properties": {
            "description": {
                "anyOf": [
                    {
                        "type": "string",
                        "maxLength": 42,
                        "minLength": 3
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Description",
                "description": "The description of the benefit. Will be displayed on products having this benefit."
            },
            "type": {
                "type": "string",
                "const": "license_keys",
                "title": "Type"
            },
            "properties": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/BenefitLicenseKeysCreateProperties"
                    },
                    {
                        "type": "null"
                    }
                ]
            }
        },
        "type": "object",
        "required": [
            "type"
        ],
        "title": "BenefitLicenseKeysUpdate"
    },
    "Checkout": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "custom_field_data": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "string",
                            "format": "date-time"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "type": "object",
                "title": "Custom Field Data",
                "description": "Key-value object storing custom field values."
            },
            "payment_processor": {
                "$ref": "#/components/schemas/PaymentProcessor",
                "description": "Payment processor used."
            },
            "status": {
                "$ref": "#/components/schemas/CheckoutStatus",
                "description": "Status of the checkout session."
            },
            "client_secret": {
                "type": "string",
                "title": "Client Secret",
                "description": "Client secret used to update and complete the checkout session from the client."
            },
            "url": {
                "type": "string",
                "title": "Url",
                "description": "URL where the customer can access the checkout session."
            },
            "expires_at": {
                "type": "string",
                "format": "date-time",
                "title": "Expires At",
                "description": "Expiration date and time of the checkout session."
            },
            "success_url": {
                "type": "string",
                "title": "Success Url",
                "description": "URL where the customer will be redirected after a successful payment."
            },
            "embed_origin": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Embed Origin",
                "description": "When checkout is embedded, represents the Origin of the page embedding the checkout. Used as a security measure to send messages only to the embedding page."
            },
            "amount": {
                "anyOf": [
                    {
                        "type": "integer",
                        "maximum": 99999999,
                        "minimum": 50,
                        "description": "Amount to pay in cents. Only useful for custom prices, it'll be ignored for fixed and free prices."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Amount"
            },
            "tax_amount": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Tax Amount",
                "description": "Computed tax amount to pay in cents."
            },
            "currency": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Currency",
                "description": "Currency code of the checkout session."
            },
            "subtotal_amount": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Subtotal Amount",
                "description": "Subtotal amount in cents, including discounts and before tax."
            },
            "total_amount": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Total Amount",
                "description": "Total amount to pay in cents, including discounts and after tax."
            },
            "product_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Product Id",
                "description": "ID of the product to checkout."
            },
            "product_price_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Product Price Id",
                "description": "ID of the product price to checkout."
            },
            "discount_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Discount Id",
                "description": "ID of the discount applied to the checkout."
            },
            "allow_discount_codes": {
                "type": "boolean",
                "title": "Allow Discount Codes",
                "description": "Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it."
            },
            "is_discount_applicable": {
                "type": "boolean",
                "title": "Is Discount Applicable",
                "description": "Whether the discount is applicable to the checkout. Typically, free and custom prices are not discountable."
            },
            "is_free_product_price": {
                "type": "boolean",
                "title": "Is Free Product Price",
                "description": "Whether the product price is free, regardless of discounts."
            },
            "is_payment_required": {
                "type": "boolean",
                "title": "Is Payment Required",
                "description": "Whether the checkout requires payment, e.g. in case of free products or discounts that cover the total amount."
            },
            "is_payment_setup_required": {
                "type": "boolean",
                "title": "Is Payment Setup Required",
                "description": "Whether the checkout requires setting up a payment method, regardless of the amount, e.g. subscriptions that have first free cycles."
            },
            "is_payment_form_required": {
                "type": "boolean",
                "title": "Is Payment Form Required",
                "description": "Whether the checkout requires a payment form, whether because of a payment or payment method setup."
            },
            "customer_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Id"
            },
            "customer_name": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Name",
                "description": "Name of the customer."
            },
            "customer_email": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Email",
                "description": "Email address of the customer."
            },
            "customer_ip_address": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "ipvanyaddress"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Ip Address"
            },
            "customer_billing_address": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/Address",
                        "description": "Billing address of the customer."
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "customer_tax_id": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Tax Id"
            },
            "payment_processor_metadata": {
                "additionalProperties": {
                    "type": "string"
                },
                "type": "object",
                "title": "Payment Processor Metadata"
            },
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "type": "object",
                "title": "Metadata"
            },
            "product": {
                "$ref": "#/components/schemas/CheckoutProduct"
            },
            "product_price": {
                "$ref": "#/components/schemas/ProductPrice"
            },
            "discount": {
                "anyOf": [
                    {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/CheckoutDiscountFixedOnceForeverDuration"
                            },
                            {
                                "$ref": "#/components/schemas/CheckoutDiscountFixedRepeatDuration"
                            },
                            {
                                "$ref": "#/components/schemas/CheckoutDiscountPercentageOnceForeverDuration"
                            },
                            {
                                "$ref": "#/components/schemas/CheckoutDiscountPercentageRepeatDuration"
                            }
                        ]
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Discount"
            },
            "subscription_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Subscription Id"
            },
            "attached_custom_fields": {
                "items": {
                    "$ref": "#/components/schemas/AttachedCustomField"
                },
                "type": "array",
                "title": "Attached Custom Fields"
            },
            "customer_metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "type": "object",
                "title": "Customer Metadata"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "payment_processor",
            "status",
            "client_secret",
            "url",
            "expires_at",
            "success_url",
            "embed_origin",
            "amount",
            "tax_amount",
            "currency",
            "subtotal_amount",
            "total_amount",
            "product_id",
            "product_price_id",
            "discount_id",
            "allow_discount_codes",
            "is_discount_applicable",
            "is_free_product_price",
            "is_payment_required",
            "is_payment_setup_required",
            "is_payment_form_required",
            "customer_id",
            "customer_name",
            "customer_email",
            "customer_ip_address",
            "customer_billing_address",
            "customer_tax_id",
            "payment_processor_metadata",
            "metadata",
            "product",
            "product_price",
            "discount",
            "subscription_id",
            "attached_custom_fields",
            "customer_metadata"
        ],
        "title": "Checkout",
        "description": "Checkout session data retrieved using an access token."
    },
    "CheckoutConfirmStripe": {
        "properties": {
            "custom_field_data": {
                "anyOf": [
                    {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ]
                        },
                        "type": "object"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Custom Field Data",
                "description": "Key-value object storing custom field values."
            },
            "product_price_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Product Price Id",
                "description": "ID of the product price to checkout. Must correspond to a price linked to the same product."
            },
            "amount": {
                "anyOf": [
                    {
                        "type": "integer",
                        "maximum": 99999999,
                        "minimum": 50,
                        "description": "Amount to pay in cents. Only useful for custom prices, it'll be ignored for fixed and free prices."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Amount"
            },
            "customer_name": {
                "anyOf": [
                    {
                        "type": "string",
                        "description": "Name of the customer."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Name"
            },
            "customer_email": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "email",
                        "description": "Email address of the customer."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Email"
            },
            "customer_billing_address": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/Address",
                        "description": "Billing address of the customer."
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "customer_tax_id": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Tax Id"
            },
            "discount_code": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Discount Code",
                "description": "Discount code to apply to the checkout."
            },
            "confirmation_token_id": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Confirmation Token Id",
                "description": "ID of the Stripe confirmation token. Required for fixed prices and custom prices."
            }
        },
        "type": "object",
        "title": "CheckoutConfirmStripe",
        "description": "Confirm a checkout session using a Stripe confirmation token."
    },
    "CheckoutDiscountFixedOnceForeverDuration": {
        "properties": {
            "duration": {
                "$ref": "#/components/schemas/DiscountDuration"
            },
            "type": {
                "$ref": "#/components/schemas/DiscountType"
            },
            "amount": {
                "type": "integer",
                "title": "Amount"
            },
            "currency": {
                "type": "string",
                "title": "Currency"
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "name": {
                "type": "string",
                "title": "Name"
            },
            "code": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Code"
            }
        },
        "type": "object",
        "required": [
            "duration",
            "type",
            "amount",
            "currency",
            "id",
            "name",
            "code"
        ],
        "title": "CheckoutDiscountFixedOnceForeverDuration",
        "description": "Schema for a fixed amount discount that is applied once or forever."
    },
    "CheckoutDiscountFixedRepeatDuration": {
        "properties": {
            "duration": {
                "$ref": "#/components/schemas/DiscountDuration"
            },
            "duration_in_months": {
                "type": "integer",
                "title": "Duration In Months"
            },
            "type": {
                "$ref": "#/components/schemas/DiscountType"
            },
            "amount": {
                "type": "integer",
                "title": "Amount"
            },
            "currency": {
                "type": "string",
                "title": "Currency"
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "name": {
                "type": "string",
                "title": "Name"
            },
            "code": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Code"
            }
        },
        "type": "object",
        "required": [
            "duration",
            "duration_in_months",
            "type",
            "amount",
            "currency",
            "id",
            "name",
            "code"
        ],
        "title": "CheckoutDiscountFixedRepeatDuration",
        "description": "Schema for a fixed amount discount that is applied on every invoice\nfor a certain number of months."
    },
    "CheckoutDiscountPercentageOnceForeverDuration": {
        "properties": {
            "duration": {
                "$ref": "#/components/schemas/DiscountDuration"
            },
            "type": {
                "$ref": "#/components/schemas/DiscountType"
            },
            "basis_points": {
                "type": "integer",
                "title": "Basis Points"
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "name": {
                "type": "string",
                "title": "Name"
            },
            "code": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Code"
            }
        },
        "type": "object",
        "required": [
            "duration",
            "type",
            "basis_points",
            "id",
            "name",
            "code"
        ],
        "title": "CheckoutDiscountPercentageOnceForeverDuration",
        "description": "Schema for a percentage discount that is applied once or forever."
    },
    "CheckoutDiscountPercentageRepeatDuration": {
        "properties": {
            "duration": {
                "$ref": "#/components/schemas/DiscountDuration"
            },
            "duration_in_months": {
                "type": "integer",
                "title": "Duration In Months"
            },
            "type": {
                "$ref": "#/components/schemas/DiscountType"
            },
            "basis_points": {
                "type": "integer",
                "title": "Basis Points"
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "name": {
                "type": "string",
                "title": "Name"
            },
            "code": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Code"
            }
        },
        "type": "object",
        "required": [
            "duration",
            "duration_in_months",
            "type",
            "basis_points",
            "id",
            "name",
            "code"
        ],
        "title": "CheckoutDiscountPercentageRepeatDuration",
        "description": "Schema for a percentage discount that is applied on every invoice\nfor a certain number of months."
    },
    "CheckoutLegacy": {
        "properties": {
            "id": {
                "type": "string",
                "title": "Id",
                "description": "The ID of the checkout."
            },
            "url": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Url",
                "description": "URL the customer should be redirected to complete the purchase."
            },
            "customer_email": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Email"
            },
            "customer_name": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Name"
            },
            "product": {
                "$ref": "#/components/schemas/CheckoutProduct"
            },
            "product_price": {
                "$ref": "#/components/schemas/ProductPrice"
            }
        },
        "type": "object",
        "required": [
            "id",
            "customer_email",
            "customer_name",
            "product",
            "product_price"
        ],
        "title": "CheckoutLegacy",
        "description": "A checkout session."
    },
    "CheckoutLegacyCreate": {
        "properties": {
            "product_price_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Product Price Id",
                "description": "ID of the product price to subscribe to."
            },
            "success_url": {
                "type": "string",
                "minLength": 1,
                "format": "uri",
                "title": "Success Url",
                "description": "URL where the customer will be redirected after a successful subscription. You can add the `session_id={CHECKOUT_SESSION_ID}` query parameter to retrieve the checkout session id."
            },
            "customer_email": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "email"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Email",
                "description": "If you already know the email of your customer, you can set it. It'll be pre-filled on the checkout page."
            },
            "subscription_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Subscription Id",
                "description": "ID of the subscription to update. If not provided, a new subscription will be created."
            }
        },
        "type": "object",
        "required": [
            "product_price_id",
            "success_url"
        ],
        "title": "CheckoutLegacyCreate"
    },
    "CheckoutLink": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "type": "object",
                "title": "Metadata"
            },
            "payment_processor": {
                "$ref": "#/components/schemas/PaymentProcessor",
                "description": "Payment processor used."
            },
            "client_secret": {
                "type": "string",
                "title": "Client Secret",
                "description": "Client secret used to access the checkout link."
            },
            "success_url": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Success Url",
                "description": "URL where the customer will be redirected after a successful payment."
            },
            "label": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Label",
                "description": "Optional label to distinguish links internally"
            },
            "allow_discount_codes": {
                "type": "boolean",
                "title": "Allow Discount Codes",
                "description": "Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it."
            },
            "product_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Product Id",
                "description": "ID of the product to checkout."
            },
            "product_price_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Product Price Id",
                "description": "ID of the product price to checkout. First available price will be selected unless an explicit price ID is set."
            },
            "discount_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Discount Id",
                "description": "ID of the discount to apply to the checkout. If the discount is not applicable anymore when opening the checkout link, it'll be ignored."
            },
            "product": {
                "$ref": "#/components/schemas/CheckoutLinkProduct"
            },
            "product_price": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/ProductPrice"
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "discount": {
                "anyOf": [
                    {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DiscountFixedOnceForeverDurationBase"
                            },
                            {
                                "$ref": "#/components/schemas/DiscountFixedRepeatDurationBase"
                            },
                            {
                                "$ref": "#/components/schemas/DiscountPercentageOnceForeverDurationBase"
                            },
                            {
                                "$ref": "#/components/schemas/DiscountPercentageRepeatDurationBase"
                            }
                        ],
                        "title": "CheckoutLinkDiscount"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Discount"
            },
            "url": {
                "type": "string",
                "title": "Url"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "metadata",
            "payment_processor",
            "client_secret",
            "success_url",
            "label",
            "allow_discount_codes",
            "product_id",
            "product_price_id",
            "discount_id",
            "product",
            "product_price",
            "discount",
            "url"
        ],
        "title": "CheckoutLink",
        "description": "Checkout link data."
    },
    "CheckoutLinkPriceCreate": {
        "properties": {
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string",
                            "maxLength": 500,
                            "minLength": 1
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "propertyNames": {
                    "maxLength": 40,
                    "minLength": 1
                },
                "type": "object",
                "maxProperties": 50,
                "title": "Metadata",
                "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
            },
            "payment_processor": {
                "type": "string",
                "const": "stripe",
                "title": "Payment Processor",
                "description": "Payment processor to use. Currently only Stripe is supported."
            },
            "label": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Label",
                "description": "Optional label to distinguish links internally"
            },
            "allow_discount_codes": {
                "type": "boolean",
                "title": "Allow Discount Codes",
                "description": "Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it.",
                "default": true
            },
            "discount_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Discount Id",
                "description": "ID of the discount to apply to the checkout. If the discount is not applicable anymore when opening the checkout link, it'll be ignored."
            },
            "success_url": {
                "anyOf": [
                    {
                        "type": "string",
                        "maxLength": 2083,
                        "minLength": 1,
                        "format": "uri"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Success Url",
                "description": "URL where the customer will be redirected after a successful payment.You can add the `checkout_id={CHECKOUT_ID}` query parameter to retrieve the checkout session id."
            },
            "product_price_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Product Price Id",
                "description": "ID of the product price to checkout."
            }
        },
        "type": "object",
        "required": [
            "payment_processor",
            "product_price_id"
        ],
        "title": "CheckoutLinkPriceCreate"
    },
    "CheckoutLinkProduct": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the product."
            },
            "name": {
                "type": "string",
                "title": "Name",
                "description": "The name of the product."
            },
            "description": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Description",
                "description": "The description of the product."
            },
            "is_recurring": {
                "type": "boolean",
                "title": "Is Recurring",
                "description": "Whether the product is a subscription tier."
            },
            "is_archived": {
                "type": "boolean",
                "title": "Is Archived",
                "description": "Whether the product is archived and no longer available."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id",
                "description": "The ID of the organization owning the product."
            },
            "prices": {
                "items": {
                    "$ref": "#/components/schemas/ProductPrice"
                },
                "type": "array",
                "title": "Prices",
                "description": "List of prices for this product."
            },
            "benefits": {
                "items": {
                    "$ref": "#/components/schemas/BenefitBase"
                },
                "type": "array",
                "title": "BenefitPublic",
                "description": "List of benefits granted by the product."
            },
            "medias": {
                "items": {
                    "$ref": "#/components/schemas/ProductMediaFileRead"
                },
                "type": "array",
                "title": "Medias",
                "description": "List of medias associated to the product."
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "name",
            "description",
            "is_recurring",
            "is_archived",
            "organization_id",
            "prices",
            "benefits",
            "medias"
        ],
        "title": "CheckoutLinkProduct",
        "description": "Product data for a checkout link."
    },
    "CheckoutLinkProductCreate": {
        "properties": {
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string",
                            "maxLength": 500,
                            "minLength": 1
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "propertyNames": {
                    "maxLength": 40,
                    "minLength": 1
                },
                "type": "object",
                "maxProperties": 50,
                "title": "Metadata",
                "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
            },
            "payment_processor": {
                "type": "string",
                "const": "stripe",
                "title": "Payment Processor",
                "description": "Payment processor to use. Currently only Stripe is supported."
            },
            "label": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Label",
                "description": "Optional label to distinguish links internally"
            },
            "allow_discount_codes": {
                "type": "boolean",
                "title": "Allow Discount Codes",
                "description": "Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it.",
                "default": true
            },
            "discount_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Discount Id",
                "description": "ID of the discount to apply to the checkout. If the discount is not applicable anymore when opening the checkout link, it'll be ignored."
            },
            "success_url": {
                "anyOf": [
                    {
                        "type": "string",
                        "maxLength": 2083,
                        "minLength": 1,
                        "format": "uri"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Success Url",
                "description": "URL where the customer will be redirected after a successful payment.You can add the `checkout_id={CHECKOUT_ID}` query parameter to retrieve the checkout session id."
            },
            "product_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Product Id",
                "description": "ID of the product to checkout. First available price will be selected."
            }
        },
        "type": "object",
        "required": [
            "payment_processor",
            "product_id"
        ],
        "title": "CheckoutLinkProductCreate"
    },
    "CheckoutLinkUpdate": {
        "properties": {
            "metadata": {
                "anyOf": [
                    {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "maxLength": 500,
                                    "minLength": 1
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "propertyNames": {
                            "maxLength": 40,
                            "minLength": 1
                        },
                        "type": "object",
                        "maxProperties": 50,
                        "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Metadata"
            },
            "label": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Label"
            },
            "allow_discount_codes": {
                "anyOf": [
                    {
                        "type": "boolean"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Allow Discount Codes",
                "description": "Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it."
            },
            "product_price_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Product Price Id"
            },
            "discount_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Discount Id",
                "description": "ID of the discount to apply to the checkout. If the discount is not applicable anymore when opening the checkout link, it'll be ignored."
            },
            "success_url": {
                "anyOf": [
                    {
                        "type": "string",
                        "maxLength": 2083,
                        "minLength": 1,
                        "format": "uri"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Success Url",
                "description": "URL where the customer will be redirected after a successful payment.You can add the `checkout_id={CHECKOUT_ID}` query parameter to retrieve the checkout session id."
            }
        },
        "type": "object",
        "title": "CheckoutLinkUpdate",
        "description": "Schema to update an existing checkout link."
    },
    "CheckoutPriceCreate": {
        "properties": {
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string",
                            "maxLength": 500,
                            "minLength": 1
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "propertyNames": {
                    "maxLength": 40,
                    "minLength": 1
                },
                "type": "object",
                "maxProperties": 50,
                "title": "Metadata",
                "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
            },
            "custom_field_data": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "string",
                            "format": "date-time"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "type": "object",
                "title": "Custom Field Data",
                "description": "Key-value object storing custom field values."
            },
            "discount_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Discount Id",
                "description": "ID of the discount to apply to the checkout."
            },
            "allow_discount_codes": {
                "type": "boolean",
                "title": "Allow Discount Codes",
                "description": "Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it.",
                "default": true
            },
            "amount": {
                "anyOf": [
                    {
                        "type": "integer",
                        "maximum": 99999999,
                        "minimum": 50,
                        "description": "Amount to pay in cents. Only useful for custom prices, it'll be ignored for fixed and free prices."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Amount"
            },
            "customer_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Id",
                "description": "ID of an existing customer in the organization. The customer data will be pre-filled in the checkout form. The resulting order will be linked to this customer."
            },
            "customer_name": {
                "anyOf": [
                    {
                        "type": "string",
                        "description": "Name of the customer."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Name"
            },
            "customer_email": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "email",
                        "description": "Email address of the customer."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Email"
            },
            "customer_ip_address": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "ipvanyaddress"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Ip Address"
            },
            "customer_billing_address": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/Address",
                        "description": "Billing address of the customer."
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "customer_tax_id": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Tax Id"
            },
            "customer_metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string",
                            "maxLength": 500,
                            "minLength": 1
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "propertyNames": {
                    "maxLength": 40,
                    "minLength": 1
                },
                "type": "object",
                "maxProperties": 50,
                "title": "Customer Metadata",
                "description": "Key-value object allowing you to store additional information that'll be copied to the created customer.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
            },
            "subscription_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Subscription Id",
                "description": "ID of a subscription to upgrade. It must be on a free pricing. If checkout is successful, metadata set on this checkout will be copied to the subscription, and existing keys will be overwritten."
            },
            "success_url": {
                "anyOf": [
                    {
                        "type": "string",
                        "maxLength": 2083,
                        "minLength": 1,
                        "format": "uri"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Success Url",
                "description": "URL where the customer will be redirected after a successful payment.You can add the `checkout_id={CHECKOUT_ID}` query parameter to retrieve the checkout session id."
            },
            "embed_origin": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Embed Origin",
                "description": "If you plan to embed the checkout session, set this to the Origin of the embedding page. It'll allow the Polar iframe to communicate with the parent page."
            },
            "product_price_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Product Price Id",
                "description": "ID of the product price to checkout."
            }
        },
        "type": "object",
        "required": [
            "product_price_id"
        ],
        "title": "CheckoutPriceCreate",
        "description": "Create a new checkout session from a product price.\n\nMetadata set on the checkout will be copied\nto the resulting order and/or subscription."
    },
    "CheckoutProduct": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the product."
            },
            "name": {
                "type": "string",
                "title": "Name",
                "description": "The name of the product."
            },
            "description": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Description",
                "description": "The description of the product."
            },
            "is_recurring": {
                "type": "boolean",
                "title": "Is Recurring",
                "description": "Whether the product is a subscription tier."
            },
            "is_archived": {
                "type": "boolean",
                "title": "Is Archived",
                "description": "Whether the product is archived and no longer available."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id",
                "description": "The ID of the organization owning the product."
            },
            "prices": {
                "items": {
                    "$ref": "#/components/schemas/ProductPrice"
                },
                "type": "array",
                "title": "Prices",
                "description": "List of prices for this product."
            },
            "benefits": {
                "items": {
                    "$ref": "#/components/schemas/BenefitBase"
                },
                "type": "array",
                "title": "BenefitPublic",
                "description": "List of benefits granted by the product."
            },
            "medias": {
                "items": {
                    "$ref": "#/components/schemas/ProductMediaFileRead"
                },
                "type": "array",
                "title": "Medias",
                "description": "List of medias associated to the product."
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "name",
            "description",
            "is_recurring",
            "is_archived",
            "organization_id",
            "prices",
            "benefits",
            "medias"
        ],
        "title": "CheckoutProduct",
        "description": "Product data for a checkout session."
    },
    "CheckoutProductCreate": {
        "properties": {
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string",
                            "maxLength": 500,
                            "minLength": 1
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "propertyNames": {
                    "maxLength": 40,
                    "minLength": 1
                },
                "type": "object",
                "maxProperties": 50,
                "title": "Metadata",
                "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
            },
            "custom_field_data": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "string",
                            "format": "date-time"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "type": "object",
                "title": "Custom Field Data",
                "description": "Key-value object storing custom field values."
            },
            "discount_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Discount Id",
                "description": "ID of the discount to apply to the checkout."
            },
            "allow_discount_codes": {
                "type": "boolean",
                "title": "Allow Discount Codes",
                "description": "Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it.",
                "default": true
            },
            "amount": {
                "anyOf": [
                    {
                        "type": "integer",
                        "maximum": 99999999,
                        "minimum": 50,
                        "description": "Amount to pay in cents. Only useful for custom prices, it'll be ignored for fixed and free prices."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Amount"
            },
            "customer_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Id",
                "description": "ID of an existing customer in the organization. The customer data will be pre-filled in the checkout form. The resulting order will be linked to this customer."
            },
            "customer_name": {
                "anyOf": [
                    {
                        "type": "string",
                        "description": "Name of the customer."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Name"
            },
            "customer_email": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "email",
                        "description": "Email address of the customer."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Email"
            },
            "customer_ip_address": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "ipvanyaddress"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Ip Address"
            },
            "customer_billing_address": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/Address",
                        "description": "Billing address of the customer."
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "customer_tax_id": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Tax Id"
            },
            "customer_metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string",
                            "maxLength": 500,
                            "minLength": 1
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "propertyNames": {
                    "maxLength": 40,
                    "minLength": 1
                },
                "type": "object",
                "maxProperties": 50,
                "title": "Customer Metadata",
                "description": "Key-value object allowing you to store additional information that'll be copied to the created customer.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
            },
            "subscription_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Subscription Id",
                "description": "ID of a subscription to upgrade. It must be on a free pricing. If checkout is successful, metadata set on this checkout will be copied to the subscription, and existing keys will be overwritten."
            },
            "success_url": {
                "anyOf": [
                    {
                        "type": "string",
                        "maxLength": 2083,
                        "minLength": 1,
                        "format": "uri"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Success Url",
                "description": "URL where the customer will be redirected after a successful payment.You can add the `checkout_id={CHECKOUT_ID}` query parameter to retrieve the checkout session id."
            },
            "embed_origin": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Embed Origin",
                "description": "If you plan to embed the checkout session, set this to the Origin of the embedding page. It'll allow the Polar iframe to communicate with the parent page."
            },
            "product_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Product Id",
                "description": "ID of the product to checkout. First available price will be selected."
            }
        },
        "type": "object",
        "required": [
            "product_id"
        ],
        "title": "CheckoutProductCreate",
        "description": "Create a new checkout session from a product.\n\nMetadata set on the checkout will be copied\nto the resulting order and/or subscription."
    },
    "CheckoutPublic": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "custom_field_data": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "string",
                            "format": "date-time"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "type": "object",
                "title": "Custom Field Data",
                "description": "Key-value object storing custom field values."
            },
            "payment_processor": {
                "$ref": "#/components/schemas/PaymentProcessor",
                "description": "Payment processor used."
            },
            "status": {
                "$ref": "#/components/schemas/CheckoutStatus",
                "description": "Status of the checkout session."
            },
            "client_secret": {
                "type": "string",
                "title": "Client Secret",
                "description": "Client secret used to update and complete the checkout session from the client."
            },
            "url": {
                "type": "string",
                "title": "Url",
                "description": "URL where the customer can access the checkout session."
            },
            "expires_at": {
                "type": "string",
                "format": "date-time",
                "title": "Expires At",
                "description": "Expiration date and time of the checkout session."
            },
            "success_url": {
                "type": "string",
                "title": "Success Url",
                "description": "URL where the customer will be redirected after a successful payment."
            },
            "embed_origin": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Embed Origin",
                "description": "When checkout is embedded, represents the Origin of the page embedding the checkout. Used as a security measure to send messages only to the embedding page."
            },
            "amount": {
                "anyOf": [
                    {
                        "type": "integer",
                        "maximum": 99999999,
                        "minimum": 50,
                        "description": "Amount to pay in cents. Only useful for custom prices, it'll be ignored for fixed and free prices."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Amount"
            },
            "tax_amount": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Tax Amount",
                "description": "Computed tax amount to pay in cents."
            },
            "currency": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Currency",
                "description": "Currency code of the checkout session."
            },
            "subtotal_amount": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Subtotal Amount",
                "description": "Subtotal amount in cents, including discounts and before tax."
            },
            "total_amount": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Total Amount",
                "description": "Total amount to pay in cents, including discounts and after tax."
            },
            "product_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Product Id",
                "description": "ID of the product to checkout."
            },
            "product_price_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Product Price Id",
                "description": "ID of the product price to checkout."
            },
            "discount_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Discount Id",
                "description": "ID of the discount applied to the checkout."
            },
            "allow_discount_codes": {
                "type": "boolean",
                "title": "Allow Discount Codes",
                "description": "Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it."
            },
            "is_discount_applicable": {
                "type": "boolean",
                "title": "Is Discount Applicable",
                "description": "Whether the discount is applicable to the checkout. Typically, free and custom prices are not discountable."
            },
            "is_free_product_price": {
                "type": "boolean",
                "title": "Is Free Product Price",
                "description": "Whether the product price is free, regardless of discounts."
            },
            "is_payment_required": {
                "type": "boolean",
                "title": "Is Payment Required",
                "description": "Whether the checkout requires payment, e.g. in case of free products or discounts that cover the total amount."
            },
            "is_payment_setup_required": {
                "type": "boolean",
                "title": "Is Payment Setup Required",
                "description": "Whether the checkout requires setting up a payment method, regardless of the amount, e.g. subscriptions that have first free cycles."
            },
            "is_payment_form_required": {
                "type": "boolean",
                "title": "Is Payment Form Required",
                "description": "Whether the checkout requires a payment form, whether because of a payment or payment method setup."
            },
            "customer_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Id"
            },
            "customer_name": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Name",
                "description": "Name of the customer."
            },
            "customer_email": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Email",
                "description": "Email address of the customer."
            },
            "customer_ip_address": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "ipvanyaddress"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Ip Address"
            },
            "customer_billing_address": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/Address",
                        "description": "Billing address of the customer."
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "customer_tax_id": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Tax Id"
            },
            "payment_processor_metadata": {
                "additionalProperties": {
                    "type": "string"
                },
                "type": "object",
                "title": "Payment Processor Metadata"
            },
            "product": {
                "$ref": "#/components/schemas/CheckoutProduct"
            },
            "product_price": {
                "$ref": "#/components/schemas/ProductPrice"
            },
            "discount": {
                "anyOf": [
                    {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/CheckoutDiscountFixedOnceForeverDuration"
                            },
                            {
                                "$ref": "#/components/schemas/CheckoutDiscountFixedRepeatDuration"
                            },
                            {
                                "$ref": "#/components/schemas/CheckoutDiscountPercentageOnceForeverDuration"
                            },
                            {
                                "$ref": "#/components/schemas/CheckoutDiscountPercentageRepeatDuration"
                            }
                        ]
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Discount"
            },
            "organization": {
                "$ref": "#/components/schemas/Organization"
            },
            "attached_custom_fields": {
                "items": {
                    "$ref": "#/components/schemas/AttachedCustomField"
                },
                "type": "array",
                "title": "Attached Custom Fields"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "payment_processor",
            "status",
            "client_secret",
            "url",
            "expires_at",
            "success_url",
            "embed_origin",
            "amount",
            "tax_amount",
            "currency",
            "subtotal_amount",
            "total_amount",
            "product_id",
            "product_price_id",
            "discount_id",
            "allow_discount_codes",
            "is_discount_applicable",
            "is_free_product_price",
            "is_payment_required",
            "is_payment_setup_required",
            "is_payment_form_required",
            "customer_id",
            "customer_name",
            "customer_email",
            "customer_ip_address",
            "customer_billing_address",
            "customer_tax_id",
            "payment_processor_metadata",
            "product",
            "product_price",
            "discount",
            "organization",
            "attached_custom_fields"
        ],
        "title": "CheckoutPublic",
        "description": "Checkout session data retrieved using the client secret."
    },
    "CheckoutPublicConfirmed": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "custom_field_data": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "string",
                            "format": "date-time"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "type": "object",
                "title": "Custom Field Data",
                "description": "Key-value object storing custom field values."
            },
            "payment_processor": {
                "$ref": "#/components/schemas/PaymentProcessor",
                "description": "Payment processor used."
            },
            "status": {
                "type": "string",
                "const": "confirmed",
                "title": "Status"
            },
            "client_secret": {
                "type": "string",
                "title": "Client Secret",
                "description": "Client secret used to update and complete the checkout session from the client."
            },
            "url": {
                "type": "string",
                "title": "Url",
                "description": "URL where the customer can access the checkout session."
            },
            "expires_at": {
                "type": "string",
                "format": "date-time",
                "title": "Expires At",
                "description": "Expiration date and time of the checkout session."
            },
            "success_url": {
                "type": "string",
                "title": "Success Url",
                "description": "URL where the customer will be redirected after a successful payment."
            },
            "embed_origin": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Embed Origin",
                "description": "When checkout is embedded, represents the Origin of the page embedding the checkout. Used as a security measure to send messages only to the embedding page."
            },
            "amount": {
                "anyOf": [
                    {
                        "type": "integer",
                        "maximum": 99999999,
                        "minimum": 50,
                        "description": "Amount to pay in cents. Only useful for custom prices, it'll be ignored for fixed and free prices."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Amount"
            },
            "tax_amount": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Tax Amount",
                "description": "Computed tax amount to pay in cents."
            },
            "currency": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Currency",
                "description": "Currency code of the checkout session."
            },
            "subtotal_amount": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Subtotal Amount",
                "description": "Subtotal amount in cents, including discounts and before tax."
            },
            "total_amount": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Total Amount",
                "description": "Total amount to pay in cents, including discounts and after tax."
            },
            "product_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Product Id",
                "description": "ID of the product to checkout."
            },
            "product_price_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Product Price Id",
                "description": "ID of the product price to checkout."
            },
            "discount_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Discount Id",
                "description": "ID of the discount applied to the checkout."
            },
            "allow_discount_codes": {
                "type": "boolean",
                "title": "Allow Discount Codes",
                "description": "Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it."
            },
            "is_discount_applicable": {
                "type": "boolean",
                "title": "Is Discount Applicable",
                "description": "Whether the discount is applicable to the checkout. Typically, free and custom prices are not discountable."
            },
            "is_free_product_price": {
                "type": "boolean",
                "title": "Is Free Product Price",
                "description": "Whether the product price is free, regardless of discounts."
            },
            "is_payment_required": {
                "type": "boolean",
                "title": "Is Payment Required",
                "description": "Whether the checkout requires payment, e.g. in case of free products or discounts that cover the total amount."
            },
            "is_payment_setup_required": {
                "type": "boolean",
                "title": "Is Payment Setup Required",
                "description": "Whether the checkout requires setting up a payment method, regardless of the amount, e.g. subscriptions that have first free cycles."
            },
            "is_payment_form_required": {
                "type": "boolean",
                "title": "Is Payment Form Required",
                "description": "Whether the checkout requires a payment form, whether because of a payment or payment method setup."
            },
            "customer_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Id"
            },
            "customer_name": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Name",
                "description": "Name of the customer."
            },
            "customer_email": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Email",
                "description": "Email address of the customer."
            },
            "customer_ip_address": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "ipvanyaddress"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Ip Address"
            },
            "customer_billing_address": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/Address",
                        "description": "Billing address of the customer."
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "customer_tax_id": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Tax Id"
            },
            "payment_processor_metadata": {
                "additionalProperties": {
                    "type": "string"
                },
                "type": "object",
                "title": "Payment Processor Metadata"
            },
            "product": {
                "$ref": "#/components/schemas/CheckoutProduct"
            },
            "product_price": {
                "$ref": "#/components/schemas/ProductPrice"
            },
            "discount": {
                "anyOf": [
                    {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/CheckoutDiscountFixedOnceForeverDuration"
                            },
                            {
                                "$ref": "#/components/schemas/CheckoutDiscountFixedRepeatDuration"
                            },
                            {
                                "$ref": "#/components/schemas/CheckoutDiscountPercentageOnceForeverDuration"
                            },
                            {
                                "$ref": "#/components/schemas/CheckoutDiscountPercentageRepeatDuration"
                            }
                        ]
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Discount"
            },
            "organization": {
                "$ref": "#/components/schemas/Organization"
            },
            "attached_custom_fields": {
                "items": {
                    "$ref": "#/components/schemas/AttachedCustomField"
                },
                "type": "array",
                "title": "Attached Custom Fields"
            },
            "customer_session_token": {
                "type": "string",
                "title": "Customer Session Token"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "payment_processor",
            "status",
            "client_secret",
            "url",
            "expires_at",
            "success_url",
            "embed_origin",
            "amount",
            "tax_amount",
            "currency",
            "subtotal_amount",
            "total_amount",
            "product_id",
            "product_price_id",
            "discount_id",
            "allow_discount_codes",
            "is_discount_applicable",
            "is_free_product_price",
            "is_payment_required",
            "is_payment_setup_required",
            "is_payment_form_required",
            "customer_id",
            "customer_name",
            "customer_email",
            "customer_ip_address",
            "customer_billing_address",
            "customer_tax_id",
            "payment_processor_metadata",
            "product",
            "product_price",
            "discount",
            "organization",
            "attached_custom_fields",
            "customer_session_token"
        ],
        "title": "CheckoutPublicConfirmed",
        "description": "Checkout session data retrieved using the client secret after confirmation.\n\nIt contains a customer session token to retrieve order information\nright after the checkout."
    },
    "CheckoutUpdate": {
        "properties": {
            "custom_field_data": {
                "anyOf": [
                    {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ]
                        },
                        "type": "object"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Custom Field Data",
                "description": "Key-value object storing custom field values."
            },
            "product_price_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Product Price Id",
                "description": "ID of the product price to checkout. Must correspond to a price linked to the same product."
            },
            "amount": {
                "anyOf": [
                    {
                        "type": "integer",
                        "maximum": 99999999,
                        "minimum": 50,
                        "description": "Amount to pay in cents. Only useful for custom prices, it'll be ignored for fixed and free prices."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Amount"
            },
            "customer_name": {
                "anyOf": [
                    {
                        "type": "string",
                        "description": "Name of the customer."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Name"
            },
            "customer_email": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "email",
                        "description": "Email address of the customer."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Email"
            },
            "customer_billing_address": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/Address",
                        "description": "Billing address of the customer."
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "customer_tax_id": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Tax Id"
            },
            "metadata": {
                "anyOf": [
                    {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "maxLength": 500,
                                    "minLength": 1
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "propertyNames": {
                            "maxLength": 40,
                            "minLength": 1
                        },
                        "type": "object",
                        "maxProperties": 50,
                        "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Metadata"
            },
            "discount_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Discount Id",
                "description": "ID of the discount to apply to the checkout."
            },
            "allow_discount_codes": {
                "anyOf": [
                    {
                        "type": "boolean"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Allow Discount Codes",
                "description": "Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it."
            },
            "customer_ip_address": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "ipvanyaddress"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Ip Address"
            },
            "customer_metadata": {
                "anyOf": [
                    {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "maxLength": 500,
                                    "minLength": 1
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "propertyNames": {
                            "maxLength": 40,
                            "minLength": 1
                        },
                        "type": "object",
                        "maxProperties": 50,
                        "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Metadata",
                "description": "Key-value object allowing you to store additional information that'll be copied to the created customer.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
            },
            "success_url": {
                "anyOf": [
                    {
                        "type": "string",
                        "maxLength": 2083,
                        "minLength": 1,
                        "format": "uri"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Success Url",
                "description": "URL where the customer will be redirected after a successful payment.You can add the `checkout_id={CHECKOUT_ID}` query parameter to retrieve the checkout session id."
            },
            "embed_origin": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Embed Origin",
                "description": "If you plan to embed the checkout session, set this to the Origin of the embedding page. It'll allow the Polar iframe to communicate with the parent page."
            }
        },
        "type": "object",
        "title": "CheckoutUpdate",
        "description": "Update an existing checkout session using an access token."
    },
    "CheckoutUpdatePublic": {
        "properties": {
            "custom_field_data": {
                "anyOf": [
                    {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ]
                        },
                        "type": "object"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Custom Field Data",
                "description": "Key-value object storing custom field values."
            },
            "product_price_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Product Price Id",
                "description": "ID of the product price to checkout. Must correspond to a price linked to the same product."
            },
            "amount": {
                "anyOf": [
                    {
                        "type": "integer",
                        "maximum": 99999999,
                        "minimum": 50,
                        "description": "Amount to pay in cents. Only useful for custom prices, it'll be ignored for fixed and free prices."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Amount"
            },
            "customer_name": {
                "anyOf": [
                    {
                        "type": "string",
                        "description": "Name of the customer."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Name"
            },
            "customer_email": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "email",
                        "description": "Email address of the customer."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Email"
            },
            "customer_billing_address": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/Address",
                        "description": "Billing address of the customer."
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "customer_tax_id": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Tax Id"
            },
            "discount_code": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Discount Code",
                "description": "Discount code to apply to the checkout."
            }
        },
        "type": "object",
        "title": "CheckoutUpdatePublic",
        "description": "Update an existing checkout session using the client secret."
    },
    "CurrencyAmount": {
        "properties": {
            "currency": {
                "type": "string",
                "title": "Currency",
                "description": "Three letter currency code (eg: USD)"
            },
            "amount": {
                "type": "integer",
                "title": "Amount",
                "description": "Amount in the currencies smallest unit (cents if currency is USD)"
            }
        },
        "type": "object",
        "required": [
            "currency",
            "amount"
        ],
        "title": "CurrencyAmount"
    },
    "CustomFieldCheckbox": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "type": "object",
                "title": "Metadata"
            },
            "type": {
                "type": "string",
                "const": "checkbox",
                "title": "Type"
            },
            "slug": {
                "type": "string",
                "title": "Slug",
                "description": "Identifier of the custom field. It'll be used as key when storing the value."
            },
            "name": {
                "type": "string",
                "title": "Name",
                "description": "Name of the custom field."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id",
                "description": "The ID of the organization owning the custom field.",
                "x-polar-selector-widget": {
                    "displayProperty": "name",
                    "resourceName": "Organization",
                    "resourceRoot": "/v1/organizations"
                }
            },
            "properties": {
                "$ref": "#/components/schemas/CustomFieldCheckboxProperties"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "metadata",
            "type",
            "slug",
            "name",
            "organization_id",
            "properties"
        ],
        "title": "CustomFieldCheckbox",
        "description": "Schema for a custom field of type checkbox."
    },
    "CustomFieldCheckboxProperties": {
        "properties": {
            "form_label": {
                "type": "string",
                "minLength": 1,
                "title": "Form Label"
            },
            "form_help_text": {
                "type": "string",
                "minLength": 1,
                "title": "Form Help Text"
            },
            "form_placeholder": {
                "type": "string",
                "minLength": 1,
                "title": "Form Placeholder"
            }
        },
        "type": "object",
        "title": "CustomFieldCheckboxProperties"
    },
    "CustomFieldCreateCheckbox": {
        "properties": {
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string",
                            "maxLength": 500,
                            "minLength": 1
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "propertyNames": {
                    "maxLength": 40,
                    "minLength": 1
                },
                "type": "object",
                "maxProperties": 50,
                "title": "Metadata",
                "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
            },
            "type": {
                "type": "string",
                "const": "checkbox",
                "title": "Type"
            },
            "slug": {
                "type": "string",
                "minLength": 1,
                "pattern": "^[a-z0-9-_]+$",
                "title": "Slug",
                "description": "Identifier of the custom field. It'll be used as key when storing the value. Must be unique across the organization.It can only contain ASCII letters, numbers and hyphens."
            },
            "name": {
                "type": "string",
                "minLength": 1,
                "title": "Name",
                "description": "Name of the custom field."
            },
            "organization_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4",
                        "description": "The organization ID.",
                        "x-polar-selector-widget": {
                            "displayProperty": "name",
                            "resourceName": "Organization",
                            "resourceRoot": "/v1/organizations"
                        }
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Organization Id",
                "description": "The ID of the organization owning the custom field. **Required unless you use an organization token.**"
            },
            "properties": {
                "$ref": "#/components/schemas/CustomFieldCheckboxProperties"
            }
        },
        "type": "object",
        "required": [
            "type",
            "slug",
            "name",
            "properties"
        ],
        "title": "CustomFieldCreateCheckbox",
        "description": "Schema to create a custom field of type checkbox."
    },
    "CustomFieldCreateDate": {
        "properties": {
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string",
                            "maxLength": 500,
                            "minLength": 1
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "propertyNames": {
                    "maxLength": 40,
                    "minLength": 1
                },
                "type": "object",
                "maxProperties": 50,
                "title": "Metadata",
                "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
            },
            "type": {
                "type": "string",
                "const": "date",
                "title": "Type"
            },
            "slug": {
                "type": "string",
                "minLength": 1,
                "pattern": "^[a-z0-9-_]+$",
                "title": "Slug",
                "description": "Identifier of the custom field. It'll be used as key when storing the value. Must be unique across the organization.It can only contain ASCII letters, numbers and hyphens."
            },
            "name": {
                "type": "string",
                "minLength": 1,
                "title": "Name",
                "description": "Name of the custom field."
            },
            "organization_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4",
                        "description": "The organization ID.",
                        "x-polar-selector-widget": {
                            "displayProperty": "name",
                            "resourceName": "Organization",
                            "resourceRoot": "/v1/organizations"
                        }
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Organization Id",
                "description": "The ID of the organization owning the custom field. **Required unless you use an organization token.**"
            },
            "properties": {
                "$ref": "#/components/schemas/CustomFieldDateProperties"
            }
        },
        "type": "object",
        "required": [
            "type",
            "slug",
            "name",
            "properties"
        ],
        "title": "CustomFieldCreateDate",
        "description": "Schema to create a custom field of type date."
    },
    "CustomFieldCreateNumber": {
        "properties": {
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string",
                            "maxLength": 500,
                            "minLength": 1
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "propertyNames": {
                    "maxLength": 40,
                    "minLength": 1
                },
                "type": "object",
                "maxProperties": 50,
                "title": "Metadata",
                "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
            },
            "type": {
                "type": "string",
                "const": "number",
                "title": "Type"
            },
            "slug": {
                "type": "string",
                "minLength": 1,
                "pattern": "^[a-z0-9-_]+$",
                "title": "Slug",
                "description": "Identifier of the custom field. It'll be used as key when storing the value. Must be unique across the organization.It can only contain ASCII letters, numbers and hyphens."
            },
            "name": {
                "type": "string",
                "minLength": 1,
                "title": "Name",
                "description": "Name of the custom field."
            },
            "organization_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4",
                        "description": "The organization ID.",
                        "x-polar-selector-widget": {
                            "displayProperty": "name",
                            "resourceName": "Organization",
                            "resourceRoot": "/v1/organizations"
                        }
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Organization Id",
                "description": "The ID of the organization owning the custom field. **Required unless you use an organization token.**"
            },
            "properties": {
                "$ref": "#/components/schemas/CustomFieldNumberProperties"
            }
        },
        "type": "object",
        "required": [
            "type",
            "slug",
            "name",
            "properties"
        ],
        "title": "CustomFieldCreateNumber",
        "description": "Schema to create a custom field of type number."
    },
    "CustomFieldCreateSelect": {
        "properties": {
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string",
                            "maxLength": 500,
                            "minLength": 1
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "propertyNames": {
                    "maxLength": 40,
                    "minLength": 1
                },
                "type": "object",
                "maxProperties": 50,
                "title": "Metadata",
                "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
            },
            "type": {
                "type": "string",
                "const": "select",
                "title": "Type"
            },
            "slug": {
                "type": "string",
                "minLength": 1,
                "pattern": "^[a-z0-9-_]+$",
                "title": "Slug",
                "description": "Identifier of the custom field. It'll be used as key when storing the value. Must be unique across the organization.It can only contain ASCII letters, numbers and hyphens."
            },
            "name": {
                "type": "string",
                "minLength": 1,
                "title": "Name",
                "description": "Name of the custom field."
            },
            "organization_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4",
                        "description": "The organization ID.",
                        "x-polar-selector-widget": {
                            "displayProperty": "name",
                            "resourceName": "Organization",
                            "resourceRoot": "/v1/organizations"
                        }
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Organization Id",
                "description": "The ID of the organization owning the custom field. **Required unless you use an organization token.**"
            },
            "properties": {
                "$ref": "#/components/schemas/CustomFieldSelectProperties"
            }
        },
        "type": "object",
        "required": [
            "type",
            "slug",
            "name",
            "properties"
        ],
        "title": "CustomFieldCreateSelect",
        "description": "Schema to create a custom field of type select."
    },
    "CustomFieldCreateText": {
        "properties": {
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string",
                            "maxLength": 500,
                            "minLength": 1
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "propertyNames": {
                    "maxLength": 40,
                    "minLength": 1
                },
                "type": "object",
                "maxProperties": 50,
                "title": "Metadata",
                "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
            },
            "type": {
                "type": "string",
                "const": "text",
                "title": "Type"
            },
            "slug": {
                "type": "string",
                "minLength": 1,
                "pattern": "^[a-z0-9-_]+$",
                "title": "Slug",
                "description": "Identifier of the custom field. It'll be used as key when storing the value. Must be unique across the organization.It can only contain ASCII letters, numbers and hyphens."
            },
            "name": {
                "type": "string",
                "minLength": 1,
                "title": "Name",
                "description": "Name of the custom field."
            },
            "organization_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4",
                        "description": "The organization ID.",
                        "x-polar-selector-widget": {
                            "displayProperty": "name",
                            "resourceName": "Organization",
                            "resourceRoot": "/v1/organizations"
                        }
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Organization Id",
                "description": "The ID of the organization owning the custom field. **Required unless you use an organization token.**"
            },
            "properties": {
                "$ref": "#/components/schemas/CustomFieldTextProperties"
            }
        },
        "type": "object",
        "required": [
            "type",
            "slug",
            "name",
            "properties"
        ],
        "title": "CustomFieldCreateText",
        "description": "Schema to create a custom field of type text."
    },
    "CustomFieldDate": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "type": "object",
                "title": "Metadata"
            },
            "type": {
                "type": "string",
                "const": "date",
                "title": "Type"
            },
            "slug": {
                "type": "string",
                "title": "Slug",
                "description": "Identifier of the custom field. It'll be used as key when storing the value."
            },
            "name": {
                "type": "string",
                "title": "Name",
                "description": "Name of the custom field."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id",
                "description": "The ID of the organization owning the custom field.",
                "x-polar-selector-widget": {
                    "displayProperty": "name",
                    "resourceName": "Organization",
                    "resourceRoot": "/v1/organizations"
                }
            },
            "properties": {
                "$ref": "#/components/schemas/CustomFieldDateProperties"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "metadata",
            "type",
            "slug",
            "name",
            "organization_id",
            "properties"
        ],
        "title": "CustomFieldDate",
        "description": "Schema for a custom field of type date."
    },
    "CustomFieldDateProperties": {
        "properties": {
            "form_label": {
                "type": "string",
                "minLength": 1,
                "title": "Form Label"
            },
            "form_help_text": {
                "type": "string",
                "minLength": 1,
                "title": "Form Help Text"
            },
            "form_placeholder": {
                "type": "string",
                "minLength": 1,
                "title": "Form Placeholder"
            },
            "ge": {
                "type": "integer",
                "title": "Ge"
            },
            "le": {
                "type": "integer",
                "title": "Le"
            }
        },
        "type": "object",
        "title": "CustomFieldDateProperties"
    },
    "CustomFieldNumber": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "type": "object",
                "title": "Metadata"
            },
            "type": {
                "type": "string",
                "const": "number",
                "title": "Type"
            },
            "slug": {
                "type": "string",
                "title": "Slug",
                "description": "Identifier of the custom field. It'll be used as key when storing the value."
            },
            "name": {
                "type": "string",
                "title": "Name",
                "description": "Name of the custom field."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id",
                "description": "The ID of the organization owning the custom field.",
                "x-polar-selector-widget": {
                    "displayProperty": "name",
                    "resourceName": "Organization",
                    "resourceRoot": "/v1/organizations"
                }
            },
            "properties": {
                "$ref": "#/components/schemas/CustomFieldNumberProperties"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "metadata",
            "type",
            "slug",
            "name",
            "organization_id",
            "properties"
        ],
        "title": "CustomFieldNumber",
        "description": "Schema for a custom field of type number."
    },
    "CustomFieldNumberProperties": {
        "properties": {
            "form_label": {
                "type": "string",
                "minLength": 1,
                "title": "Form Label"
            },
            "form_help_text": {
                "type": "string",
                "minLength": 1,
                "title": "Form Help Text"
            },
            "form_placeholder": {
                "type": "string",
                "minLength": 1,
                "title": "Form Placeholder"
            },
            "ge": {
                "type": "integer",
                "title": "Ge"
            },
            "le": {
                "type": "integer",
                "title": "Le"
            }
        },
        "type": "object",
        "title": "CustomFieldNumberProperties"
    },
    "CustomFieldSelect": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "type": "object",
                "title": "Metadata"
            },
            "type": {
                "type": "string",
                "const": "select",
                "title": "Type"
            },
            "slug": {
                "type": "string",
                "title": "Slug",
                "description": "Identifier of the custom field. It'll be used as key when storing the value."
            },
            "name": {
                "type": "string",
                "title": "Name",
                "description": "Name of the custom field."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id",
                "description": "The ID of the organization owning the custom field.",
                "x-polar-selector-widget": {
                    "displayProperty": "name",
                    "resourceName": "Organization",
                    "resourceRoot": "/v1/organizations"
                }
            },
            "properties": {
                "$ref": "#/components/schemas/CustomFieldSelectProperties"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "metadata",
            "type",
            "slug",
            "name",
            "organization_id",
            "properties"
        ],
        "title": "CustomFieldSelect",
        "description": "Schema for a custom field of type select."
    },
    "CustomFieldSelectOption": {
        "properties": {
            "value": {
                "type": "string",
                "minLength": 1,
                "title": "Value"
            },
            "label": {
                "type": "string",
                "minLength": 1,
                "title": "Label"
            }
        },
        "type": "object",
        "required": [
            "value",
            "label"
        ],
        "title": "CustomFieldSelectOption"
    },
    "CustomFieldSelectProperties": {
        "properties": {
            "form_label": {
                "type": "string",
                "minLength": 1,
                "title": "Form Label"
            },
            "form_help_text": {
                "type": "string",
                "minLength": 1,
                "title": "Form Help Text"
            },
            "form_placeholder": {
                "type": "string",
                "minLength": 1,
                "title": "Form Placeholder"
            },
            "options": {
                "items": {
                    "$ref": "#/components/schemas/CustomFieldSelectOption"
                },
                "type": "array",
                "title": "Options"
            }
        },
        "type": "object",
        "required": [
            "options"
        ],
        "title": "CustomFieldSelectProperties"
    },
    "CustomFieldText": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "type": "object",
                "title": "Metadata"
            },
            "type": {
                "type": "string",
                "const": "text",
                "title": "Type"
            },
            "slug": {
                "type": "string",
                "title": "Slug",
                "description": "Identifier of the custom field. It'll be used as key when storing the value."
            },
            "name": {
                "type": "string",
                "title": "Name",
                "description": "Name of the custom field."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id",
                "description": "The ID of the organization owning the custom field.",
                "x-polar-selector-widget": {
                    "displayProperty": "name",
                    "resourceName": "Organization",
                    "resourceRoot": "/v1/organizations"
                }
            },
            "properties": {
                "$ref": "#/components/schemas/CustomFieldTextProperties"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "metadata",
            "type",
            "slug",
            "name",
            "organization_id",
            "properties"
        ],
        "title": "CustomFieldText",
        "description": "Schema for a custom field of type text."
    },
    "CustomFieldTextProperties": {
        "properties": {
            "form_label": {
                "type": "string",
                "minLength": 1,
                "title": "Form Label"
            },
            "form_help_text": {
                "type": "string",
                "minLength": 1,
                "title": "Form Help Text"
            },
            "form_placeholder": {
                "type": "string",
                "minLength": 1,
                "title": "Form Placeholder"
            },
            "textarea": {
                "type": "boolean",
                "title": "Textarea"
            },
            "min_length": {
                "type": "integer",
                "minimum": 0,
                "title": "Min Length"
            },
            "max_length": {
                "type": "integer",
                "minimum": 0,
                "title": "Max Length"
            }
        },
        "type": "object",
        "title": "CustomFieldTextProperties"
    },
    "CustomFieldUpdateCheckbox": {
        "properties": {
            "metadata": {
                "anyOf": [
                    {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "maxLength": 500,
                                    "minLength": 1
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "propertyNames": {
                            "maxLength": 40,
                            "minLength": 1
                        },
                        "type": "object",
                        "maxProperties": 50,
                        "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Metadata"
            },
            "name": {
                "anyOf": [
                    {
                        "type": "string",
                        "minLength": 1,
                        "description": "Name of the custom field."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Name"
            },
            "slug": {
                "anyOf": [
                    {
                        "type": "string",
                        "minLength": 1,
                        "pattern": "^[a-z0-9-_]+$",
                        "description": "Identifier of the custom field. It'll be used as key when storing the value. Must be unique across the organization.It can only contain ASCII letters, numbers and hyphens."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Slug"
            },
            "type": {
                "type": "string",
                "const": "checkbox",
                "title": "Type"
            },
            "properties": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/CustomFieldCheckboxProperties"
                    },
                    {
                        "type": "null"
                    }
                ]
            }
        },
        "type": "object",
        "required": [
            "type"
        ],
        "title": "CustomFieldUpdateCheckbox",
        "description": "Schema to update a custom field of type checkbox."
    },
    "CustomFieldUpdateDate": {
        "properties": {
            "metadata": {
                "anyOf": [
                    {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "maxLength": 500,
                                    "minLength": 1
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "propertyNames": {
                            "maxLength": 40,
                            "minLength": 1
                        },
                        "type": "object",
                        "maxProperties": 50,
                        "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Metadata"
            },
            "name": {
                "anyOf": [
                    {
                        "type": "string",
                        "minLength": 1,
                        "description": "Name of the custom field."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Name"
            },
            "slug": {
                "anyOf": [
                    {
                        "type": "string",
                        "minLength": 1,
                        "pattern": "^[a-z0-9-_]+$",
                        "description": "Identifier of the custom field. It'll be used as key when storing the value. Must be unique across the organization.It can only contain ASCII letters, numbers and hyphens."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Slug"
            },
            "type": {
                "type": "string",
                "const": "date",
                "title": "Type"
            },
            "properties": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/CustomFieldDateProperties"
                    },
                    {
                        "type": "null"
                    }
                ]
            }
        },
        "type": "object",
        "required": [
            "type"
        ],
        "title": "CustomFieldUpdateDate",
        "description": "Schema to update a custom field of type date."
    },
    "CustomFieldUpdateNumber": {
        "properties": {
            "metadata": {
                "anyOf": [
                    {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "maxLength": 500,
                                    "minLength": 1
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "propertyNames": {
                            "maxLength": 40,
                            "minLength": 1
                        },
                        "type": "object",
                        "maxProperties": 50,
                        "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Metadata"
            },
            "name": {
                "anyOf": [
                    {
                        "type": "string",
                        "minLength": 1,
                        "description": "Name of the custom field."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Name"
            },
            "slug": {
                "anyOf": [
                    {
                        "type": "string",
                        "minLength": 1,
                        "pattern": "^[a-z0-9-_]+$",
                        "description": "Identifier of the custom field. It'll be used as key when storing the value. Must be unique across the organization.It can only contain ASCII letters, numbers and hyphens."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Slug"
            },
            "type": {
                "type": "string",
                "const": "number",
                "title": "Type"
            },
            "properties": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/CustomFieldNumberProperties"
                    },
                    {
                        "type": "null"
                    }
                ]
            }
        },
        "type": "object",
        "required": [
            "type"
        ],
        "title": "CustomFieldUpdateNumber",
        "description": "Schema to update a custom field of type number."
    },
    "CustomFieldUpdateSelect": {
        "properties": {
            "metadata": {
                "anyOf": [
                    {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "maxLength": 500,
                                    "minLength": 1
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "propertyNames": {
                            "maxLength": 40,
                            "minLength": 1
                        },
                        "type": "object",
                        "maxProperties": 50,
                        "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Metadata"
            },
            "name": {
                "anyOf": [
                    {
                        "type": "string",
                        "minLength": 1,
                        "description": "Name of the custom field."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Name"
            },
            "slug": {
                "anyOf": [
                    {
                        "type": "string",
                        "minLength": 1,
                        "pattern": "^[a-z0-9-_]+$",
                        "description": "Identifier of the custom field. It'll be used as key when storing the value. Must be unique across the organization.It can only contain ASCII letters, numbers and hyphens."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Slug"
            },
            "type": {
                "type": "string",
                "const": "select",
                "title": "Type"
            },
            "properties": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/CustomFieldSelectProperties"
                    },
                    {
                        "type": "null"
                    }
                ]
            }
        },
        "type": "object",
        "required": [
            "type"
        ],
        "title": "CustomFieldUpdateSelect",
        "description": "Schema to update a custom field of type select."
    },
    "CustomFieldUpdateText": {
        "properties": {
            "metadata": {
                "anyOf": [
                    {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "maxLength": 500,
                                    "minLength": 1
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "propertyNames": {
                            "maxLength": 40,
                            "minLength": 1
                        },
                        "type": "object",
                        "maxProperties": 50,
                        "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Metadata"
            },
            "name": {
                "anyOf": [
                    {
                        "type": "string",
                        "minLength": 1,
                        "description": "Name of the custom field."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Name"
            },
            "slug": {
                "anyOf": [
                    {
                        "type": "string",
                        "minLength": 1,
                        "pattern": "^[a-z0-9-_]+$",
                        "description": "Identifier of the custom field. It'll be used as key when storing the value. Must be unique across the organization.It can only contain ASCII letters, numbers and hyphens."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Slug"
            },
            "type": {
                "type": "string",
                "const": "text",
                "title": "Type"
            },
            "properties": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/CustomFieldTextProperties"
                    },
                    {
                        "type": "null"
                    }
                ]
            }
        },
        "type": "object",
        "required": [
            "type"
        ],
        "title": "CustomFieldUpdateText",
        "description": "Schema to update a custom field of type text."
    },
    "Customer": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "type": "object",
                "title": "Metadata"
            },
            "email": {
                "type": "string",
                "title": "Email"
            },
            "email_verified": {
                "type": "boolean",
                "title": "Email Verified"
            },
            "name": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Name"
            },
            "billing_address": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/Address"
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "tax_id": {
                "anyOf": [
                    {
                        "prefixItems": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/TaxIDFormat"
                            }
                        ],
                        "type": "array",
                        "maxItems": 2,
                        "minItems": 2
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Tax Id"
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id"
            },
            "avatar_url": {
                "type": "string",
                "title": "Avatar Url"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "metadata",
            "email",
            "email_verified",
            "name",
            "billing_address",
            "tax_id",
            "organization_id",
            "avatar_url"
        ],
        "title": "Customer",
        "description": "A customer in an organization."
    },
    "CustomerBenefitGrantAds": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "granted_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Granted At"
            },
            "revoked_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Revoked At"
            },
            "customer_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Customer Id"
            },
            "benefit_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Benefit Id"
            },
            "subscription_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Subscription Id"
            },
            "order_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Order Id"
            },
            "is_granted": {
                "type": "boolean",
                "title": "Is Granted"
            },
            "is_revoked": {
                "type": "boolean",
                "title": "Is Revoked"
            },
            "customer": {
                "$ref": "#/components/schemas/CustomerPortalCustomer"
            },
            "benefit": {
                "$ref": "#/components/schemas/BenefitAdsSubscriber"
            },
            "properties": {
                "$ref": "#/components/schemas/BenefitGrantAdsProperties"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "granted_at",
            "revoked_at",
            "customer_id",
            "benefit_id",
            "subscription_id",
            "order_id",
            "is_granted",
            "is_revoked",
            "customer",
            "benefit",
            "properties"
        ],
        "title": "CustomerBenefitGrantAds"
    },
    "CustomerBenefitGrantAdsUpdate": {
        "properties": {
            "benefit_type": {
                "type": "string",
                "const": "ads",
                "title": "Benefit Type"
            }
        },
        "type": "object",
        "required": [
            "benefit_type"
        ],
        "title": "CustomerBenefitGrantAdsUpdate"
    },
    "CustomerBenefitGrantCustom": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "granted_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Granted At"
            },
            "revoked_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Revoked At"
            },
            "customer_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Customer Id"
            },
            "benefit_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Benefit Id"
            },
            "subscription_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Subscription Id"
            },
            "order_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Order Id"
            },
            "is_granted": {
                "type": "boolean",
                "title": "Is Granted"
            },
            "is_revoked": {
                "type": "boolean",
                "title": "Is Revoked"
            },
            "customer": {
                "$ref": "#/components/schemas/CustomerPortalCustomer"
            },
            "benefit": {
                "$ref": "#/components/schemas/BenefitCustomSubscriber"
            },
            "properties": {
                "$ref": "#/components/schemas/BenefitGrantCustomProperties"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "granted_at",
            "revoked_at",
            "customer_id",
            "benefit_id",
            "subscription_id",
            "order_id",
            "is_granted",
            "is_revoked",
            "customer",
            "benefit",
            "properties"
        ],
        "title": "CustomerBenefitGrantCustom"
    },
    "CustomerBenefitGrantCustomUpdate": {
        "properties": {
            "benefit_type": {
                "type": "string",
                "const": "custom",
                "title": "Benefit Type"
            }
        },
        "type": "object",
        "required": [
            "benefit_type"
        ],
        "title": "CustomerBenefitGrantCustomUpdate"
    },
    "CustomerBenefitGrantDiscord": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "granted_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Granted At"
            },
            "revoked_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Revoked At"
            },
            "customer_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Customer Id"
            },
            "benefit_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Benefit Id"
            },
            "subscription_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Subscription Id"
            },
            "order_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Order Id"
            },
            "is_granted": {
                "type": "boolean",
                "title": "Is Granted"
            },
            "is_revoked": {
                "type": "boolean",
                "title": "Is Revoked"
            },
            "customer": {
                "$ref": "#/components/schemas/CustomerPortalCustomer"
            },
            "benefit": {
                "$ref": "#/components/schemas/BenefitDiscordSubscriber"
            },
            "properties": {
                "$ref": "#/components/schemas/BenefitGrantDiscordProperties"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "granted_at",
            "revoked_at",
            "customer_id",
            "benefit_id",
            "subscription_id",
            "order_id",
            "is_granted",
            "is_revoked",
            "customer",
            "benefit",
            "properties"
        ],
        "title": "CustomerBenefitGrantDiscord"
    },
    "CustomerBenefitGrantDiscordPropertiesUpdate": {
        "properties": {
            "account_id": {
                "type": "string",
                "title": "Account Id"
            }
        },
        "type": "object",
        "required": [
            "account_id"
        ],
        "title": "CustomerBenefitGrantDiscordPropertiesUpdate"
    },
    "CustomerBenefitGrantDiscordUpdate": {
        "properties": {
            "benefit_type": {
                "type": "string",
                "const": "discord",
                "title": "Benefit Type"
            },
            "properties": {
                "$ref": "#/components/schemas/CustomerBenefitGrantDiscordPropertiesUpdate"
            }
        },
        "type": "object",
        "required": [
            "benefit_type",
            "properties"
        ],
        "title": "CustomerBenefitGrantDiscordUpdate"
    },
    "CustomerBenefitGrantDownloadables": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "granted_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Granted At"
            },
            "revoked_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Revoked At"
            },
            "customer_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Customer Id"
            },
            "benefit_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Benefit Id"
            },
            "subscription_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Subscription Id"
            },
            "order_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Order Id"
            },
            "is_granted": {
                "type": "boolean",
                "title": "Is Granted"
            },
            "is_revoked": {
                "type": "boolean",
                "title": "Is Revoked"
            },
            "customer": {
                "$ref": "#/components/schemas/CustomerPortalCustomer"
            },
            "benefit": {
                "$ref": "#/components/schemas/BenefitDownloadablesSubscriber"
            },
            "properties": {
                "$ref": "#/components/schemas/BenefitGrantDownloadablesProperties"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "granted_at",
            "revoked_at",
            "customer_id",
            "benefit_id",
            "subscription_id",
            "order_id",
            "is_granted",
            "is_revoked",
            "customer",
            "benefit",
            "properties"
        ],
        "title": "CustomerBenefitGrantDownloadables"
    },
    "CustomerBenefitGrantDownloadablesUpdate": {
        "properties": {
            "benefit_type": {
                "type": "string",
                "const": "downloadables",
                "title": "Benefit Type"
            }
        },
        "type": "object",
        "required": [
            "benefit_type"
        ],
        "title": "CustomerBenefitGrantDownloadablesUpdate"
    },
    "CustomerBenefitGrantGitHubRepository": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "granted_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Granted At"
            },
            "revoked_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Revoked At"
            },
            "customer_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Customer Id"
            },
            "benefit_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Benefit Id"
            },
            "subscription_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Subscription Id"
            },
            "order_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Order Id"
            },
            "is_granted": {
                "type": "boolean",
                "title": "Is Granted"
            },
            "is_revoked": {
                "type": "boolean",
                "title": "Is Revoked"
            },
            "customer": {
                "$ref": "#/components/schemas/CustomerPortalCustomer"
            },
            "benefit": {
                "$ref": "#/components/schemas/BenefitGitHubRepositorySubscriber"
            },
            "properties": {
                "$ref": "#/components/schemas/BenefitGrantGitHubRepositoryProperties"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "granted_at",
            "revoked_at",
            "customer_id",
            "benefit_id",
            "subscription_id",
            "order_id",
            "is_granted",
            "is_revoked",
            "customer",
            "benefit",
            "properties"
        ],
        "title": "CustomerBenefitGrantGitHubRepository"
    },
    "CustomerBenefitGrantGitHubRepositoryPropertiesUpdate": {
        "properties": {
            "account_id": {
                "type": "string",
                "title": "Account Id"
            }
        },
        "type": "object",
        "required": [
            "account_id"
        ],
        "title": "CustomerBenefitGrantGitHubRepositoryPropertiesUpdate"
    },
    "CustomerBenefitGrantGitHubRepositoryUpdate": {
        "properties": {
            "benefit_type": {
                "type": "string",
                "const": "github_repository",
                "title": "Benefit Type"
            },
            "properties": {
                "$ref": "#/components/schemas/CustomerBenefitGrantGitHubRepositoryPropertiesUpdate"
            }
        },
        "type": "object",
        "required": [
            "benefit_type",
            "properties"
        ],
        "title": "CustomerBenefitGrantGitHubRepositoryUpdate"
    },
    "CustomerBenefitGrantLicenseKeys": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "granted_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Granted At"
            },
            "revoked_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Revoked At"
            },
            "customer_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Customer Id"
            },
            "benefit_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Benefit Id"
            },
            "subscription_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Subscription Id"
            },
            "order_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Order Id"
            },
            "is_granted": {
                "type": "boolean",
                "title": "Is Granted"
            },
            "is_revoked": {
                "type": "boolean",
                "title": "Is Revoked"
            },
            "customer": {
                "$ref": "#/components/schemas/CustomerPortalCustomer"
            },
            "benefit": {
                "$ref": "#/components/schemas/BenefitLicenseKeysSubscriber"
            },
            "properties": {
                "$ref": "#/components/schemas/BenefitGrantLicenseKeysProperties"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "granted_at",
            "revoked_at",
            "customer_id",
            "benefit_id",
            "subscription_id",
            "order_id",
            "is_granted",
            "is_revoked",
            "customer",
            "benefit",
            "properties"
        ],
        "title": "CustomerBenefitGrantLicenseKeys"
    },
    "CustomerBenefitGrantLicenseKeysUpdate": {
        "properties": {
            "benefit_type": {
                "type": "string",
                "const": "license_keys",
                "title": "Benefit Type"
            }
        },
        "type": "object",
        "required": [
            "benefit_type"
        ],
        "title": "CustomerBenefitGrantLicenseKeysUpdate"
    },
    "CustomerCreate": {
        "properties": {
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string",
                            "maxLength": 500,
                            "minLength": 1
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "propertyNames": {
                    "maxLength": 40,
                    "minLength": 1
                },
                "type": "object",
                "maxProperties": 50,
                "title": "Metadata",
                "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
            },
            "email": {
                "type": "string",
                "format": "email",
                "title": "Email"
            },
            "name": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Name"
            },
            "billing_address": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/Address"
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "tax_id": {
                "anyOf": [
                    {
                        "prefixItems": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/TaxIDFormat"
                            }
                        ],
                        "type": "array",
                        "maxItems": 2,
                        "minItems": 2
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Tax Id"
            },
            "organization_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4",
                        "description": "The organization ID.",
                        "x-polar-selector-widget": {
                            "displayProperty": "name",
                            "resourceName": "Organization",
                            "resourceRoot": "/v1/organizations"
                        }
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Organization Id",
                "description": "The ID of the organization owning the customer. **Required unless you use an organization token.**"
            }
        },
        "type": "object",
        "required": [
            "email"
        ],
        "title": "CustomerCreate"
    },
    "CustomerOrder": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id"
            },
            "amount": {
                "type": "integer",
                "title": "Amount"
            },
            "tax_amount": {
                "type": "integer",
                "title": "Tax Amount"
            },
            "currency": {
                "type": "string",
                "title": "Currency"
            },
            "customer_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Customer Id"
            },
            "product_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Product Id"
            },
            "product_price_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Product Price Id"
            },
            "subscription_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Subscription Id"
            },
            "user_id": {
                "type": "string",
                "format": "uuid4",
                "title": "User Id",
                "deprecated": true
            },
            "product": {
                "$ref": "#/components/schemas/CustomerOrderProduct"
            },
            "product_price": {
                "$ref": "#/components/schemas/ProductPrice"
            },
            "subscription": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/CustomerOrderSubscription"
                    },
                    {
                        "type": "null"
                    }
                ]
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "amount",
            "tax_amount",
            "currency",
            "customer_id",
            "product_id",
            "product_price_id",
            "subscription_id",
            "user_id",
            "product",
            "product_price",
            "subscription"
        ],
        "title": "CustomerOrder"
    },
    "CustomerOrderInvoice": {
        "properties": {
            "url": {
                "type": "string",
                "title": "Url",
                "description": "The URL to the invoice."
            }
        },
        "type": "object",
        "required": [
            "url"
        ],
        "title": "CustomerOrderInvoice",
        "description": "Order's invoice data."
    },
    "CustomerOrderProduct": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the product."
            },
            "name": {
                "type": "string",
                "title": "Name",
                "description": "The name of the product."
            },
            "description": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Description",
                "description": "The description of the product."
            },
            "is_recurring": {
                "type": "boolean",
                "title": "Is Recurring",
                "description": "Whether the product is a subscription tier."
            },
            "is_archived": {
                "type": "boolean",
                "title": "Is Archived",
                "description": "Whether the product is archived and no longer available."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id",
                "description": "The ID of the organization owning the product."
            },
            "prices": {
                "items": {
                    "$ref": "#/components/schemas/ProductPrice"
                },
                "type": "array",
                "title": "Prices",
                "description": "List of prices for this product."
            },
            "benefits": {
                "items": {
                    "$ref": "#/components/schemas/BenefitBase"
                },
                "type": "array",
                "title": "BenefitPublic",
                "description": "List of benefits granted by the product."
            },
            "medias": {
                "items": {
                    "$ref": "#/components/schemas/ProductMediaFileRead"
                },
                "type": "array",
                "title": "Medias",
                "description": "List of medias associated to the product."
            },
            "organization": {
                "$ref": "#/components/schemas/Organization"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "name",
            "description",
            "is_recurring",
            "is_archived",
            "organization_id",
            "prices",
            "benefits",
            "medias",
            "organization"
        ],
        "title": "CustomerOrderProduct"
    },
    "CustomerOrderSubscription": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "amount": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Amount"
            },
            "currency": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Currency"
            },
            "recurring_interval": {
                "$ref": "#/components/schemas/SubscriptionRecurringInterval"
            },
            "status": {
                "$ref": "#/components/schemas/SubscriptionStatus"
            },
            "current_period_start": {
                "type": "string",
                "format": "date-time",
                "title": "Current Period Start"
            },
            "current_period_end": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Current Period End"
            },
            "cancel_at_period_end": {
                "type": "boolean",
                "title": "Cancel At Period End"
            },
            "canceled_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Canceled At"
            },
            "started_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Started At"
            },
            "ends_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Ends At"
            },
            "ended_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Ended At"
            },
            "customer_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Customer Id"
            },
            "product_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Product Id"
            },
            "price_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Price Id"
            },
            "discount_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Discount Id"
            },
            "checkout_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Checkout Id"
            },
            "customer_cancellation_reason": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/CustomerCancellationReason"
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "customer_cancellation_comment": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Cancellation Comment"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "amount",
            "currency",
            "recurring_interval",
            "status",
            "current_period_start",
            "current_period_end",
            "cancel_at_period_end",
            "canceled_at",
            "started_at",
            "ends_at",
            "ended_at",
            "customer_id",
            "product_id",
            "price_id",
            "discount_id",
            "checkout_id",
            "customer_cancellation_reason",
            "customer_cancellation_comment"
        ],
        "title": "CustomerOrderSubscription"
    },
    "CustomerPortalCustomer": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "email": {
                "type": "string",
                "title": "Email"
            },
            "email_verified": {
                "type": "boolean",
                "title": "Email Verified"
            },
            "name": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Name"
            },
            "billing_address": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/Address"
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "tax_id": {
                "anyOf": [
                    {
                        "prefixItems": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/TaxIDFormat"
                            }
                        ],
                        "type": "array",
                        "maxItems": 2,
                        "minItems": 2
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Tax Id"
            },
            "oauth_accounts": {
                "additionalProperties": {
                    "$ref": "#/components/schemas/CustomerPortalOAuthAccount"
                },
                "type": "object",
                "title": "Oauth Accounts"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "email",
            "email_verified",
            "name",
            "billing_address",
            "tax_id",
            "oauth_accounts"
        ],
        "title": "CustomerPortalCustomer"
    },
    "CustomerPortalOAuthAccount": {
        "properties": {
            "account_id": {
                "type": "string",
                "title": "Account Id"
            },
            "account_username": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Account Username"
            }
        },
        "type": "object",
        "required": [
            "account_id",
            "account_username"
        ],
        "title": "CustomerPortalOAuthAccount"
    },
    "CustomerSession": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "token": {
                "type": "string",
                "title": "Token"
            },
            "expires_at": {
                "type": "string",
                "format": "date-time",
                "title": "Expires At"
            },
            "customer_portal_url": {
                "type": "string",
                "title": "Customer Portal Url"
            },
            "customer_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Customer Id"
            },
            "customer": {
                "$ref": "#/components/schemas/Customer"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "token",
            "expires_at",
            "customer_portal_url",
            "customer_id",
            "customer"
        ],
        "title": "CustomerSession",
        "description": "A customer session that can be used to authenticate as a customer."
    },
    "CustomerSessionCreate": {
        "properties": {
            "customer_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Customer Id",
                "description": "ID of the customer to create a session for."
            }
        },
        "type": "object",
        "required": [
            "customer_id"
        ],
        "title": "CustomerSessionCreate",
        "description": "Schema for creating a customer session."
    },
    "CustomerSubscription": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "amount": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Amount"
            },
            "currency": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Currency"
            },
            "recurring_interval": {
                "$ref": "#/components/schemas/SubscriptionRecurringInterval"
            },
            "status": {
                "$ref": "#/components/schemas/SubscriptionStatus"
            },
            "current_period_start": {
                "type": "string",
                "format": "date-time",
                "title": "Current Period Start"
            },
            "current_period_end": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Current Period End"
            },
            "cancel_at_period_end": {
                "type": "boolean",
                "title": "Cancel At Period End"
            },
            "canceled_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Canceled At"
            },
            "started_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Started At"
            },
            "ends_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Ends At"
            },
            "ended_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Ended At"
            },
            "customer_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Customer Id"
            },
            "product_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Product Id"
            },
            "price_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Price Id"
            },
            "discount_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Discount Id"
            },
            "checkout_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Checkout Id"
            },
            "customer_cancellation_reason": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/CustomerCancellationReason"
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "customer_cancellation_comment": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Cancellation Comment"
            },
            "user_id": {
                "type": "string",
                "format": "uuid4",
                "title": "User Id",
                "deprecated": true
            },
            "product": {
                "$ref": "#/components/schemas/CustomerSubscriptionProduct"
            },
            "price": {
                "$ref": "#/components/schemas/ProductPrice"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "amount",
            "currency",
            "recurring_interval",
            "status",
            "current_period_start",
            "current_period_end",
            "cancel_at_period_end",
            "canceled_at",
            "started_at",
            "ends_at",
            "ended_at",
            "customer_id",
            "product_id",
            "price_id",
            "discount_id",
            "checkout_id",
            "customer_cancellation_reason",
            "customer_cancellation_comment",
            "user_id",
            "product",
            "price"
        ],
        "title": "CustomerSubscription"
    },
    "CustomerSubscriptionCancel": {
        "properties": {
            "cancel_at_period_end": {
                "anyOf": [
                    {
                        "type": "boolean"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Cancel At Period End",
                "description": "Cancel an active subscription once the current period ends.\n\nOr uncancel a subscription currently set to be revoked at period end."
            },
            "cancellation_reason": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/CustomerCancellationReason"
                    },
                    {
                        "type": "null"
                    }
                ],
                "description": "Customers reason for cancellation.\n\n* `too_expensive`: Too expensive for the customer.\n* `missing_features`: Customer is missing certain features.\n* `switched_service`: Customer switched to another service.\n* `unused`: Customer is not using it enough.\n* `customer_service`: Customer is not satisfied with the customer service.\n* `low_quality`: Customer is unhappy with the quality.\n* `too_complex`: Customer considers the service too complicated.\n* `other`: Other reason(s)."
            },
            "cancellation_comment": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Cancellation Comment",
                "description": "Customer feedback and why they decided to cancel."
            }
        },
        "type": "object",
        "title": "CustomerSubscriptionCancel"
    },
    "CustomerSubscriptionProduct": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the product."
            },
            "name": {
                "type": "string",
                "title": "Name",
                "description": "The name of the product."
            },
            "description": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Description",
                "description": "The description of the product."
            },
            "is_recurring": {
                "type": "boolean",
                "title": "Is Recurring",
                "description": "Whether the product is a subscription tier."
            },
            "is_archived": {
                "type": "boolean",
                "title": "Is Archived",
                "description": "Whether the product is archived and no longer available."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id",
                "description": "The ID of the organization owning the product."
            },
            "prices": {
                "items": {
                    "$ref": "#/components/schemas/ProductPrice"
                },
                "type": "array",
                "title": "Prices",
                "description": "List of prices for this product."
            },
            "benefits": {
                "items": {
                    "$ref": "#/components/schemas/BenefitBase"
                },
                "type": "array",
                "title": "BenefitPublic",
                "description": "List of benefits granted by the product."
            },
            "medias": {
                "items": {
                    "$ref": "#/components/schemas/ProductMediaFileRead"
                },
                "type": "array",
                "title": "Medias",
                "description": "List of medias associated to the product."
            },
            "organization": {
                "$ref": "#/components/schemas/Organization"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "name",
            "description",
            "is_recurring",
            "is_archived",
            "organization_id",
            "prices",
            "benefits",
            "medias",
            "organization"
        ],
        "title": "CustomerSubscriptionProduct"
    },
    "CustomerSubscriptionUpdatePrice": {
        "properties": {
            "product_price_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Product Price Id",
                "description": "Update subscription to another price."
            }
        },
        "type": "object",
        "required": [
            "product_price_id"
        ],
        "title": "CustomerSubscriptionUpdatePrice"
    },
    "CustomerUpdate": {
        "properties": {
            "metadata": {
                "anyOf": [
                    {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "maxLength": 500,
                                    "minLength": 1
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "propertyNames": {
                            "maxLength": 40,
                            "minLength": 1
                        },
                        "type": "object",
                        "maxProperties": 50,
                        "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Metadata"
            },
            "email": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "email"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Email"
            },
            "name": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Name"
            },
            "billing_address": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/Address"
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "tax_id": {
                "anyOf": [
                    {
                        "prefixItems": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/TaxIDFormat"
                            }
                        ],
                        "type": "array",
                        "maxItems": 2,
                        "minItems": 2
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Tax Id"
            }
        },
        "type": "object",
        "title": "CustomerUpdate"
    },
    "DiscountFixedOnceForeverDuration": {
        "properties": {
            "duration": {
                "$ref": "#/components/schemas/DiscountDuration"
            },
            "type": {
                "$ref": "#/components/schemas/DiscountType"
            },
            "amount": {
                "type": "integer",
                "title": "Amount"
            },
            "currency": {
                "type": "string",
                "title": "Currency"
            },
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "type": "object",
                "title": "Metadata"
            },
            "name": {
                "type": "string",
                "title": "Name",
                "description": "Name of the discount. Will be displayed to the customer when the discount is applied."
            },
            "code": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Code",
                "description": "Code customers can use to apply the discount during checkout."
            },
            "starts_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Starts At",
                "description": "Timestamp after which the discount is redeemable."
            },
            "ends_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Ends At",
                "description": "Timestamp after which the discount is no longer redeemable."
            },
            "max_redemptions": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Max Redemptions",
                "description": "Maximum number of times the discount can be redeemed."
            },
            "redemptions_count": {
                "type": "integer",
                "title": "Redemptions Count",
                "description": "Number of times the discount has been redeemed."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id",
                "description": "The organization ID.",
                "x-polar-selector-widget": {
                    "displayProperty": "name",
                    "resourceName": "Organization",
                    "resourceRoot": "/v1/organizations"
                }
            },
            "products": {
                "items": {
                    "$ref": "#/components/schemas/DiscountProduct"
                },
                "type": "array",
                "title": "Products"
            }
        },
        "type": "object",
        "required": [
            "duration",
            "type",
            "amount",
            "currency",
            "created_at",
            "modified_at",
            "id",
            "metadata",
            "name",
            "code",
            "starts_at",
            "ends_at",
            "max_redemptions",
            "redemptions_count",
            "organization_id",
            "products"
        ],
        "title": "DiscountFixedOnceForeverDuration",
        "description": "Schema for a fixed amount discount that is applied once or forever."
    },
    "DiscountFixedOnceForeverDurationBase": {
        "properties": {
            "duration": {
                "$ref": "#/components/schemas/DiscountDuration"
            },
            "type": {
                "$ref": "#/components/schemas/DiscountType"
            },
            "amount": {
                "type": "integer",
                "title": "Amount"
            },
            "currency": {
                "type": "string",
                "title": "Currency"
            },
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "type": "object",
                "title": "Metadata"
            },
            "name": {
                "type": "string",
                "title": "Name",
                "description": "Name of the discount. Will be displayed to the customer when the discount is applied."
            },
            "code": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Code",
                "description": "Code customers can use to apply the discount during checkout."
            },
            "starts_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Starts At",
                "description": "Timestamp after which the discount is redeemable."
            },
            "ends_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Ends At",
                "description": "Timestamp after which the discount is no longer redeemable."
            },
            "max_redemptions": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Max Redemptions",
                "description": "Maximum number of times the discount can be redeemed."
            },
            "redemptions_count": {
                "type": "integer",
                "title": "Redemptions Count",
                "description": "Number of times the discount has been redeemed."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id",
                "description": "The organization ID.",
                "x-polar-selector-widget": {
                    "displayProperty": "name",
                    "resourceName": "Organization",
                    "resourceRoot": "/v1/organizations"
                }
            }
        },
        "type": "object",
        "required": [
            "duration",
            "type",
            "amount",
            "currency",
            "created_at",
            "modified_at",
            "id",
            "metadata",
            "name",
            "code",
            "starts_at",
            "ends_at",
            "max_redemptions",
            "redemptions_count",
            "organization_id"
        ],
        "title": "DiscountFixedOnceForeverDurationBase"
    },
    "DiscountFixedOnceForeverDurationCreate": {
        "properties": {
            "duration": {
                "$ref": "#/components/schemas/DiscountDuration"
            },
            "type": {
                "$ref": "#/components/schemas/DiscountType",
                "description": "Type of the discount."
            },
            "amount": {
                "type": "integer",
                "minimum": 0,
                "title": "Amount",
                "description": "Fixed amount to discount from the invoice total."
            },
            "currency": {
                "type": "string",
                "pattern": "usd",
                "title": "Currency",
                "description": "The currency. Currently, only `usd` is supported.",
                "default": "usd"
            },
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string",
                            "maxLength": 500,
                            "minLength": 1
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "propertyNames": {
                    "maxLength": 40,
                    "minLength": 1
                },
                "type": "object",
                "maxProperties": 50,
                "title": "Metadata",
                "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
            },
            "name": {
                "type": "string",
                "minLength": 1,
                "title": "Name",
                "description": "Name of the discount. Will be displayed to the customer when the discount is applied."
            },
            "code": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Code",
                "description": "Code customers can use to apply the discount during checkout. Must be between 3 and 256 characters long and contain only alphanumeric characters.If not provided, the discount can only be applied via the API."
            },
            "starts_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Starts At",
                "description": "Optional timestamp after which the discount is redeemable."
            },
            "ends_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Ends At",
                "description": "Optional timestamp after which the discount is no longer redeemable."
            },
            "max_redemptions": {
                "anyOf": [
                    {
                        "type": "integer",
                        "minimum": 1
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Max Redemptions",
                "description": "Optional maximum number of times the discount can be redeemed."
            },
            "products": {
                "anyOf": [
                    {
                        "items": {
                            "type": "string",
                            "format": "uuid4"
                        },
                        "type": "array",
                        "description": "List of product IDs the discount can be applied to."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Products"
            },
            "organization_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4",
                        "description": "The organization ID.",
                        "x-polar-selector-widget": {
                            "displayProperty": "name",
                            "resourceName": "Organization",
                            "resourceRoot": "/v1/organizations"
                        }
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Organization Id",
                "description": "The ID of the organization owning the discount. **Required unless you use an organization token.**"
            }
        },
        "type": "object",
        "required": [
            "duration",
            "type",
            "amount",
            "name"
        ],
        "title": "DiscountFixedOnceForeverDurationCreate",
        "description": "Schema to create a fixed amount discount that is applied once or forever."
    },
    "DiscountFixedRepeatDuration": {
        "properties": {
            "duration": {
                "$ref": "#/components/schemas/DiscountDuration"
            },
            "duration_in_months": {
                "type": "integer",
                "title": "Duration In Months"
            },
            "type": {
                "$ref": "#/components/schemas/DiscountType"
            },
            "amount": {
                "type": "integer",
                "title": "Amount"
            },
            "currency": {
                "type": "string",
                "title": "Currency"
            },
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "type": "object",
                "title": "Metadata"
            },
            "name": {
                "type": "string",
                "title": "Name",
                "description": "Name of the discount. Will be displayed to the customer when the discount is applied."
            },
            "code": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Code",
                "description": "Code customers can use to apply the discount during checkout."
            },
            "starts_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Starts At",
                "description": "Timestamp after which the discount is redeemable."
            },
            "ends_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Ends At",
                "description": "Timestamp after which the discount is no longer redeemable."
            },
            "max_redemptions": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Max Redemptions",
                "description": "Maximum number of times the discount can be redeemed."
            },
            "redemptions_count": {
                "type": "integer",
                "title": "Redemptions Count",
                "description": "Number of times the discount has been redeemed."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id",
                "description": "The organization ID.",
                "x-polar-selector-widget": {
                    "displayProperty": "name",
                    "resourceName": "Organization",
                    "resourceRoot": "/v1/organizations"
                }
            },
            "products": {
                "items": {
                    "$ref": "#/components/schemas/DiscountProduct"
                },
                "type": "array",
                "title": "Products"
            }
        },
        "type": "object",
        "required": [
            "duration",
            "duration_in_months",
            "type",
            "amount",
            "currency",
            "created_at",
            "modified_at",
            "id",
            "metadata",
            "name",
            "code",
            "starts_at",
            "ends_at",
            "max_redemptions",
            "redemptions_count",
            "organization_id",
            "products"
        ],
        "title": "DiscountFixedRepeatDuration",
        "description": "Schema for a fixed amount discount that is applied on every invoice\nfor a certain number of months."
    },
    "DiscountFixedRepeatDurationBase": {
        "properties": {
            "duration": {
                "$ref": "#/components/schemas/DiscountDuration"
            },
            "duration_in_months": {
                "type": "integer",
                "title": "Duration In Months"
            },
            "type": {
                "$ref": "#/components/schemas/DiscountType"
            },
            "amount": {
                "type": "integer",
                "title": "Amount"
            },
            "currency": {
                "type": "string",
                "title": "Currency"
            },
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "type": "object",
                "title": "Metadata"
            },
            "name": {
                "type": "string",
                "title": "Name",
                "description": "Name of the discount. Will be displayed to the customer when the discount is applied."
            },
            "code": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Code",
                "description": "Code customers can use to apply the discount during checkout."
            },
            "starts_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Starts At",
                "description": "Timestamp after which the discount is redeemable."
            },
            "ends_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Ends At",
                "description": "Timestamp after which the discount is no longer redeemable."
            },
            "max_redemptions": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Max Redemptions",
                "description": "Maximum number of times the discount can be redeemed."
            },
            "redemptions_count": {
                "type": "integer",
                "title": "Redemptions Count",
                "description": "Number of times the discount has been redeemed."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id",
                "description": "The organization ID.",
                "x-polar-selector-widget": {
                    "displayProperty": "name",
                    "resourceName": "Organization",
                    "resourceRoot": "/v1/organizations"
                }
            }
        },
        "type": "object",
        "required": [
            "duration",
            "duration_in_months",
            "type",
            "amount",
            "currency",
            "created_at",
            "modified_at",
            "id",
            "metadata",
            "name",
            "code",
            "starts_at",
            "ends_at",
            "max_redemptions",
            "redemptions_count",
            "organization_id"
        ],
        "title": "DiscountFixedRepeatDurationBase"
    },
    "DiscountFixedRepeatDurationCreate": {
        "properties": {
            "duration": {
                "$ref": "#/components/schemas/DiscountDuration"
            },
            "duration_in_months": {
                "type": "integer",
                "minimum": 1,
                "title": "Duration In Months",
                "description": "Number of months the discount should be applied.\n\nFor this to work on yearly pricing, you should multiply this by 12.\nFor example, to apply the discount for 2 years, set this to 24."
            },
            "type": {
                "$ref": "#/components/schemas/DiscountType",
                "description": "Type of the discount."
            },
            "amount": {
                "type": "integer",
                "minimum": 0,
                "title": "Amount",
                "description": "Fixed amount to discount from the invoice total."
            },
            "currency": {
                "type": "string",
                "pattern": "usd",
                "title": "Currency",
                "description": "The currency. Currently, only `usd` is supported.",
                "default": "usd"
            },
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string",
                            "maxLength": 500,
                            "minLength": 1
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "propertyNames": {
                    "maxLength": 40,
                    "minLength": 1
                },
                "type": "object",
                "maxProperties": 50,
                "title": "Metadata",
                "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
            },
            "name": {
                "type": "string",
                "minLength": 1,
                "title": "Name",
                "description": "Name of the discount. Will be displayed to the customer when the discount is applied."
            },
            "code": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Code",
                "description": "Code customers can use to apply the discount during checkout. Must be between 3 and 256 characters long and contain only alphanumeric characters.If not provided, the discount can only be applied via the API."
            },
            "starts_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Starts At",
                "description": "Optional timestamp after which the discount is redeemable."
            },
            "ends_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Ends At",
                "description": "Optional timestamp after which the discount is no longer redeemable."
            },
            "max_redemptions": {
                "anyOf": [
                    {
                        "type": "integer",
                        "minimum": 1
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Max Redemptions",
                "description": "Optional maximum number of times the discount can be redeemed."
            },
            "products": {
                "anyOf": [
                    {
                        "items": {
                            "type": "string",
                            "format": "uuid4"
                        },
                        "type": "array",
                        "description": "List of product IDs the discount can be applied to."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Products"
            },
            "organization_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4",
                        "description": "The organization ID.",
                        "x-polar-selector-widget": {
                            "displayProperty": "name",
                            "resourceName": "Organization",
                            "resourceRoot": "/v1/organizations"
                        }
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Organization Id",
                "description": "The ID of the organization owning the discount. **Required unless you use an organization token.**"
            }
        },
        "type": "object",
        "required": [
            "duration",
            "duration_in_months",
            "type",
            "amount",
            "name"
        ],
        "title": "DiscountFixedRepeatDurationCreate",
        "description": "Schema to create a fixed amount discount that is applied on every invoice\nfor a certain number of months."
    },
    "DiscountPercentageOnceForeverDuration": {
        "properties": {
            "duration": {
                "$ref": "#/components/schemas/DiscountDuration"
            },
            "type": {
                "$ref": "#/components/schemas/DiscountType"
            },
            "basis_points": {
                "type": "integer",
                "title": "Basis Points"
            },
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "type": "object",
                "title": "Metadata"
            },
            "name": {
                "type": "string",
                "title": "Name",
                "description": "Name of the discount. Will be displayed to the customer when the discount is applied."
            },
            "code": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Code",
                "description": "Code customers can use to apply the discount during checkout."
            },
            "starts_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Starts At",
                "description": "Timestamp after which the discount is redeemable."
            },
            "ends_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Ends At",
                "description": "Timestamp after which the discount is no longer redeemable."
            },
            "max_redemptions": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Max Redemptions",
                "description": "Maximum number of times the discount can be redeemed."
            },
            "redemptions_count": {
                "type": "integer",
                "title": "Redemptions Count",
                "description": "Number of times the discount has been redeemed."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id",
                "description": "The organization ID.",
                "x-polar-selector-widget": {
                    "displayProperty": "name",
                    "resourceName": "Organization",
                    "resourceRoot": "/v1/organizations"
                }
            },
            "products": {
                "items": {
                    "$ref": "#/components/schemas/DiscountProduct"
                },
                "type": "array",
                "title": "Products"
            }
        },
        "type": "object",
        "required": [
            "duration",
            "type",
            "basis_points",
            "created_at",
            "modified_at",
            "id",
            "metadata",
            "name",
            "code",
            "starts_at",
            "ends_at",
            "max_redemptions",
            "redemptions_count",
            "organization_id",
            "products"
        ],
        "title": "DiscountPercentageOnceForeverDuration",
        "description": "Schema for a percentage discount that is applied once or forever."
    },
    "DiscountPercentageOnceForeverDurationBase": {
        "properties": {
            "duration": {
                "$ref": "#/components/schemas/DiscountDuration"
            },
            "type": {
                "$ref": "#/components/schemas/DiscountType"
            },
            "basis_points": {
                "type": "integer",
                "title": "Basis Points"
            },
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "type": "object",
                "title": "Metadata"
            },
            "name": {
                "type": "string",
                "title": "Name",
                "description": "Name of the discount. Will be displayed to the customer when the discount is applied."
            },
            "code": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Code",
                "description": "Code customers can use to apply the discount during checkout."
            },
            "starts_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Starts At",
                "description": "Timestamp after which the discount is redeemable."
            },
            "ends_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Ends At",
                "description": "Timestamp after which the discount is no longer redeemable."
            },
            "max_redemptions": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Max Redemptions",
                "description": "Maximum number of times the discount can be redeemed."
            },
            "redemptions_count": {
                "type": "integer",
                "title": "Redemptions Count",
                "description": "Number of times the discount has been redeemed."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id",
                "description": "The organization ID.",
                "x-polar-selector-widget": {
                    "displayProperty": "name",
                    "resourceName": "Organization",
                    "resourceRoot": "/v1/organizations"
                }
            }
        },
        "type": "object",
        "required": [
            "duration",
            "type",
            "basis_points",
            "created_at",
            "modified_at",
            "id",
            "metadata",
            "name",
            "code",
            "starts_at",
            "ends_at",
            "max_redemptions",
            "redemptions_count",
            "organization_id"
        ],
        "title": "DiscountPercentageOnceForeverDurationBase"
    },
    "DiscountPercentageOnceForeverDurationCreate": {
        "properties": {
            "duration": {
                "$ref": "#/components/schemas/DiscountDuration"
            },
            "type": {
                "$ref": "#/components/schemas/DiscountType",
                "description": "Type of the discount."
            },
            "basis_points": {
                "type": "integer",
                "maximum": 10000,
                "minimum": 1,
                "title": "Basis Points",
                "description": "Discount percentage in basis points.\n\nA basis point is 1/100th of a percent.\nFor example, to create a 25.5% discount, set this to 2550."
            },
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string",
                            "maxLength": 500,
                            "minLength": 1
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "propertyNames": {
                    "maxLength": 40,
                    "minLength": 1
                },
                "type": "object",
                "maxProperties": 50,
                "title": "Metadata",
                "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
            },
            "name": {
                "type": "string",
                "minLength": 1,
                "title": "Name",
                "description": "Name of the discount. Will be displayed to the customer when the discount is applied."
            },
            "code": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Code",
                "description": "Code customers can use to apply the discount during checkout. Must be between 3 and 256 characters long and contain only alphanumeric characters.If not provided, the discount can only be applied via the API."
            },
            "starts_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Starts At",
                "description": "Optional timestamp after which the discount is redeemable."
            },
            "ends_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Ends At",
                "description": "Optional timestamp after which the discount is no longer redeemable."
            },
            "max_redemptions": {
                "anyOf": [
                    {
                        "type": "integer",
                        "minimum": 1
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Max Redemptions",
                "description": "Optional maximum number of times the discount can be redeemed."
            },
            "products": {
                "anyOf": [
                    {
                        "items": {
                            "type": "string",
                            "format": "uuid4"
                        },
                        "type": "array",
                        "description": "List of product IDs the discount can be applied to."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Products"
            },
            "organization_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4",
                        "description": "The organization ID.",
                        "x-polar-selector-widget": {
                            "displayProperty": "name",
                            "resourceName": "Organization",
                            "resourceRoot": "/v1/organizations"
                        }
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Organization Id",
                "description": "The ID of the organization owning the discount. **Required unless you use an organization token.**"
            }
        },
        "type": "object",
        "required": [
            "duration",
            "type",
            "basis_points",
            "name"
        ],
        "title": "DiscountPercentageOnceForeverDurationCreate",
        "description": "Schema to create a percentage discount that is applied once or forever."
    },
    "DiscountPercentageRepeatDuration": {
        "properties": {
            "duration": {
                "$ref": "#/components/schemas/DiscountDuration"
            },
            "duration_in_months": {
                "type": "integer",
                "title": "Duration In Months"
            },
            "type": {
                "$ref": "#/components/schemas/DiscountType"
            },
            "basis_points": {
                "type": "integer",
                "title": "Basis Points"
            },
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "type": "object",
                "title": "Metadata"
            },
            "name": {
                "type": "string",
                "title": "Name",
                "description": "Name of the discount. Will be displayed to the customer when the discount is applied."
            },
            "code": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Code",
                "description": "Code customers can use to apply the discount during checkout."
            },
            "starts_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Starts At",
                "description": "Timestamp after which the discount is redeemable."
            },
            "ends_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Ends At",
                "description": "Timestamp after which the discount is no longer redeemable."
            },
            "max_redemptions": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Max Redemptions",
                "description": "Maximum number of times the discount can be redeemed."
            },
            "redemptions_count": {
                "type": "integer",
                "title": "Redemptions Count",
                "description": "Number of times the discount has been redeemed."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id",
                "description": "The organization ID.",
                "x-polar-selector-widget": {
                    "displayProperty": "name",
                    "resourceName": "Organization",
                    "resourceRoot": "/v1/organizations"
                }
            },
            "products": {
                "items": {
                    "$ref": "#/components/schemas/DiscountProduct"
                },
                "type": "array",
                "title": "Products"
            }
        },
        "type": "object",
        "required": [
            "duration",
            "duration_in_months",
            "type",
            "basis_points",
            "created_at",
            "modified_at",
            "id",
            "metadata",
            "name",
            "code",
            "starts_at",
            "ends_at",
            "max_redemptions",
            "redemptions_count",
            "organization_id",
            "products"
        ],
        "title": "DiscountPercentageRepeatDuration",
        "description": "Schema for a percentage discount that is applied on every invoice\nfor a certain number of months."
    },
    "DiscountPercentageRepeatDurationBase": {
        "properties": {
            "duration": {
                "$ref": "#/components/schemas/DiscountDuration"
            },
            "duration_in_months": {
                "type": "integer",
                "title": "Duration In Months"
            },
            "type": {
                "$ref": "#/components/schemas/DiscountType"
            },
            "basis_points": {
                "type": "integer",
                "title": "Basis Points"
            },
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "type": "object",
                "title": "Metadata"
            },
            "name": {
                "type": "string",
                "title": "Name",
                "description": "Name of the discount. Will be displayed to the customer when the discount is applied."
            },
            "code": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Code",
                "description": "Code customers can use to apply the discount during checkout."
            },
            "starts_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Starts At",
                "description": "Timestamp after which the discount is redeemable."
            },
            "ends_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Ends At",
                "description": "Timestamp after which the discount is no longer redeemable."
            },
            "max_redemptions": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Max Redemptions",
                "description": "Maximum number of times the discount can be redeemed."
            },
            "redemptions_count": {
                "type": "integer",
                "title": "Redemptions Count",
                "description": "Number of times the discount has been redeemed."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id",
                "description": "The organization ID.",
                "x-polar-selector-widget": {
                    "displayProperty": "name",
                    "resourceName": "Organization",
                    "resourceRoot": "/v1/organizations"
                }
            }
        },
        "type": "object",
        "required": [
            "duration",
            "duration_in_months",
            "type",
            "basis_points",
            "created_at",
            "modified_at",
            "id",
            "metadata",
            "name",
            "code",
            "starts_at",
            "ends_at",
            "max_redemptions",
            "redemptions_count",
            "organization_id"
        ],
        "title": "DiscountPercentageRepeatDurationBase"
    },
    "DiscountPercentageRepeatDurationCreate": {
        "properties": {
            "duration": {
                "$ref": "#/components/schemas/DiscountDuration"
            },
            "duration_in_months": {
                "type": "integer",
                "minimum": 1,
                "title": "Duration In Months",
                "description": "Number of months the discount should be applied.\n\nFor this to work on yearly pricing, you should multiply this by 12.\nFor example, to apply the discount for 2 years, set this to 24."
            },
            "type": {
                "$ref": "#/components/schemas/DiscountType",
                "description": "Type of the discount."
            },
            "basis_points": {
                "type": "integer",
                "maximum": 10000,
                "minimum": 1,
                "title": "Basis Points",
                "description": "Discount percentage in basis points.\n\nA basis point is 1/100th of a percent.\nFor example, to create a 25.5% discount, set this to 2550."
            },
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string",
                            "maxLength": 500,
                            "minLength": 1
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "propertyNames": {
                    "maxLength": 40,
                    "minLength": 1
                },
                "type": "object",
                "maxProperties": 50,
                "title": "Metadata",
                "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
            },
            "name": {
                "type": "string",
                "minLength": 1,
                "title": "Name",
                "description": "Name of the discount. Will be displayed to the customer when the discount is applied."
            },
            "code": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Code",
                "description": "Code customers can use to apply the discount during checkout. Must be between 3 and 256 characters long and contain only alphanumeric characters.If not provided, the discount can only be applied via the API."
            },
            "starts_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Starts At",
                "description": "Optional timestamp after which the discount is redeemable."
            },
            "ends_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Ends At",
                "description": "Optional timestamp after which the discount is no longer redeemable."
            },
            "max_redemptions": {
                "anyOf": [
                    {
                        "type": "integer",
                        "minimum": 1
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Max Redemptions",
                "description": "Optional maximum number of times the discount can be redeemed."
            },
            "products": {
                "anyOf": [
                    {
                        "items": {
                            "type": "string",
                            "format": "uuid4"
                        },
                        "type": "array",
                        "description": "List of product IDs the discount can be applied to."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Products"
            },
            "organization_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4",
                        "description": "The organization ID.",
                        "x-polar-selector-widget": {
                            "displayProperty": "name",
                            "resourceName": "Organization",
                            "resourceRoot": "/v1/organizations"
                        }
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Organization Id",
                "description": "The ID of the organization owning the discount. **Required unless you use an organization token.**"
            }
        },
        "type": "object",
        "required": [
            "duration",
            "duration_in_months",
            "type",
            "basis_points",
            "name"
        ],
        "title": "DiscountPercentageRepeatDurationCreate",
        "description": "Schema to create a percentage discount that is applied on every invoice\nfor a certain number of months."
    },
    "DiscountProduct": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the product."
            },
            "name": {
                "type": "string",
                "title": "Name",
                "description": "The name of the product."
            },
            "description": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Description",
                "description": "The description of the product."
            },
            "is_recurring": {
                "type": "boolean",
                "title": "Is Recurring",
                "description": "Whether the product is a subscription tier."
            },
            "is_archived": {
                "type": "boolean",
                "title": "Is Archived",
                "description": "Whether the product is archived and no longer available."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id",
                "description": "The ID of the organization owning the product."
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "name",
            "description",
            "is_recurring",
            "is_archived",
            "organization_id"
        ],
        "title": "DiscountProduct",
        "description": "A product that a discount can be applied to."
    },
    "DiscountUpdate": {
        "properties": {
            "metadata": {
                "anyOf": [
                    {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "maxLength": 500,
                                    "minLength": 1
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "propertyNames": {
                            "maxLength": 40,
                            "minLength": 1
                        },
                        "type": "object",
                        "maxProperties": 50,
                        "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Metadata"
            },
            "name": {
                "anyOf": [
                    {
                        "type": "string",
                        "minLength": 1,
                        "description": "Name of the discount. Will be displayed to the customer when the discount is applied."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Name"
            },
            "code": {
                "anyOf": [
                    {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Code customers can use to apply the discount during checkout. Must be between 3 and 256 characters long and contain only alphanumeric characters.If not provided, the discount can only be applied via the API."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Code"
            },
            "starts_at": {
                "anyOf": [
                    {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Optional timestamp after which the discount is redeemable."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Starts At"
            },
            "ends_at": {
                "anyOf": [
                    {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Optional timestamp after which the discount is no longer redeemable."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Ends At"
            },
            "max_redemptions": {
                "anyOf": [
                    {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": 1
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Optional maximum number of times the discount can be redeemed."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Max Redemptions"
            },
            "duration": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/DiscountDuration"
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "duration_in_months": {
                "anyOf": [
                    {
                        "type": "integer",
                        "minimum": 1,
                        "description": "Number of months the discount should be applied.\n\nFor this to work on yearly pricing, you should multiply this by 12.\nFor example, to apply the discount for 2 years, set this to 24."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Duration In Months"
            },
            "type": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/DiscountType"
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "amount": {
                "anyOf": [
                    {
                        "type": "integer",
                        "minimum": 0,
                        "description": "Fixed amount to discount from the invoice total."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Amount"
            },
            "currency": {
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "usd",
                        "description": "The currency. Currently, only `usd` is supported.",
                        "default": "usd"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Currency"
            },
            "basis_points": {
                "anyOf": [
                    {
                        "type": "integer",
                        "maximum": 10000,
                        "minimum": 1,
                        "description": "Discount percentage in basis points.\n\nA basis point is 1/100th of a percent.\nFor example, to create a 25.5% discount, set this to 2550."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Basis Points"
            },
            "products": {
                "anyOf": [
                    {
                        "items": {
                            "type": "string",
                            "format": "uuid4"
                        },
                        "type": "array",
                        "description": "List of product IDs the discount can be applied to."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Products"
            }
        },
        "type": "object",
        "title": "DiscountUpdate",
        "description": "Schema to update a discount."
    },
    "DownloadableFileCreate": {
        "properties": {
            "organization_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4",
                        "description": "The organization ID.",
                        "x-polar-selector-widget": {
                            "displayProperty": "name",
                            "resourceName": "Organization",
                            "resourceRoot": "/v1/organizations"
                        }
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Organization Id"
            },
            "name": {
                "type": "string",
                "title": "Name"
            },
            "mime_type": {
                "type": "string",
                "title": "Mime Type"
            },
            "size": {
                "type": "integer",
                "title": "Size"
            },
            "checksum_sha256_base64": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Checksum Sha256 Base64"
            },
            "upload": {
                "$ref": "#/components/schemas/S3FileCreateMultipart"
            },
            "service": {
                "type": "string",
                "const": "downloadable",
                "title": "Service"
            },
            "version": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Version"
            }
        },
        "type": "object",
        "required": [
            "name",
            "mime_type",
            "size",
            "upload",
            "service"
        ],
        "title": "DownloadableFileCreate",
        "description": "Schema to create a file to be associated with the downloadables benefit."
    },
    "DownloadableFileRead": {
        "properties": {
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id"
            },
            "name": {
                "type": "string",
                "title": "Name"
            },
            "path": {
                "type": "string",
                "title": "Path"
            },
            "mime_type": {
                "type": "string",
                "title": "Mime Type"
            },
            "size": {
                "type": "integer",
                "title": "Size"
            },
            "storage_version": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Storage Version"
            },
            "checksum_etag": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Checksum Etag"
            },
            "checksum_sha256_base64": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Checksum Sha256 Base64"
            },
            "checksum_sha256_hex": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Checksum Sha256 Hex"
            },
            "last_modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Last Modified At"
            },
            "version": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Version"
            },
            "service": {
                "type": "string",
                "const": "downloadable",
                "title": "Service"
            },
            "is_uploaded": {
                "type": "boolean",
                "title": "Is Uploaded"
            },
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At"
            },
            "size_readable": {
                "type": "string",
                "title": "Size Readable"
            }
        },
        "type": "object",
        "required": [
            "id",
            "organization_id",
            "name",
            "path",
            "mime_type",
            "size",
            "storage_version",
            "checksum_etag",
            "checksum_sha256_base64",
            "checksum_sha256_hex",
            "last_modified_at",
            "version",
            "service",
            "is_uploaded",
            "created_at",
            "size_readable"
        ],
        "title": "DownloadableFileRead",
        "description": "File to be associated with the downloadables benefit."
    },
    "DownloadableRead": {
        "properties": {
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id"
            },
            "benefit_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Benefit Id"
            },
            "file": {
                "$ref": "#/components/schemas/FileDownload"
            }
        },
        "type": "object",
        "required": [
            "id",
            "benefit_id",
            "file"
        ],
        "title": "DownloadableRead"
    },
    "ExistingProductPrice": {
        "properties": {
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id"
            }
        },
        "type": "object",
        "required": [
            "id"
        ],
        "title": "ExistingProductPrice",
        "description": "A price that already exists for this product.\n\nUseful when updating a product if you want to keep an existing price."
    },
    "ExternalOrganization": {
        "properties": {
            "id": {
                "type": "string",
                "format": "uuid",
                "title": "Id"
            },
            "platform": {
                "$ref": "#/components/schemas/Platforms"
            },
            "name": {
                "type": "string",
                "title": "Name"
            },
            "avatar_url": {
                "type": "string",
                "title": "Avatar Url"
            },
            "is_personal": {
                "type": "boolean",
                "title": "Is Personal"
            },
            "bio": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Bio"
            },
            "pretty_name": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Pretty Name"
            },
            "company": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Company"
            },
            "blog": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Blog"
            },
            "location": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Location"
            },
            "email": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Email"
            },
            "twitter_username": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Twitter Username"
            },
            "organization_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4",
                        "description": "The organization ID.",
                        "x-polar-selector-widget": {
                            "displayProperty": "name",
                            "resourceName": "Organization",
                            "resourceRoot": "/v1/organizations"
                        }
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Organization Id"
            }
        },
        "type": "object",
        "required": [
            "id",
            "platform",
            "name",
            "avatar_url",
            "is_personal",
            "bio",
            "pretty_name",
            "company",
            "blog",
            "location",
            "email",
            "twitter_username",
            "organization_id"
        ],
        "title": "ExternalOrganization"
    },
    "FileDownload": {
        "properties": {
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id"
            },
            "name": {
                "type": "string",
                "title": "Name"
            },
            "path": {
                "type": "string",
                "title": "Path"
            },
            "mime_type": {
                "type": "string",
                "title": "Mime Type"
            },
            "size": {
                "type": "integer",
                "title": "Size"
            },
            "storage_version": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Storage Version"
            },
            "checksum_etag": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Checksum Etag"
            },
            "checksum_sha256_base64": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Checksum Sha256 Base64"
            },
            "checksum_sha256_hex": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Checksum Sha256 Hex"
            },
            "last_modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Last Modified At"
            },
            "download": {
                "$ref": "#/components/schemas/S3DownloadURL"
            },
            "version": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Version"
            },
            "is_uploaded": {
                "type": "boolean",
                "title": "Is Uploaded"
            },
            "service": {
                "$ref": "#/components/schemas/FileServiceTypes"
            },
            "size_readable": {
                "type": "string",
                "title": "Size Readable"
            }
        },
        "type": "object",
        "required": [
            "id",
            "organization_id",
            "name",
            "path",
            "mime_type",
            "size",
            "storage_version",
            "checksum_etag",
            "checksum_sha256_base64",
            "checksum_sha256_hex",
            "last_modified_at",
            "download",
            "version",
            "is_uploaded",
            "service",
            "size_readable"
        ],
        "title": "FileDownload"
    },
    "FilePatch": {
        "properties": {
            "name": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Name"
            },
            "version": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Version"
            }
        },
        "type": "object",
        "title": "FilePatch"
    },
    "FileUpload": {
        "properties": {
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id"
            },
            "name": {
                "type": "string",
                "title": "Name"
            },
            "path": {
                "type": "string",
                "title": "Path"
            },
            "mime_type": {
                "type": "string",
                "title": "Mime Type"
            },
            "size": {
                "type": "integer",
                "title": "Size"
            },
            "storage_version": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Storage Version"
            },
            "checksum_etag": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Checksum Etag"
            },
            "checksum_sha256_base64": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Checksum Sha256 Base64"
            },
            "checksum_sha256_hex": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Checksum Sha256 Hex"
            },
            "last_modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Last Modified At"
            },
            "upload": {
                "$ref": "#/components/schemas/S3FileUploadMultipart"
            },
            "version": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Version"
            },
            "is_uploaded": {
                "type": "boolean",
                "title": "Is Uploaded",
                "default": false
            },
            "service": {
                "$ref": "#/components/schemas/FileServiceTypes"
            },
            "size_readable": {
                "type": "string",
                "title": "Size Readable"
            }
        },
        "type": "object",
        "required": [
            "id",
            "organization_id",
            "name",
            "path",
            "mime_type",
            "size",
            "storage_version",
            "checksum_etag",
            "checksum_sha256_base64",
            "checksum_sha256_hex",
            "last_modified_at",
            "upload",
            "version",
            "service",
            "size_readable"
        ],
        "title": "FileUpload"
    },
    "FileUploadCompleted": {
        "properties": {
            "id": {
                "type": "string",
                "title": "Id"
            },
            "path": {
                "type": "string",
                "title": "Path"
            },
            "parts": {
                "items": {
                    "$ref": "#/components/schemas/S3FileUploadCompletedPart"
                },
                "type": "array",
                "title": "Parts"
            }
        },
        "type": "object",
        "required": [
            "id",
            "path",
            "parts"
        ],
        "title": "FileUploadCompleted"
    },
    "Funding": {
        "properties": {
            "funding_goal": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/CurrencyAmount"
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "pledges_sum": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/CurrencyAmount"
                    },
                    {
                        "type": "null"
                    }
                ],
                "description": "Sum of pledges to this isuse (including currently open pledges and pledges that have been paid out). Always in USD."
            }
        },
        "type": "object",
        "title": "Funding"
    },
    "HTTPValidationError": {
        "properties": {
            "detail": {
                "items": {
                    "$ref": "#/components/schemas/ValidationError"
                },
                "type": "array",
                "title": "Detail"
            }
        },
        "type": "object",
        "title": "HTTPValidationError"
    },
    "IntrospectTokenResponse": {
        "properties": {
            "active": {
                "type": "boolean",
                "title": "Active"
            },
            "client_id": {
                "type": "string",
                "title": "Client Id"
            },
            "token_type": {
                "type": "string",
                "enum": [
                    "access_token",
                    "refresh_token"
                ],
                "title": "Token Type"
            },
            "scope": {
                "type": "string",
                "title": "Scope"
            },
            "sub_type": {
                "$ref": "#/components/schemas/SubType"
            },
            "sub": {
                "type": "string",
                "title": "Sub"
            },
            "aud": {
                "type": "string",
                "title": "Aud"
            },
            "iss": {
                "type": "string",
                "title": "Iss"
            },
            "exp": {
                "type": "integer",
                "title": "Exp"
            },
            "iat": {
                "type": "integer",
                "title": "Iat"
            }
        },
        "type": "object",
        "required": [
            "active",
            "client_id",
            "token_type",
            "scope",
            "sub_type",
            "sub",
            "aud",
            "iss",
            "exp",
            "iat"
        ],
        "title": "IntrospectTokenResponse"
    },
    "Issue": {
        "properties": {
            "id": {
                "type": "string",
                "format": "uuid",
                "title": "Id"
            },
            "platform": {
                "$ref": "#/components/schemas/Platforms",
                "description": "Issue platform (currently always GitHub)"
            },
            "number": {
                "type": "integer",
                "title": "Number",
                "description": "GitHub #number"
            },
            "title": {
                "type": "string",
                "title": "Title",
                "description": "GitHub issue title"
            },
            "body": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Body",
                "description": "GitHub issue body"
            },
            "comments": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Comments",
                "description": "Number of GitHub comments made on the issue"
            },
            "labels": {
                "items": {
                    "$ref": "#/components/schemas/Label"
                },
                "type": "array",
                "title": "Labels",
                "default": []
            },
            "author": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/Author"
                    },
                    {
                        "type": "null"
                    }
                ],
                "description": "GitHub author"
            },
            "assignees": {
                "anyOf": [
                    {
                        "items": {
                            "$ref": "#/components/schemas/Assignee"
                        },
                        "type": "array"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Assignees",
                "description": "GitHub assignees"
            },
            "reactions": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/Reactions"
                    },
                    {
                        "type": "null"
                    }
                ],
                "description": "GitHub reactions"
            },
            "state": {
                "$ref": "#/components/schemas/State"
            },
            "issue_closed_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Issue Closed At"
            },
            "issue_modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Issue Modified At"
            },
            "issue_created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Issue Created At"
            },
            "needs_confirmation_solved": {
                "type": "boolean",
                "title": "Needs Confirmation Solved",
                "description": "If a maintainer needs to mark this issue as solved"
            },
            "confirmed_solved_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Confirmed Solved At",
                "description": "If this issue has been marked as confirmed solved through Polar"
            },
            "funding": {
                "$ref": "#/components/schemas/Funding"
            },
            "repository": {
                "$ref": "#/components/schemas/Repository",
                "description": "The repository that the issue is in"
            },
            "upfront_split_to_contributors": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Upfront Split To Contributors",
                "description": "Share of rewrads that will be rewarded to contributors of this issue. A number between 0 and 100 (inclusive)."
            },
            "pledge_badge_currently_embedded": {
                "type": "boolean",
                "title": "Pledge Badge Currently Embedded",
                "description": "If this issue currently has the Polar badge SVG embedded"
            },
            "badge_custom_content": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Badge Custom Content",
                "description": "Optional custom badge SVG promotional content"
            }
        },
        "type": "object",
        "required": [
            "id",
            "platform",
            "number",
            "title",
            "state",
            "issue_created_at",
            "needs_confirmation_solved",
            "funding",
            "repository",
            "pledge_badge_currently_embedded"
        ],
        "title": "Issue"
    },
    "Label": {
        "properties": {
            "name": {
                "type": "string",
                "title": "Name"
            },
            "color": {
                "type": "string",
                "title": "Color"
            }
        },
        "type": "object",
        "required": [
            "name",
            "color"
        ],
        "title": "Label"
    },
    "LicenseKeyActivate": {
        "properties": {
            "key": {
                "type": "string",
                "title": "Key"
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id"
            },
            "label": {
                "type": "string",
                "title": "Label"
            },
            "conditions": {
                "type": "object",
                "title": "Conditions",
                "default": {}
            },
            "meta": {
                "type": "object",
                "title": "Meta",
                "default": {}
            }
        },
        "type": "object",
        "required": [
            "key",
            "organization_id",
            "label"
        ],
        "title": "LicenseKeyActivate"
    },
    "LicenseKeyActivationBase": {
        "properties": {
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id"
            },
            "license_key_id": {
                "type": "string",
                "format": "uuid4",
                "title": "License Key Id"
            },
            "label": {
                "type": "string",
                "title": "Label"
            },
            "meta": {
                "type": "object",
                "title": "Meta"
            },
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At"
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At"
            }
        },
        "type": "object",
        "required": [
            "id",
            "license_key_id",
            "label",
            "meta",
            "created_at",
            "modified_at"
        ],
        "title": "LicenseKeyActivationBase"
    },
    "LicenseKeyActivationRead": {
        "properties": {
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id"
            },
            "license_key_id": {
                "type": "string",
                "format": "uuid4",
                "title": "License Key Id"
            },
            "label": {
                "type": "string",
                "title": "Label"
            },
            "meta": {
                "type": "object",
                "title": "Meta"
            },
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At"
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At"
            },
            "license_key": {
                "$ref": "#/components/schemas/LicenseKeyRead"
            }
        },
        "type": "object",
        "required": [
            "id",
            "license_key_id",
            "label",
            "meta",
            "created_at",
            "modified_at",
            "license_key"
        ],
        "title": "LicenseKeyActivationRead"
    },
    "LicenseKeyCustomer": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "type": "object",
                "title": "Metadata"
            },
            "email": {
                "type": "string",
                "title": "Email"
            },
            "email_verified": {
                "type": "boolean",
                "title": "Email Verified"
            },
            "name": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Name"
            },
            "billing_address": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/Address"
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "tax_id": {
                "anyOf": [
                    {
                        "prefixItems": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/TaxIDFormat"
                            }
                        ],
                        "type": "array",
                        "maxItems": 2,
                        "minItems": 2
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Tax Id"
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id"
            },
            "avatar_url": {
                "type": "string",
                "title": "Avatar Url"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "metadata",
            "email",
            "email_verified",
            "name",
            "billing_address",
            "tax_id",
            "organization_id",
            "avatar_url"
        ],
        "title": "LicenseKeyCustomer"
    },
    "LicenseKeyDeactivate": {
        "properties": {
            "key": {
                "type": "string",
                "title": "Key"
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id"
            },
            "activation_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Activation Id"
            }
        },
        "type": "object",
        "required": [
            "key",
            "organization_id",
            "activation_id"
        ],
        "title": "LicenseKeyDeactivate"
    },
    "LicenseKeyRead": {
        "properties": {
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id"
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id"
            },
            "user_id": {
                "type": "string",
                "format": "uuid4",
                "title": "User Id",
                "deprecated": true
            },
            "customer_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Customer Id"
            },
            "user": {
                "$ref": "#/components/schemas/LicenseKeyUser",
                "deprecated": true
            },
            "customer": {
                "$ref": "#/components/schemas/LicenseKeyCustomer"
            },
            "benefit_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Benefit Id",
                "description": "The benefit ID.",
                "x-polar-selector-widget": {
                    "displayProperty": "description",
                    "resourceName": "Benefit",
                    "resourceRoot": "/v1/benefits"
                }
            },
            "key": {
                "type": "string",
                "title": "Key"
            },
            "display_key": {
                "type": "string",
                "title": "Display Key"
            },
            "status": {
                "$ref": "#/components/schemas/LicenseKeyStatus"
            },
            "limit_activations": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Limit Activations"
            },
            "usage": {
                "type": "integer",
                "title": "Usage"
            },
            "limit_usage": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Limit Usage"
            },
            "validations": {
                "type": "integer",
                "title": "Validations"
            },
            "last_validated_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Last Validated At"
            },
            "expires_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Expires At"
            }
        },
        "type": "object",
        "required": [
            "id",
            "organization_id",
            "user_id",
            "customer_id",
            "user",
            "customer",
            "benefit_id",
            "key",
            "display_key",
            "status",
            "limit_activations",
            "usage",
            "limit_usage",
            "validations",
            "last_validated_at",
            "expires_at"
        ],
        "title": "LicenseKeyRead"
    },
    "LicenseKeyUpdate": {
        "properties": {
            "status": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/LicenseKeyStatus"
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "usage": {
                "type": "integer",
                "title": "Usage",
                "default": 0
            },
            "limit_activations": {
                "anyOf": [
                    {
                        "type": "integer",
                        "maximum": 50,
                        "exclusiveMinimum": 0
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Limit Activations"
            },
            "limit_usage": {
                "anyOf": [
                    {
                        "type": "integer",
                        "exclusiveMinimum": 0
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Limit Usage"
            },
            "expires_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Expires At"
            }
        },
        "type": "object",
        "title": "LicenseKeyUpdate"
    },
    "LicenseKeyUser": {
        "properties": {
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id"
            },
            "email": {
                "type": "string",
                "title": "Email"
            },
            "public_name": {
                "type": "string",
                "title": "Public Name"
            },
            "avatar_url": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Avatar Url"
            }
        },
        "type": "object",
        "required": [
            "id",
            "email",
            "public_name"
        ],
        "title": "LicenseKeyUser"
    },
    "LicenseKeyValidate": {
        "properties": {
            "key": {
                "type": "string",
                "title": "Key"
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id"
            },
            "activation_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Activation Id"
            },
            "benefit_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4",
                        "description": "The benefit ID.",
                        "x-polar-selector-widget": {
                            "displayProperty": "description",
                            "resourceName": "Benefit",
                            "resourceRoot": "/v1/benefits"
                        }
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Benefit Id"
            },
            "customer_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Id"
            },
            "increment_usage": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Increment Usage"
            },
            "conditions": {
                "type": "object",
                "title": "Conditions",
                "default": {}
            }
        },
        "type": "object",
        "required": [
            "key",
            "organization_id"
        ],
        "title": "LicenseKeyValidate"
    },
    "LicenseKeyWithActivations": {
        "properties": {
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id"
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id"
            },
            "user_id": {
                "type": "string",
                "format": "uuid4",
                "title": "User Id",
                "deprecated": true
            },
            "customer_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Customer Id"
            },
            "user": {
                "$ref": "#/components/schemas/LicenseKeyUser",
                "deprecated": true
            },
            "customer": {
                "$ref": "#/components/schemas/LicenseKeyCustomer"
            },
            "benefit_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Benefit Id",
                "description": "The benefit ID.",
                "x-polar-selector-widget": {
                    "displayProperty": "description",
                    "resourceName": "Benefit",
                    "resourceRoot": "/v1/benefits"
                }
            },
            "key": {
                "type": "string",
                "title": "Key"
            },
            "display_key": {
                "type": "string",
                "title": "Display Key"
            },
            "status": {
                "$ref": "#/components/schemas/LicenseKeyStatus"
            },
            "limit_activations": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Limit Activations"
            },
            "usage": {
                "type": "integer",
                "title": "Usage"
            },
            "limit_usage": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Limit Usage"
            },
            "validations": {
                "type": "integer",
                "title": "Validations"
            },
            "last_validated_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Last Validated At"
            },
            "expires_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Expires At"
            },
            "activations": {
                "items": {
                    "$ref": "#/components/schemas/LicenseKeyActivationBase"
                },
                "type": "array",
                "title": "Activations"
            }
        },
        "type": "object",
        "required": [
            "id",
            "organization_id",
            "user_id",
            "customer_id",
            "user",
            "customer",
            "benefit_id",
            "key",
            "display_key",
            "status",
            "limit_activations",
            "usage",
            "limit_usage",
            "validations",
            "last_validated_at",
            "expires_at",
            "activations"
        ],
        "title": "LicenseKeyWithActivations"
    },
    "ListResource_BenefitGrant_": {
        "properties": {
            "items": {
                "items": {
                    "$ref": "#/components/schemas/BenefitGrant"
                },
                "type": "array",
                "title": "Items"
            },
            "pagination": {
                "$ref": "#/components/schemas/Pagination"
            }
        },
        "type": "object",
        "required": [
            "items",
            "pagination"
        ],
        "title": "ListResource[BenefitGrant]"
    },
    "ListResource_Benefit_": {
        "properties": {
            "items": {
                "items": {
                    "$ref": "#/components/schemas/Benefit",
                    "title": "Benefit"
                },
                "type": "array",
                "title": "Items"
            },
            "pagination": {
                "$ref": "#/components/schemas/Pagination"
            }
        },
        "type": "object",
        "required": [
            "items",
            "pagination"
        ],
        "title": "ListResource[Benefit]"
    },
    "ListResource_CheckoutLink_": {
        "properties": {
            "items": {
                "items": {
                    "$ref": "#/components/schemas/CheckoutLink"
                },
                "type": "array",
                "title": "Items"
            },
            "pagination": {
                "$ref": "#/components/schemas/Pagination"
            }
        },
        "type": "object",
        "required": [
            "items",
            "pagination"
        ],
        "title": "ListResource[CheckoutLink]"
    },
    "ListResource_Checkout_": {
        "properties": {
            "items": {
                "items": {
                    "$ref": "#/components/schemas/Checkout"
                },
                "type": "array",
                "title": "Items"
            },
            "pagination": {
                "$ref": "#/components/schemas/Pagination"
            }
        },
        "type": "object",
        "required": [
            "items",
            "pagination"
        ],
        "title": "ListResource[Checkout]"
    },
    "ListResource_CustomField_": {
        "properties": {
            "items": {
                "items": {
                    "$ref": "#/components/schemas/CustomField",
                    "title": "CustomField"
                },
                "type": "array",
                "title": "Items"
            },
            "pagination": {
                "$ref": "#/components/schemas/Pagination"
            }
        },
        "type": "object",
        "required": [
            "items",
            "pagination"
        ],
        "title": "ListResource[CustomField]"
    },
    "ListResource_CustomerBenefitGrant_": {
        "properties": {
            "items": {
                "items": {
                    "$ref": "#/components/schemas/CustomerBenefitGrant",
                    "title": "CustomerBenefitGrant"
                },
                "type": "array",
                "title": "Items"
            },
            "pagination": {
                "$ref": "#/components/schemas/Pagination"
            }
        },
        "type": "object",
        "required": [
            "items",
            "pagination"
        ],
        "title": "ListResource[CustomerBenefitGrant]"
    },
    "ListResource_CustomerOrder_": {
        "properties": {
            "items": {
                "items": {
                    "$ref": "#/components/schemas/CustomerOrder"
                },
                "type": "array",
                "title": "Items"
            },
            "pagination": {
                "$ref": "#/components/schemas/Pagination"
            }
        },
        "type": "object",
        "required": [
            "items",
            "pagination"
        ],
        "title": "ListResource[CustomerOrder]"
    },
    "ListResource_CustomerSubscription_": {
        "properties": {
            "items": {
                "items": {
                    "$ref": "#/components/schemas/CustomerSubscription"
                },
                "type": "array",
                "title": "Items"
            },
            "pagination": {
                "$ref": "#/components/schemas/Pagination"
            }
        },
        "type": "object",
        "required": [
            "items",
            "pagination"
        ],
        "title": "ListResource[CustomerSubscription]"
    },
    "ListResource_Customer_": {
        "properties": {
            "items": {
                "items": {
                    "$ref": "#/components/schemas/Customer"
                },
                "type": "array",
                "title": "Items"
            },
            "pagination": {
                "$ref": "#/components/schemas/Pagination"
            }
        },
        "type": "object",
        "required": [
            "items",
            "pagination"
        ],
        "title": "ListResource[Customer]"
    },
    "ListResource_Discount_": {
        "properties": {
            "items": {
                "items": {
                    "$ref": "#/components/schemas/Discount",
                    "title": "Discount"
                },
                "type": "array",
                "title": "Items"
            },
            "pagination": {
                "$ref": "#/components/schemas/Pagination"
            }
        },
        "type": "object",
        "required": [
            "items",
            "pagination"
        ],
        "title": "ListResource[Discount]"
    },
    "ListResource_DownloadableRead_": {
        "properties": {
            "items": {
                "items": {
                    "$ref": "#/components/schemas/DownloadableRead"
                },
                "type": "array",
                "title": "Items"
            },
            "pagination": {
                "$ref": "#/components/schemas/Pagination"
            }
        },
        "type": "object",
        "required": [
            "items",
            "pagination"
        ],
        "title": "ListResource[DownloadableRead]"
    },
    "ListResource_ExternalOrganization_": {
        "properties": {
            "items": {
                "items": {
                    "$ref": "#/components/schemas/ExternalOrganization"
                },
                "type": "array",
                "title": "Items"
            },
            "pagination": {
                "$ref": "#/components/schemas/Pagination"
            }
        },
        "type": "object",
        "required": [
            "items",
            "pagination"
        ],
        "title": "ListResource[ExternalOrganization]"
    },
    "ListResource_FileRead_": {
        "properties": {
            "items": {
                "items": {
                    "oneOf": [
                        {
                            "$ref": "#/components/schemas/DownloadableFileRead"
                        },
                        {
                            "$ref": "#/components/schemas/ProductMediaFileRead"
                        },
                        {
                            "$ref": "#/components/schemas/OrganizationAvatarFileRead"
                        }
                    ],
                    "title": "FileRead",
                    "discriminator": {
                        "propertyName": "service",
                        "mapping": {
                            "downloadable": "#/components/schemas/DownloadableFileRead",
                            "organization_avatar": "#/components/schemas/OrganizationAvatarFileRead",
                            "product_media": "#/components/schemas/ProductMediaFileRead"
                        }
                    }
                },
                "type": "array",
                "title": "Items"
            },
            "pagination": {
                "$ref": "#/components/schemas/Pagination"
            }
        },
        "type": "object",
        "required": [
            "items",
            "pagination"
        ],
        "title": "ListResource[FileRead]"
    },
    "ListResource_LicenseKeyRead_": {
        "properties": {
            "items": {
                "items": {
                    "$ref": "#/components/schemas/LicenseKeyRead"
                },
                "type": "array",
                "title": "Items"
            },
            "pagination": {
                "$ref": "#/components/schemas/Pagination"
            }
        },
        "type": "object",
        "required": [
            "items",
            "pagination"
        ],
        "title": "ListResource[LicenseKeyRead]"
    },
    "ListResource_OAuth2Client_": {
        "properties": {
            "items": {
                "items": {
                    "$ref": "#/components/schemas/OAuth2Client"
                },
                "type": "array",
                "title": "Items"
            },
            "pagination": {
                "$ref": "#/components/schemas/Pagination"
            }
        },
        "type": "object",
        "required": [
            "items",
            "pagination"
        ],
        "title": "ListResource[OAuth2Client]"
    },
    "ListResource_Order_": {
        "properties": {
            "items": {
                "items": {
                    "$ref": "#/components/schemas/Order"
                },
                "type": "array",
                "title": "Items"
            },
            "pagination": {
                "$ref": "#/components/schemas/Pagination"
            }
        },
        "type": "object",
        "required": [
            "items",
            "pagination"
        ],
        "title": "ListResource[Order]"
    },
    "ListResource_Organization_": {
        "properties": {
            "items": {
                "items": {
                    "$ref": "#/components/schemas/Organization"
                },
                "type": "array",
                "title": "Items"
            },
            "pagination": {
                "$ref": "#/components/schemas/Pagination"
            }
        },
        "type": "object",
        "required": [
            "items",
            "pagination"
        ],
        "title": "ListResource[Organization]"
    },
    "ListResource_Product_": {
        "properties": {
            "items": {
                "items": {
                    "$ref": "#/components/schemas/Product"
                },
                "type": "array",
                "title": "Items"
            },
            "pagination": {
                "$ref": "#/components/schemas/Pagination"
            }
        },
        "type": "object",
        "required": [
            "items",
            "pagination"
        ],
        "title": "ListResource[Product]"
    },
    "ListResource_Refund_": {
        "properties": {
            "items": {
                "items": {
                    "$ref": "#/components/schemas/Refund"
                },
                "type": "array",
                "title": "Items"
            },
            "pagination": {
                "$ref": "#/components/schemas/Pagination"
            }
        },
        "type": "object",
        "required": [
            "items",
            "pagination"
        ],
        "title": "ListResource[Refund]"
    },
    "ListResource_Repository_": {
        "properties": {
            "items": {
                "items": {
                    "$ref": "#/components/schemas/Repository"
                },
                "type": "array",
                "title": "Items"
            },
            "pagination": {
                "$ref": "#/components/schemas/Pagination"
            }
        },
        "type": "object",
        "required": [
            "items",
            "pagination"
        ],
        "title": "ListResource[Repository]"
    },
    "ListResource_Subscription_": {
        "properties": {
            "items": {
                "items": {
                    "$ref": "#/components/schemas/Subscription"
                },
                "type": "array",
                "title": "Items"
            },
            "pagination": {
                "$ref": "#/components/schemas/Pagination"
            }
        },
        "type": "object",
        "required": [
            "items",
            "pagination"
        ],
        "title": "ListResource[Subscription]"
    },
    "Metric": {
        "properties": {
            "slug": {
                "type": "string",
                "title": "Slug",
                "description": "Unique identifier for the metric."
            },
            "display_name": {
                "type": "string",
                "title": "Display Name",
                "description": "Human-readable name for the metric."
            },
            "type": {
                "$ref": "#/components/schemas/MetricType",
                "description": "Type of the metric, useful to know the unit or format of the value."
            }
        },
        "type": "object",
        "required": [
            "slug",
            "display_name",
            "type"
        ],
        "title": "Metric",
        "description": "Information about a metric."
    },
    "MetricPeriod": {
        "properties": {
            "timestamp": {
                "type": "string",
                "format": "date-time",
                "title": "Timestamp",
                "description": "Timestamp of this period data."
            },
            "orders": {
                "type": "integer",
                "title": "Orders"
            },
            "revenue": {
                "type": "integer",
                "title": "Revenue"
            },
            "cumulative_revenue": {
                "type": "integer",
                "title": "Cumulative Revenue"
            },
            "average_order_value": {
                "type": "integer",
                "title": "Average Order Value"
            },
            "one_time_products": {
                "type": "integer",
                "title": "One Time Products"
            },
            "one_time_products_revenue": {
                "type": "integer",
                "title": "One Time Products Revenue"
            },
            "new_subscriptions": {
                "type": "integer",
                "title": "New Subscriptions"
            },
            "new_subscriptions_revenue": {
                "type": "integer",
                "title": "New Subscriptions Revenue"
            },
            "renewed_subscriptions": {
                "type": "integer",
                "title": "Renewed Subscriptions"
            },
            "renewed_subscriptions_revenue": {
                "type": "integer",
                "title": "Renewed Subscriptions Revenue"
            },
            "active_subscriptions": {
                "type": "integer",
                "title": "Active Subscriptions"
            },
            "monthly_recurring_revenue": {
                "type": "integer",
                "title": "Monthly Recurring Revenue"
            }
        },
        "type": "object",
        "required": [
            "timestamp",
            "orders",
            "revenue",
            "cumulative_revenue",
            "average_order_value",
            "one_time_products",
            "one_time_products_revenue",
            "new_subscriptions",
            "new_subscriptions_revenue",
            "renewed_subscriptions",
            "renewed_subscriptions_revenue",
            "active_subscriptions",
            "monthly_recurring_revenue"
        ],
        "title": "MetricPeriod"
    },
    "Metrics": {
        "properties": {
            "orders": {
                "$ref": "#/components/schemas/Metric"
            },
            "revenue": {
                "$ref": "#/components/schemas/Metric"
            },
            "cumulative_revenue": {
                "$ref": "#/components/schemas/Metric"
            },
            "average_order_value": {
                "$ref": "#/components/schemas/Metric"
            },
            "one_time_products": {
                "$ref": "#/components/schemas/Metric"
            },
            "one_time_products_revenue": {
                "$ref": "#/components/schemas/Metric"
            },
            "new_subscriptions": {
                "$ref": "#/components/schemas/Metric"
            },
            "new_subscriptions_revenue": {
                "$ref": "#/components/schemas/Metric"
            },
            "renewed_subscriptions": {
                "$ref": "#/components/schemas/Metric"
            },
            "renewed_subscriptions_revenue": {
                "$ref": "#/components/schemas/Metric"
            },
            "active_subscriptions": {
                "$ref": "#/components/schemas/Metric"
            },
            "monthly_recurring_revenue": {
                "$ref": "#/components/schemas/Metric"
            }
        },
        "type": "object",
        "required": [
            "orders",
            "revenue",
            "cumulative_revenue",
            "average_order_value",
            "one_time_products",
            "one_time_products_revenue",
            "new_subscriptions",
            "new_subscriptions_revenue",
            "renewed_subscriptions",
            "renewed_subscriptions_revenue",
            "active_subscriptions",
            "monthly_recurring_revenue"
        ],
        "title": "Metrics"
    },
    "MetricsIntervalLimit": {
        "properties": {
            "max_days": {
                "type": "integer",
                "title": "Max Days",
                "description": "Maximum number of days for this interval."
            }
        },
        "type": "object",
        "required": [
            "max_days"
        ],
        "title": "MetricsIntervalLimit",
        "description": "Date interval limit to get metrics for a given interval."
    },
    "MetricsIntervalsLimits": {
        "properties": {
            "hour": {
                "$ref": "#/components/schemas/MetricsIntervalLimit",
                "description": "Limits for the hour interval."
            },
            "day": {
                "$ref": "#/components/schemas/MetricsIntervalLimit",
                "description": "Limits for the day interval."
            },
            "week": {
                "$ref": "#/components/schemas/MetricsIntervalLimit",
                "description": "Limits for the week interval."
            },
            "month": {
                "$ref": "#/components/schemas/MetricsIntervalLimit",
                "description": "Limits for the month interval."
            },
            "year": {
                "$ref": "#/components/schemas/MetricsIntervalLimit",
                "description": "Limits for the year interval."
            }
        },
        "type": "object",
        "required": [
            "hour",
            "day",
            "week",
            "month",
            "year"
        ],
        "title": "MetricsIntervalsLimits",
        "description": "Date interval limits to get metrics for each interval."
    },
    "MetricsLimits": {
        "properties": {
            "min_date": {
                "type": "string",
                "format": "date",
                "title": "Min Date",
                "description": "Minimum date to get metrics."
            },
            "intervals": {
                "$ref": "#/components/schemas/MetricsIntervalsLimits",
                "description": "Limits for each interval."
            }
        },
        "type": "object",
        "required": [
            "min_date",
            "intervals"
        ],
        "title": "MetricsLimits",
        "description": "Date limits to get metrics."
    },
    "MetricsResponse": {
        "properties": {
            "periods": {
                "items": {
                    "$ref": "#/components/schemas/MetricPeriod"
                },
                "type": "array",
                "title": "Periods",
                "description": "List of data for each timestamp."
            },
            "metrics": {
                "$ref": "#/components/schemas/Metrics",
                "description": "Information about the returned metrics."
            }
        },
        "type": "object",
        "required": [
            "periods",
            "metrics"
        ],
        "title": "MetricsResponse",
        "description": "Metrics response schema."
    },
    "NotPermitted": {
        "properties": {
            "error": {
                "type": "string",
                "const": "NotPermitted",
                "title": "Error"
            },
            "detail": {
                "type": "string",
                "title": "Detail"
            }
        },
        "type": "object",
        "required": [
            "error",
            "detail"
        ],
        "title": "NotPermitted"
    },
    "OAuth2Client": {
        "properties": {
            "redirect_uris": {
                "items": {
                    "type": "string",
                    "maxLength": 2083,
                    "minLength": 1,
                    "format": "uri"
                },
                "type": "array",
                "title": "Redirect Uris"
            },
            "token_endpoint_auth_method": {
                "type": "string",
                "enum": [
                    "client_secret_basic",
                    "client_secret_post",
                    "none"
                ],
                "title": "Token Endpoint Auth Method",
                "default": "client_secret_post"
            },
            "grant_types": {
                "items": {
                    "type": "string",
                    "enum": [
                        "authorization_code",
                        "refresh_token"
                    ]
                },
                "type": "array",
                "title": "Grant Types",
                "default": [
                    "authorization_code",
                    "refresh_token"
                ]
            },
            "response_types": {
                "items": {
                    "type": "string",
                    "const": "code"
                },
                "type": "array",
                "title": "Response Types",
                "default": [
                    "code"
                ]
            },
            "scope": {
                "type": "string",
                "title": "Scope",
                "default": "openid profile email user:read organizations:read organizations:write custom_fields:read custom_fields:write discounts:read discounts:write checkout_links:read checkout_links:write checkouts:read checkouts:write products:read products:write benefits:read benefits:write events:read events:write files:read files:write subscriptions:read subscriptions:write customers:read customers:write customer_sessions:write orders:read refunds:read refunds:write metrics:read webhooks:read webhooks:write external_organizations:read license_keys:read license_keys:write repositories:read repositories:write issues:read issues:write customer_portal:read customer_portal:write"
            },
            "client_name": {
                "type": "string",
                "title": "Client Name"
            },
            "client_uri": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Client Uri"
            },
            "logo_uri": {
                "anyOf": [
                    {
                        "type": "string",
                        "maxLength": 2083,
                        "minLength": 1,
                        "format": "uri"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Logo Uri"
            },
            "tos_uri": {
                "anyOf": [
                    {
                        "type": "string",
                        "maxLength": 2083,
                        "minLength": 1,
                        "format": "uri"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Tos Uri"
            },
            "policy_uri": {
                "anyOf": [
                    {
                        "type": "string",
                        "maxLength": 2083,
                        "minLength": 1,
                        "format": "uri"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Policy Uri"
            },
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "client_id": {
                "type": "string",
                "title": "Client Id"
            },
            "client_secret": {
                "type": "string",
                "title": "Client Secret"
            },
            "client_id_issued_at": {
                "type": "integer",
                "title": "Client Id Issued At"
            },
            "client_secret_expires_at": {
                "type": "integer",
                "title": "Client Secret Expires At"
            }
        },
        "type": "object",
        "required": [
            "redirect_uris",
            "client_name",
            "created_at",
            "modified_at",
            "client_id",
            "client_secret",
            "client_id_issued_at",
            "client_secret_expires_at"
        ],
        "title": "OAuth2Client"
    },
    "OAuth2ClientConfiguration": {
        "properties": {
            "redirect_uris": {
                "items": {
                    "type": "string",
                    "maxLength": 2083,
                    "minLength": 1,
                    "format": "uri"
                },
                "type": "array",
                "title": "Redirect Uris"
            },
            "token_endpoint_auth_method": {
                "type": "string",
                "enum": [
                    "client_secret_basic",
                    "client_secret_post",
                    "none"
                ],
                "title": "Token Endpoint Auth Method",
                "default": "client_secret_post"
            },
            "grant_types": {
                "items": {
                    "type": "string",
                    "enum": [
                        "authorization_code",
                        "refresh_token"
                    ]
                },
                "type": "array",
                "title": "Grant Types",
                "default": [
                    "authorization_code",
                    "refresh_token"
                ]
            },
            "response_types": {
                "items": {
                    "type": "string",
                    "const": "code"
                },
                "type": "array",
                "title": "Response Types",
                "default": [
                    "code"
                ]
            },
            "scope": {
                "type": "string",
                "title": "Scope",
                "default": "openid profile email user:read organizations:read organizations:write custom_fields:read custom_fields:write discounts:read discounts:write checkout_links:read checkout_links:write checkouts:read checkouts:write products:read products:write benefits:read benefits:write events:read events:write files:read files:write subscriptions:read subscriptions:write customers:read customers:write customer_sessions:write orders:read refunds:read refunds:write metrics:read webhooks:read webhooks:write external_organizations:read license_keys:read license_keys:write repositories:read repositories:write issues:read issues:write customer_portal:read customer_portal:write"
            },
            "client_name": {
                "type": "string",
                "title": "Client Name"
            },
            "client_uri": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Client Uri"
            },
            "logo_uri": {
                "anyOf": [
                    {
                        "type": "string",
                        "maxLength": 2083,
                        "minLength": 1,
                        "format": "uri"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Logo Uri"
            },
            "tos_uri": {
                "anyOf": [
                    {
                        "type": "string",
                        "maxLength": 2083,
                        "minLength": 1,
                        "format": "uri"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Tos Uri"
            },
            "policy_uri": {
                "anyOf": [
                    {
                        "type": "string",
                        "maxLength": 2083,
                        "minLength": 1,
                        "format": "uri"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Policy Uri"
            }
        },
        "type": "object",
        "required": [
            "redirect_uris",
            "client_name"
        ],
        "title": "OAuth2ClientConfiguration"
    },
    "OAuth2ClientConfigurationUpdate": {
        "properties": {
            "redirect_uris": {
                "items": {
                    "type": "string",
                    "maxLength": 2083,
                    "minLength": 1,
                    "format": "uri"
                },
                "type": "array",
                "title": "Redirect Uris"
            },
            "token_endpoint_auth_method": {
                "type": "string",
                "enum": [
                    "client_secret_basic",
                    "client_secret_post",
                    "none"
                ],
                "title": "Token Endpoint Auth Method",
                "default": "client_secret_post"
            },
            "grant_types": {
                "items": {
                    "type": "string",
                    "enum": [
                        "authorization_code",
                        "refresh_token"
                    ]
                },
                "type": "array",
                "title": "Grant Types",
                "default": [
                    "authorization_code",
                    "refresh_token"
                ]
            },
            "response_types": {
                "items": {
                    "type": "string",
                    "const": "code"
                },
                "type": "array",
                "title": "Response Types",
                "default": [
                    "code"
                ]
            },
            "scope": {
                "type": "string",
                "title": "Scope",
                "default": "openid profile email user:read organizations:read organizations:write custom_fields:read custom_fields:write discounts:read discounts:write checkout_links:read checkout_links:write checkouts:read checkouts:write products:read products:write benefits:read benefits:write events:read events:write files:read files:write subscriptions:read subscriptions:write customers:read customers:write customer_sessions:write orders:read refunds:read refunds:write metrics:read webhooks:read webhooks:write external_organizations:read license_keys:read license_keys:write repositories:read repositories:write issues:read issues:write customer_portal:read customer_portal:write"
            },
            "client_name": {
                "type": "string",
                "title": "Client Name"
            },
            "client_uri": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Client Uri"
            },
            "logo_uri": {
                "anyOf": [
                    {
                        "type": "string",
                        "maxLength": 2083,
                        "minLength": 1,
                        "format": "uri"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Logo Uri"
            },
            "tos_uri": {
                "anyOf": [
                    {
                        "type": "string",
                        "maxLength": 2083,
                        "minLength": 1,
                        "format": "uri"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Tos Uri"
            },
            "policy_uri": {
                "anyOf": [
                    {
                        "type": "string",
                        "maxLength": 2083,
                        "minLength": 1,
                        "format": "uri"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Policy Uri"
            },
            "client_id": {
                "type": "string",
                "title": "Client Id"
            }
        },
        "type": "object",
        "required": [
            "redirect_uris",
            "client_name",
            "client_id"
        ],
        "title": "OAuth2ClientConfigurationUpdate"
    },
    "OAuth2ClientPublic": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "client_id": {
                "type": "string",
                "title": "Client Id"
            },
            "client_name": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Client Name"
            },
            "client_uri": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Client Uri"
            },
            "logo_uri": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Logo Uri"
            },
            "tos_uri": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Tos Uri"
            },
            "policy_uri": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Policy Uri"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "client_id",
            "client_name",
            "client_uri",
            "logo_uri",
            "tos_uri",
            "policy_uri"
        ],
        "title": "OAuth2ClientPublic"
    },
    "Order": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "type": "object",
                "title": "Metadata"
            },
            "custom_field_data": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "string",
                            "format": "date-time"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "type": "object",
                "title": "Custom Field Data",
                "description": "Key-value object storing custom field values."
            },
            "status": {
                "type": "string",
                "title": "Status"
            },
            "amount": {
                "type": "integer",
                "title": "Amount"
            },
            "tax_amount": {
                "type": "integer",
                "title": "Tax Amount"
            },
            "refunded_amount": {
                "type": "integer",
                "title": "Refunded Amount",
                "description": "Amount refunded"
            },
            "refunded_tax_amount": {
                "type": "integer",
                "title": "Refunded Tax Amount",
                "description": "Sales tax refunded"
            },
            "currency": {
                "type": "string",
                "title": "Currency"
            },
            "billing_reason": {
                "$ref": "#/components/schemas/OrderBillingReason"
            },
            "billing_address": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/Address"
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "customer_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Customer Id"
            },
            "product_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Product Id"
            },
            "product_price_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Product Price Id"
            },
            "discount_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Discount Id"
            },
            "subscription_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Subscription Id"
            },
            "checkout_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Checkout Id"
            },
            "customer": {
                "$ref": "#/components/schemas/OrderCustomer"
            },
            "user_id": {
                "type": "string",
                "format": "uuid4",
                "title": "User Id",
                "deprecated": true
            },
            "user": {
                "$ref": "#/components/schemas/OrderUser",
                "deprecated": true
            },
            "product": {
                "$ref": "#/components/schemas/OrderProduct"
            },
            "product_price": {
                "$ref": "#/components/schemas/ProductPrice"
            },
            "discount": {
                "anyOf": [
                    {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DiscountFixedOnceForeverDurationBase"
                            },
                            {
                                "$ref": "#/components/schemas/DiscountFixedRepeatDurationBase"
                            },
                            {
                                "$ref": "#/components/schemas/DiscountPercentageOnceForeverDurationBase"
                            },
                            {
                                "$ref": "#/components/schemas/DiscountPercentageRepeatDurationBase"
                            }
                        ],
                        "title": "OrderDiscount"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Discount"
            },
            "subscription": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/OrderSubscription"
                    },
                    {
                        "type": "null"
                    }
                ]
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "metadata",
            "status",
            "amount",
            "tax_amount",
            "refunded_amount",
            "refunded_tax_amount",
            "currency",
            "billing_reason",
            "billing_address",
            "customer_id",
            "product_id",
            "product_price_id",
            "discount_id",
            "subscription_id",
            "checkout_id",
            "customer",
            "user_id",
            "user",
            "product",
            "product_price",
            "discount",
            "subscription"
        ],
        "title": "Order"
    },
    "OrderCustomer": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "type": "object",
                "title": "Metadata"
            },
            "email": {
                "type": "string",
                "title": "Email"
            },
            "email_verified": {
                "type": "boolean",
                "title": "Email Verified"
            },
            "name": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Name"
            },
            "billing_address": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/Address"
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "tax_id": {
                "anyOf": [
                    {
                        "prefixItems": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/TaxIDFormat"
                            }
                        ],
                        "type": "array",
                        "maxItems": 2,
                        "minItems": 2
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Tax Id"
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id"
            },
            "avatar_url": {
                "type": "string",
                "title": "Avatar Url"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "metadata",
            "email",
            "email_verified",
            "name",
            "billing_address",
            "tax_id",
            "organization_id",
            "avatar_url"
        ],
        "title": "OrderCustomer"
    },
    "OrderInvoice": {
        "properties": {
            "url": {
                "type": "string",
                "title": "Url",
                "description": "The URL to the invoice."
            }
        },
        "type": "object",
        "required": [
            "url"
        ],
        "title": "OrderInvoice",
        "description": "Order's invoice data."
    },
    "OrderProduct": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the product."
            },
            "name": {
                "type": "string",
                "title": "Name",
                "description": "The name of the product."
            },
            "description": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Description",
                "description": "The description of the product."
            },
            "is_recurring": {
                "type": "boolean",
                "title": "Is Recurring",
                "description": "Whether the product is a subscription tier."
            },
            "is_archived": {
                "type": "boolean",
                "title": "Is Archived",
                "description": "Whether the product is archived and no longer available."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id",
                "description": "The ID of the organization owning the product."
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "name",
            "description",
            "is_recurring",
            "is_archived",
            "organization_id"
        ],
        "title": "OrderProduct"
    },
    "OrderSubscription": {
        "properties": {
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "type": "object",
                "title": "Metadata"
            },
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "amount": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Amount"
            },
            "currency": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Currency"
            },
            "recurring_interval": {
                "$ref": "#/components/schemas/SubscriptionRecurringInterval"
            },
            "status": {
                "$ref": "#/components/schemas/SubscriptionStatus"
            },
            "current_period_start": {
                "type": "string",
                "format": "date-time",
                "title": "Current Period Start"
            },
            "current_period_end": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Current Period End"
            },
            "cancel_at_period_end": {
                "type": "boolean",
                "title": "Cancel At Period End"
            },
            "canceled_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Canceled At"
            },
            "started_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Started At"
            },
            "ends_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Ends At"
            },
            "ended_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Ended At"
            },
            "customer_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Customer Id"
            },
            "product_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Product Id"
            },
            "price_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Price Id"
            },
            "discount_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Discount Id"
            },
            "checkout_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Checkout Id"
            },
            "customer_cancellation_reason": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/CustomerCancellationReason"
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "customer_cancellation_comment": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Cancellation Comment"
            },
            "user_id": {
                "type": "string",
                "format": "uuid4",
                "title": "User Id",
                "deprecated": true
            }
        },
        "type": "object",
        "required": [
            "metadata",
            "created_at",
            "modified_at",
            "id",
            "amount",
            "currency",
            "recurring_interval",
            "status",
            "current_period_start",
            "current_period_end",
            "cancel_at_period_end",
            "canceled_at",
            "started_at",
            "ends_at",
            "ended_at",
            "customer_id",
            "product_id",
            "price_id",
            "discount_id",
            "checkout_id",
            "customer_cancellation_reason",
            "customer_cancellation_comment",
            "user_id"
        ],
        "title": "OrderSubscription"
    },
    "OrderUser": {
        "properties": {
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id"
            },
            "email": {
                "type": "string",
                "title": "Email"
            },
            "public_name": {
                "type": "string",
                "title": "Public Name"
            },
            "avatar_url": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Avatar Url"
            },
            "github_username": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Github Username"
            }
        },
        "type": "object",
        "required": [
            "id",
            "email",
            "public_name"
        ],
        "title": "OrderUser"
    },
    "Organization": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The organization ID.",
                "x-polar-selector-widget": {
                    "displayProperty": "name",
                    "resourceName": "Organization",
                    "resourceRoot": "/v1/organizations"
                }
            },
            "name": {
                "type": "string",
                "title": "Name"
            },
            "slug": {
                "type": "string",
                "title": "Slug"
            },
            "avatar_url": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Avatar Url"
            },
            "bio": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Bio"
            },
            "company": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Company"
            },
            "blog": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Blog"
            },
            "location": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Location"
            },
            "email": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Email"
            },
            "twitter_username": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Twitter Username"
            },
            "pledge_minimum_amount": {
                "type": "integer",
                "title": "Pledge Minimum Amount"
            },
            "pledge_badge_show_amount": {
                "type": "boolean",
                "title": "Pledge Badge Show Amount"
            },
            "default_upfront_split_to_contributors": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Default Upfront Split To Contributors"
            },
            "profile_settings": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/OrganizationProfileSettings"
                    },
                    {
                        "type": "null"
                    }
                ],
                "description": "Settings for the organization profile"
            },
            "feature_settings": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/OrganizationFeatureSettings"
                    },
                    {
                        "type": "null"
                    }
                ],
                "description": "Settings for the organization features"
            },
            "subscription_settings": {
                "$ref": "#/components/schemas/OrganizationSubscriptionSettings",
                "description": "Settings related to subscriptions management"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "name",
            "slug",
            "avatar_url",
            "bio",
            "company",
            "blog",
            "location",
            "email",
            "twitter_username",
            "pledge_minimum_amount",
            "pledge_badge_show_amount",
            "default_upfront_split_to_contributors",
            "profile_settings",
            "feature_settings",
            "subscription_settings"
        ],
        "title": "Organization"
    },
    "OrganizationAvatarFileCreate": {
        "properties": {
            "organization_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4",
                        "description": "The organization ID.",
                        "x-polar-selector-widget": {
                            "displayProperty": "name",
                            "resourceName": "Organization",
                            "resourceRoot": "/v1/organizations"
                        }
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Organization Id"
            },
            "name": {
                "type": "string",
                "title": "Name"
            },
            "mime_type": {
                "type": "string",
                "pattern": "^image\\/(jpeg|png|gif|webp|svg\\+xml)$",
                "title": "Mime Type",
                "description": "MIME type of the file. Only images are supported for this type of file."
            },
            "size": {
                "type": "integer",
                "maximum": 1048576,
                "title": "Size",
                "description": "Size of the file. A maximum of 1 MB is allowed for this type of file."
            },
            "checksum_sha256_base64": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Checksum Sha256 Base64"
            },
            "upload": {
                "$ref": "#/components/schemas/S3FileCreateMultipart"
            },
            "service": {
                "type": "string",
                "const": "organization_avatar",
                "title": "Service"
            },
            "version": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Version"
            }
        },
        "type": "object",
        "required": [
            "name",
            "mime_type",
            "size",
            "upload",
            "service"
        ],
        "title": "OrganizationAvatarFileCreate",
        "description": "Schema to create a file to be used as an organization avatar."
    },
    "OrganizationAvatarFileRead": {
        "properties": {
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id"
            },
            "name": {
                "type": "string",
                "title": "Name"
            },
            "path": {
                "type": "string",
                "title": "Path"
            },
            "mime_type": {
                "type": "string",
                "title": "Mime Type"
            },
            "size": {
                "type": "integer",
                "title": "Size"
            },
            "storage_version": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Storage Version"
            },
            "checksum_etag": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Checksum Etag"
            },
            "checksum_sha256_base64": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Checksum Sha256 Base64"
            },
            "checksum_sha256_hex": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Checksum Sha256 Hex"
            },
            "last_modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Last Modified At"
            },
            "version": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Version"
            },
            "service": {
                "type": "string",
                "const": "organization_avatar",
                "title": "Service"
            },
            "is_uploaded": {
                "type": "boolean",
                "title": "Is Uploaded"
            },
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At"
            },
            "size_readable": {
                "type": "string",
                "title": "Size Readable"
            },
            "public_url": {
                "type": "string",
                "title": "Public Url"
            }
        },
        "type": "object",
        "required": [
            "id",
            "organization_id",
            "name",
            "path",
            "mime_type",
            "size",
            "storage_version",
            "checksum_etag",
            "checksum_sha256_base64",
            "checksum_sha256_hex",
            "last_modified_at",
            "version",
            "service",
            "is_uploaded",
            "created_at",
            "size_readable",
            "public_url"
        ],
        "title": "OrganizationAvatarFileRead",
        "description": "File to be used as an organization avatar."
    },
    "OrganizationCreate": {
        "properties": {
            "name": {
                "type": "string",
                "minLength": 3,
                "title": "Name"
            },
            "slug": {
                "type": "string",
                "minLength": 3,
                "title": "Slug"
            },
            "avatar_url": {
                "anyOf": [
                    {
                        "type": "string",
                        "maxLength": 2083,
                        "minLength": 1,
                        "format": "uri"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Avatar Url"
            },
            "feature_settings": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/OrganizationFeatureSettings"
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "subscription_settings": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/OrganizationSubscriptionSettings"
                    },
                    {
                        "type": "null"
                    }
                ]
            }
        },
        "type": "object",
        "required": [
            "name",
            "slug"
        ],
        "title": "OrganizationCreate"
    },
    "OrganizationFeatureSettings": {
        "properties": {
            "issue_funding_enabled": {
                "type": "boolean",
                "title": "Issue Funding Enabled",
                "description": "If this organization has issue funding enabled",
                "default": false
            }
        },
        "type": "object",
        "title": "OrganizationFeatureSettings"
    },
    "OrganizationProfileSettings": {
        "properties": {
            "enabled": {
                "anyOf": [
                    {
                        "type": "boolean"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Enabled",
                "description": "If this organization has a profile enabled"
            },
            "description": {
                "anyOf": [
                    {
                        "type": "string",
                        "maxLength": 160
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Description",
                "description": "A description of the organization"
            },
            "featured_projects": {
                "anyOf": [
                    {
                        "items": {
                            "type": "string",
                            "format": "uuid4"
                        },
                        "type": "array"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Featured Projects",
                "description": "A list of featured projects"
            },
            "featured_organizations": {
                "anyOf": [
                    {
                        "items": {
                            "type": "string",
                            "format": "uuid4"
                        },
                        "type": "array"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Featured Organizations",
                "description": "A list of featured organizations"
            },
            "links": {
                "anyOf": [
                    {
                        "items": {
                            "type": "string",
                            "maxLength": 2083,
                            "minLength": 1,
                            "format": "uri"
                        },
                        "type": "array"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Links",
                "description": "A list of links associated with the organization"
            },
            "subscribe": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/OrganizationSubscribePromoteSettings"
                    },
                    {
                        "type": "null"
                    }
                ],
                "description": "Subscription promotion settings",
                "default": {
                    "promote": true,
                    "show_count": true,
                    "count_free": true
                }
            },
            "accent_color": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Accent Color",
                "description": "Accent color for the organization"
            }
        },
        "type": "object",
        "title": "OrganizationProfileSettings"
    },
    "OrganizationSubscribePromoteSettings": {
        "properties": {
            "promote": {
                "type": "boolean",
                "title": "Promote",
                "description": "Promote email subscription (free)",
                "default": true
            },
            "show_count": {
                "type": "boolean",
                "title": "Show Count",
                "description": "Show subscription count publicly",
                "default": true
            },
            "count_free": {
                "type": "boolean",
                "title": "Count Free",
                "description": "Include free subscribers in total count",
                "default": true
            }
        },
        "type": "object",
        "title": "OrganizationSubscribePromoteSettings"
    },
    "OrganizationSubscriptionSettings": {
        "properties": {
            "allow_multiple_subscriptions": {
                "type": "boolean",
                "title": "Allow Multiple Subscriptions"
            },
            "allow_customer_updates": {
                "type": "boolean",
                "title": "Allow Customer Updates"
            },
            "proration_behavior": {
                "$ref": "#/components/schemas/SubscriptionProrationBehavior"
            }
        },
        "type": "object",
        "required": [
            "allow_multiple_subscriptions",
            "allow_customer_updates",
            "proration_behavior"
        ],
        "title": "OrganizationSubscriptionSettings"
    },
    "OrganizationUpdate": {
        "properties": {
            "name": {
                "anyOf": [
                    {
                        "type": "string",
                        "minLength": 3
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Name"
            },
            "avatar_url": {
                "anyOf": [
                    {
                        "type": "string",
                        "maxLength": 2083,
                        "minLength": 1,
                        "format": "uri"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Avatar Url"
            },
            "default_upfront_split_to_contributors": {
                "anyOf": [
                    {
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 0
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Default Upfront Split To Contributors"
            },
            "pledge_badge_show_amount": {
                "type": "boolean",
                "title": "Pledge Badge Show Amount",
                "default": false
            },
            "billing_email": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Billing Email"
            },
            "default_badge_custom_content": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Default Badge Custom Content"
            },
            "pledge_minimum_amount": {
                "type": "integer",
                "title": "Pledge Minimum Amount",
                "default": 2000
            },
            "total_monthly_spending_limit": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Total Monthly Spending Limit"
            },
            "per_user_monthly_spending_limit": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Per User Monthly Spending Limit"
            },
            "profile_settings": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/OrganizationProfileSettings"
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "feature_settings": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/OrganizationFeatureSettings"
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "subscription_settings": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/OrganizationSubscriptionSettings"
                    },
                    {
                        "type": "null"
                    }
                ]
            }
        },
        "type": "object",
        "title": "OrganizationUpdate"
    },
    "Pagination": {
        "properties": {
            "total_count": {
                "type": "integer",
                "title": "Total Count"
            },
            "max_page": {
                "type": "integer",
                "title": "Max Page"
            }
        },
        "type": "object",
        "required": [
            "total_count",
            "max_page"
        ],
        "title": "Pagination"
    },
    "Pledge": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "amount": {
                "type": "integer",
                "title": "Amount",
                "description": "Amount pledged towards the issue"
            },
            "currency": {
                "type": "string",
                "title": "Currency"
            },
            "state": {
                "$ref": "#/components/schemas/PledgeState",
                "description": "Current state of the pledge"
            },
            "type": {
                "$ref": "#/components/schemas/PledgeType",
                "description": "Type of pledge"
            },
            "refunded_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Refunded At",
                "description": "If and when the pledge was refunded to the pledger"
            },
            "scheduled_payout_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Scheduled Payout At",
                "description": "When the payout is scheduled to be made to the maintainers behind the issue. Disputes must be made before this date."
            },
            "issue": {
                "$ref": "#/components/schemas/Issue",
                "description": "The issue that the pledge was made towards"
            },
            "pledger": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/Pledger"
                    },
                    {
                        "type": "null"
                    }
                ],
                "description": "The user or organization that made this pledge"
            },
            "hosted_invoice_url": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Hosted Invoice Url",
                "description": "URL of invoice for this pledge"
            },
            "authed_can_admin_sender": {
                "type": "boolean",
                "title": "Authed Can Admin Sender",
                "description": "If the currently authenticated subject can perform admin actions on behalf of the maker of the peldge",
                "default": false
            },
            "authed_can_admin_received": {
                "type": "boolean",
                "title": "Authed Can Admin Received",
                "description": "If the currently authenticated subject can perform admin actions on behalf of the receiver of the peldge",
                "default": false
            },
            "created_by": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/Pledger"
                    },
                    {
                        "type": "null"
                    }
                ],
                "description": "For pledges made by an organization, or on behalf of an organization. This is the user that made the pledge. Only visible for members of said organization."
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "amount",
            "currency",
            "state",
            "type",
            "issue"
        ],
        "title": "Pledge"
    },
    "Pledger": {
        "properties": {
            "name": {
                "type": "string",
                "title": "Name"
            },
            "github_username": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Github Username"
            },
            "avatar_url": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Avatar Url"
            }
        },
        "type": "object",
        "required": [
            "name",
            "github_username",
            "avatar_url"
        ],
        "title": "Pledger"
    },
    "Product": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the product."
            },
            "name": {
                "type": "string",
                "title": "Name",
                "description": "The name of the product."
            },
            "description": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Description",
                "description": "The description of the product."
            },
            "is_recurring": {
                "type": "boolean",
                "title": "Is Recurring",
                "description": "Whether the product is a subscription tier."
            },
            "is_archived": {
                "type": "boolean",
                "title": "Is Archived",
                "description": "Whether the product is archived and no longer available."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id",
                "description": "The ID of the organization owning the product."
            },
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "type": "object",
                "title": "Metadata"
            },
            "prices": {
                "items": {
                    "$ref": "#/components/schemas/ProductPrice"
                },
                "type": "array",
                "title": "Prices",
                "description": "List of prices for this product."
            },
            "benefits": {
                "items": {
                    "$ref": "#/components/schemas/Benefit",
                    "title": "Benefit"
                },
                "type": "array",
                "title": "Benefits",
                "description": "List of benefits granted by the product."
            },
            "medias": {
                "items": {
                    "$ref": "#/components/schemas/ProductMediaFileRead"
                },
                "type": "array",
                "title": "Medias",
                "description": "List of medias associated to the product."
            },
            "attached_custom_fields": {
                "items": {
                    "$ref": "#/components/schemas/AttachedCustomField"
                },
                "type": "array",
                "title": "Attached Custom Fields",
                "description": "List of custom fields attached to the product."
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "name",
            "description",
            "is_recurring",
            "is_archived",
            "organization_id",
            "metadata",
            "prices",
            "benefits",
            "medias",
            "attached_custom_fields"
        ],
        "title": "Product",
        "description": "A product."
    },
    "ProductBenefitsUpdate": {
        "properties": {
            "benefits": {
                "items": {
                    "type": "string",
                    "format": "uuid4",
                    "description": "The benefit ID.",
                    "x-polar-selector-widget": {
                        "displayProperty": "description",
                        "resourceName": "Benefit",
                        "resourceRoot": "/v1/benefits"
                    }
                },
                "type": "array",
                "title": "Benefits",
                "description": "List of benefit IDs. Each one must be on the same organization as the product."
            }
        },
        "type": "object",
        "required": [
            "benefits"
        ],
        "title": "ProductBenefitsUpdate",
        "description": "Schema to update the benefits granted by a product."
    },
    "ProductMediaFileCreate": {
        "properties": {
            "organization_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4",
                        "description": "The organization ID.",
                        "x-polar-selector-widget": {
                            "displayProperty": "name",
                            "resourceName": "Organization",
                            "resourceRoot": "/v1/organizations"
                        }
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Organization Id"
            },
            "name": {
                "type": "string",
                "title": "Name"
            },
            "mime_type": {
                "type": "string",
                "pattern": "^image\\/(jpeg|png|gif|webp|svg\\+xml)$",
                "title": "Mime Type",
                "description": "MIME type of the file. Only images are supported for this type of file."
            },
            "size": {
                "type": "integer",
                "maximum": 10485760,
                "title": "Size",
                "description": "Size of the file. A maximum of 10 MB is allowed for this type of file."
            },
            "checksum_sha256_base64": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Checksum Sha256 Base64"
            },
            "upload": {
                "$ref": "#/components/schemas/S3FileCreateMultipart"
            },
            "service": {
                "type": "string",
                "const": "product_media",
                "title": "Service"
            },
            "version": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Version"
            }
        },
        "type": "object",
        "required": [
            "name",
            "mime_type",
            "size",
            "upload",
            "service"
        ],
        "title": "ProductMediaFileCreate",
        "description": "Schema to create a file to be used as a product media file."
    },
    "ProductMediaFileRead": {
        "properties": {
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id"
            },
            "name": {
                "type": "string",
                "title": "Name"
            },
            "path": {
                "type": "string",
                "title": "Path"
            },
            "mime_type": {
                "type": "string",
                "title": "Mime Type"
            },
            "size": {
                "type": "integer",
                "title": "Size"
            },
            "storage_version": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Storage Version"
            },
            "checksum_etag": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Checksum Etag"
            },
            "checksum_sha256_base64": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Checksum Sha256 Base64"
            },
            "checksum_sha256_hex": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Checksum Sha256 Hex"
            },
            "last_modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Last Modified At"
            },
            "version": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Version"
            },
            "service": {
                "type": "string",
                "const": "product_media",
                "title": "Service"
            },
            "is_uploaded": {
                "type": "boolean",
                "title": "Is Uploaded"
            },
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At"
            },
            "size_readable": {
                "type": "string",
                "title": "Size Readable"
            },
            "public_url": {
                "type": "string",
                "title": "Public Url"
            }
        },
        "type": "object",
        "required": [
            "id",
            "organization_id",
            "name",
            "path",
            "mime_type",
            "size",
            "storage_version",
            "checksum_etag",
            "checksum_sha256_base64",
            "checksum_sha256_hex",
            "last_modified_at",
            "version",
            "service",
            "is_uploaded",
            "created_at",
            "size_readable",
            "public_url"
        ],
        "title": "ProductMediaFileRead",
        "description": "File to be used as a product media file."
    },
    "ProductOneTimeCreate": {
        "properties": {
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string",
                            "maxLength": 500,
                            "minLength": 1
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "propertyNames": {
                    "maxLength": 40,
                    "minLength": 1
                },
                "type": "object",
                "maxProperties": 50,
                "title": "Metadata",
                "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
            },
            "name": {
                "type": "string",
                "minLength": 3,
                "title": "Name",
                "description": "The name of the product."
            },
            "description": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Description",
                "description": "The description of the product."
            },
            "prices": {
                "items": {
                    "anyOf": [
                        {
                            "$ref": "#/components/schemas/ProductPriceOneTimeFixedCreate"
                        },
                        {
                            "$ref": "#/components/schemas/ProductPriceOneTimeCustomCreate"
                        },
                        {
                            "$ref": "#/components/schemas/ProductPriceOneTimeFreeCreate"
                        }
                    ]
                },
                "type": "array",
                "maxItems": 1,
                "minItems": 1,
                "title": "ProductPriceOneTimeCreate",
                "description": "List of available prices for this product."
            },
            "medias": {
                "anyOf": [
                    {
                        "items": {
                            "type": "string",
                            "format": "uuid4"
                        },
                        "type": "array"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Medias",
                "description": "List of file IDs. Each one must be on the same organization as the product, of type `product_media` and correctly uploaded."
            },
            "attached_custom_fields": {
                "items": {
                    "$ref": "#/components/schemas/AttachedCustomFieldCreate"
                },
                "type": "array",
                "title": "Attached Custom Fields",
                "description": "List of custom fields to attach."
            },
            "organization_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4",
                        "description": "The organization ID.",
                        "x-polar-selector-widget": {
                            "displayProperty": "name",
                            "resourceName": "Organization",
                            "resourceRoot": "/v1/organizations"
                        }
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Organization Id",
                "description": "The ID of the organization owning the product. **Required unless you use an organization token.**"
            }
        },
        "type": "object",
        "required": [
            "name",
            "prices"
        ],
        "title": "ProductOneTimeCreate",
        "description": "Schema to create a one-time product."
    },
    "ProductPriceOneTimeCustom": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the price."
            },
            "amount_type": {
                "type": "string",
                "const": "custom",
                "title": "Amount Type"
            },
            "is_archived": {
                "type": "boolean",
                "title": "Is Archived",
                "description": "Whether the price is archived and no longer available."
            },
            "product_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Product Id",
                "description": "The ID of the product owning the price."
            },
            "price_currency": {
                "type": "string",
                "title": "Price Currency",
                "description": "The currency."
            },
            "minimum_amount": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Minimum Amount",
                "description": "The minimum amount the customer can pay."
            },
            "maximum_amount": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Maximum Amount",
                "description": "The maximum amount the customer can pay."
            },
            "preset_amount": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Preset Amount",
                "description": "The initial amount shown to the customer."
            },
            "type": {
                "type": "string",
                "const": "one_time",
                "title": "Type",
                "description": "The type of the price."
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "amount_type",
            "is_archived",
            "product_id",
            "price_currency",
            "minimum_amount",
            "maximum_amount",
            "preset_amount",
            "type"
        ],
        "title": "ProductPriceOneTimeCustom",
        "description": "A pay-what-you-want price for a one-time product."
    },
    "ProductPriceOneTimeCustomCreate": {
        "properties": {
            "type": {
                "type": "string",
                "const": "one_time",
                "title": "Type"
            },
            "amount_type": {
                "type": "string",
                "const": "custom",
                "title": "Amount Type"
            },
            "price_currency": {
                "type": "string",
                "pattern": "usd",
                "title": "Price Currency",
                "description": "The currency. Currently, only `usd` is supported.",
                "default": "usd"
            },
            "minimum_amount": {
                "anyOf": [
                    {
                        "type": "integer",
                        "maximum": 99999999,
                        "minimum": 50,
                        "description": "The price in cents."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Minimum Amount",
                "description": "The minimum amount the customer can pay."
            },
            "maximum_amount": {
                "anyOf": [
                    {
                        "type": "integer",
                        "maximum": 99999999,
                        "minimum": 50,
                        "description": "The price in cents."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Maximum Amount",
                "description": "The maximum amount the customer can pay."
            },
            "preset_amount": {
                "anyOf": [
                    {
                        "type": "integer",
                        "maximum": 99999999,
                        "minimum": 50,
                        "description": "The price in cents."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Preset Amount",
                "description": "The initial amount shown to the customer."
            }
        },
        "type": "object",
        "required": [
            "type",
            "amount_type"
        ],
        "title": "ProductPriceOneTimeCustomCreate",
        "description": "Schema to create a pay-what-you-want price for a one-time product."
    },
    "ProductPriceOneTimeFixed": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the price."
            },
            "amount_type": {
                "type": "string",
                "const": "fixed",
                "title": "Amount Type"
            },
            "is_archived": {
                "type": "boolean",
                "title": "Is Archived",
                "description": "Whether the price is archived and no longer available."
            },
            "product_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Product Id",
                "description": "The ID of the product owning the price."
            },
            "price_currency": {
                "type": "string",
                "title": "Price Currency",
                "description": "The currency."
            },
            "price_amount": {
                "type": "integer",
                "title": "Price Amount",
                "description": "The price in cents."
            },
            "type": {
                "type": "string",
                "const": "one_time",
                "title": "Type",
                "description": "The type of the price."
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "amount_type",
            "is_archived",
            "product_id",
            "price_currency",
            "price_amount",
            "type"
        ],
        "title": "ProductPriceOneTimeFixed",
        "description": "A one-time price for a product."
    },
    "ProductPriceOneTimeFixedCreate": {
        "properties": {
            "type": {
                "type": "string",
                "const": "one_time",
                "title": "Type"
            },
            "amount_type": {
                "type": "string",
                "const": "fixed",
                "title": "Amount Type"
            },
            "price_amount": {
                "type": "integer",
                "maximum": 99999999,
                "minimum": 50,
                "title": "Price Amount",
                "description": "The price in cents."
            },
            "price_currency": {
                "type": "string",
                "pattern": "usd",
                "title": "Price Currency",
                "description": "The currency. Currently, only `usd` is supported.",
                "default": "usd"
            }
        },
        "type": "object",
        "required": [
            "type",
            "amount_type",
            "price_amount"
        ],
        "title": "ProductPriceOneTimeFixedCreate",
        "description": "Schema to create a one-time product price."
    },
    "ProductPriceOneTimeFree": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the price."
            },
            "amount_type": {
                "type": "string",
                "const": "free",
                "title": "Amount Type"
            },
            "is_archived": {
                "type": "boolean",
                "title": "Is Archived",
                "description": "Whether the price is archived and no longer available."
            },
            "product_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Product Id",
                "description": "The ID of the product owning the price."
            },
            "type": {
                "type": "string",
                "const": "one_time",
                "title": "Type",
                "description": "The type of the price."
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "amount_type",
            "is_archived",
            "product_id",
            "type"
        ],
        "title": "ProductPriceOneTimeFree",
        "description": "A free one-time price for a product."
    },
    "ProductPriceOneTimeFreeCreate": {
        "properties": {
            "type": {
                "type": "string",
                "const": "one_time",
                "title": "Type"
            },
            "amount_type": {
                "type": "string",
                "const": "free",
                "title": "Amount Type"
            }
        },
        "type": "object",
        "required": [
            "type",
            "amount_type"
        ],
        "title": "ProductPriceOneTimeFreeCreate",
        "description": "Schema to create a free one-time product price."
    },
    "ProductPriceRecurringCustom": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the price."
            },
            "amount_type": {
                "type": "string",
                "const": "custom",
                "title": "Amount Type"
            },
            "is_archived": {
                "type": "boolean",
                "title": "Is Archived",
                "description": "Whether the price is archived and no longer available."
            },
            "product_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Product Id",
                "description": "The ID of the product owning the price."
            },
            "price_currency": {
                "type": "string",
                "title": "Price Currency",
                "description": "The currency."
            },
            "minimum_amount": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Minimum Amount",
                "description": "The minimum amount the customer can pay."
            },
            "maximum_amount": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Maximum Amount",
                "description": "The maximum amount the customer can pay."
            },
            "preset_amount": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Preset Amount",
                "description": "The initial amount shown to the customer."
            },
            "type": {
                "type": "string",
                "const": "recurring",
                "title": "Type",
                "description": "The type of the price."
            },
            "recurring_interval": {
                "$ref": "#/components/schemas/SubscriptionRecurringInterval",
                "description": "The recurring interval of the price."
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "amount_type",
            "is_archived",
            "product_id",
            "price_currency",
            "minimum_amount",
            "maximum_amount",
            "preset_amount",
            "type",
            "recurring_interval"
        ],
        "title": "ProductPriceRecurringCustom",
        "description": "A pay-what-you-want recurring price for a product, i.e. a subscription."
    },
    "ProductPriceRecurringFixed": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the price."
            },
            "amount_type": {
                "type": "string",
                "const": "fixed",
                "title": "Amount Type"
            },
            "is_archived": {
                "type": "boolean",
                "title": "Is Archived",
                "description": "Whether the price is archived and no longer available."
            },
            "product_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Product Id",
                "description": "The ID of the product owning the price."
            },
            "price_currency": {
                "type": "string",
                "title": "Price Currency",
                "description": "The currency."
            },
            "price_amount": {
                "type": "integer",
                "title": "Price Amount",
                "description": "The price in cents."
            },
            "type": {
                "type": "string",
                "const": "recurring",
                "title": "Type",
                "description": "The type of the price."
            },
            "recurring_interval": {
                "$ref": "#/components/schemas/SubscriptionRecurringInterval",
                "description": "The recurring interval of the price."
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "amount_type",
            "is_archived",
            "product_id",
            "price_currency",
            "price_amount",
            "type",
            "recurring_interval"
        ],
        "title": "ProductPriceRecurringFixed",
        "description": "A recurring price for a product, i.e. a subscription."
    },
    "ProductPriceRecurringFixedCreate": {
        "properties": {
            "type": {
                "type": "string",
                "const": "recurring",
                "title": "Type"
            },
            "amount_type": {
                "type": "string",
                "const": "fixed",
                "title": "Amount Type"
            },
            "price_amount": {
                "type": "integer",
                "maximum": 99999999,
                "minimum": 50,
                "title": "Price Amount",
                "description": "The price in cents."
            },
            "price_currency": {
                "type": "string",
                "pattern": "usd",
                "title": "Price Currency",
                "description": "The currency. Currently, only `usd` is supported.",
                "default": "usd"
            },
            "recurring_interval": {
                "$ref": "#/components/schemas/SubscriptionRecurringInterval",
                "description": "The recurring interval of the price."
            }
        },
        "type": "object",
        "required": [
            "type",
            "amount_type",
            "price_amount",
            "recurring_interval"
        ],
        "title": "ProductPriceRecurringFixedCreate",
        "description": "Schema to create a recurring product price, i.e. a subscription."
    },
    "ProductPriceRecurringFree": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the price."
            },
            "amount_type": {
                "type": "string",
                "const": "free",
                "title": "Amount Type"
            },
            "is_archived": {
                "type": "boolean",
                "title": "Is Archived",
                "description": "Whether the price is archived and no longer available."
            },
            "product_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Product Id",
                "description": "The ID of the product owning the price."
            },
            "type": {
                "type": "string",
                "const": "recurring",
                "title": "Type",
                "description": "The type of the price."
            },
            "recurring_interval": {
                "$ref": "#/components/schemas/SubscriptionRecurringInterval",
                "description": "The recurring interval of the price."
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "amount_type",
            "is_archived",
            "product_id",
            "type",
            "recurring_interval"
        ],
        "title": "ProductPriceRecurringFree",
        "description": "A free recurring price for a product, i.e. a subscription."
    },
    "ProductPriceRecurringFreeCreate": {
        "properties": {
            "type": {
                "type": "string",
                "const": "recurring",
                "title": "Type"
            },
            "amount_type": {
                "type": "string",
                "const": "free",
                "title": "Amount Type"
            },
            "recurring_interval": {
                "$ref": "#/components/schemas/SubscriptionRecurringInterval",
                "description": "The recurring interval of the price."
            }
        },
        "type": "object",
        "required": [
            "type",
            "amount_type",
            "recurring_interval"
        ],
        "title": "ProductPriceRecurringFreeCreate",
        "description": "Schema to create a free recurring product price, i.e. a subscription."
    },
    "ProductRecurringCreate": {
        "properties": {
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string",
                            "maxLength": 500,
                            "minLength": 1
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "propertyNames": {
                    "maxLength": 40,
                    "minLength": 1
                },
                "type": "object",
                "maxProperties": 50,
                "title": "Metadata",
                "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
            },
            "name": {
                "type": "string",
                "minLength": 3,
                "title": "Name",
                "description": "The name of the product."
            },
            "description": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Description",
                "description": "The description of the product."
            },
            "prices": {
                "anyOf": [
                    {
                        "items": {
                            "$ref": "#/components/schemas/ProductPriceRecurringFixedCreate"
                        },
                        "type": "array",
                        "maxItems": 2,
                        "minItems": 1,
                        "title": "ProductPriceRecurringFixedCreate",
                        "description": "List of recurring prices. Only one price per interval (one monthly and one yearly) is allowed."
                    },
                    {
                        "items": {
                            "$ref": "#/components/schemas/ProductPriceRecurringFreeCreate"
                        },
                        "type": "array",
                        "maxItems": 1,
                        "minItems": 1,
                        "title": "ProductPriceRecurringFreeCreate",
                        "description": "List with a single free recurring price."
                    }
                ],
                "title": "Prices",
                "description": "List of available prices for this product."
            },
            "medias": {
                "anyOf": [
                    {
                        "items": {
                            "type": "string",
                            "format": "uuid4"
                        },
                        "type": "array"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Medias",
                "description": "List of file IDs. Each one must be on the same organization as the product, of type `product_media` and correctly uploaded."
            },
            "attached_custom_fields": {
                "items": {
                    "$ref": "#/components/schemas/AttachedCustomFieldCreate"
                },
                "type": "array",
                "title": "Attached Custom Fields",
                "description": "List of custom fields to attach."
            },
            "organization_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4",
                        "description": "The organization ID.",
                        "x-polar-selector-widget": {
                            "displayProperty": "name",
                            "resourceName": "Organization",
                            "resourceRoot": "/v1/organizations"
                        }
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Organization Id",
                "description": "The ID of the organization owning the product. **Required unless you use an organization token.**"
            }
        },
        "type": "object",
        "required": [
            "name",
            "prices"
        ],
        "title": "ProductRecurringCreate",
        "description": "Schema to create a recurring product, i.e. a subscription."
    },
    "ProductUpdate": {
        "properties": {
            "metadata": {
                "anyOf": [
                    {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "maxLength": 500,
                                    "minLength": 1
                                },
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        },
                        "propertyNames": {
                            "maxLength": 40,
                            "minLength": 1
                        },
                        "type": "object",
                        "maxProperties": 50,
                        "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Metadata"
            },
            "name": {
                "anyOf": [
                    {
                        "type": "string",
                        "minLength": 3,
                        "description": "The name of the product."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Name"
            },
            "description": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Description",
                "description": "The description of the product."
            },
            "is_archived": {
                "anyOf": [
                    {
                        "type": "boolean"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Is Archived",
                "description": "Whether the product is archived. If `true`, the product won't be available for purchase anymore. Existing customers will still have access to their benefits, and subscriptions will continue normally."
            },
            "prices": {
                "anyOf": [
                    {
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/ExistingProductPrice"
                                },
                                {
                                    "$ref": "#/components/schemas/ProductPriceRecurringFixedCreate"
                                },
                                {
                                    "$ref": "#/components/schemas/ProductPriceRecurringFreeCreate"
                                },
                                {
                                    "$ref": "#/components/schemas/ProductPriceOneTimeFixedCreate"
                                },
                                {
                                    "$ref": "#/components/schemas/ProductPriceOneTimeCustomCreate"
                                },
                                {
                                    "$ref": "#/components/schemas/ProductPriceOneTimeFreeCreate"
                                }
                            ]
                        },
                        "type": "array"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Prices",
                "description": "List of available prices for this product. If you want to keep existing prices, include them in the list as an `ExistingProductPrice` object."
            },
            "medias": {
                "anyOf": [
                    {
                        "items": {
                            "type": "string",
                            "format": "uuid4"
                        },
                        "type": "array"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Medias",
                "description": "List of file IDs. Each one must be on the same organization as the product, of type `product_media` and correctly uploaded."
            },
            "attached_custom_fields": {
                "anyOf": [
                    {
                        "items": {
                            "$ref": "#/components/schemas/AttachedCustomFieldCreate"
                        },
                        "type": "array",
                        "description": "List of custom fields to attach."
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Attached Custom Fields"
            }
        },
        "type": "object",
        "title": "ProductUpdate",
        "description": "Schema to update a product."
    },
    "Reactions": {
        "properties": {
            "total_count": {
                "type": "integer",
                "title": "Total Count"
            },
            "plus_one": {
                "type": "integer",
                "title": "Plus One"
            },
            "minus_one": {
                "type": "integer",
                "title": "Minus One"
            },
            "laugh": {
                "type": "integer",
                "title": "Laugh"
            },
            "hooray": {
                "type": "integer",
                "title": "Hooray"
            },
            "confused": {
                "type": "integer",
                "title": "Confused"
            },
            "heart": {
                "type": "integer",
                "title": "Heart"
            },
            "rocket": {
                "type": "integer",
                "title": "Rocket"
            },
            "eyes": {
                "type": "integer",
                "title": "Eyes"
            }
        },
        "type": "object",
        "required": [
            "total_count",
            "plus_one",
            "minus_one",
            "laugh",
            "hooray",
            "confused",
            "heart",
            "rocket",
            "eyes"
        ],
        "title": "Reactions"
    },
    "Refund": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "type": "object",
                "title": "Metadata"
            },
            "status": {
                "$ref": "#/components/schemas/RefundStatus"
            },
            "reason": {
                "$ref": "#/components/schemas/RefundReason"
            },
            "amount": {
                "type": "integer",
                "title": "Amount"
            },
            "tax_amount": {
                "type": "integer",
                "title": "Tax Amount"
            },
            "currency": {
                "type": "string",
                "title": "Currency"
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id"
            },
            "order_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Order Id"
            },
            "subscription_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Subscription Id"
            },
            "customer_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Customer Id"
            },
            "revoke_benefits": {
                "type": "boolean",
                "title": "Revoke Benefits"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "metadata",
            "status",
            "reason",
            "amount",
            "tax_amount",
            "currency",
            "organization_id",
            "order_id",
            "subscription_id",
            "customer_id",
            "revoke_benefits"
        ],
        "title": "Refund"
    },
    "RefundAmountTooHigh": {
        "properties": {
            "error": {
                "type": "string",
                "const": "RefundAmountTooHigh",
                "title": "Error"
            },
            "detail": {
                "type": "string",
                "title": "Detail"
            }
        },
        "type": "object",
        "required": [
            "error",
            "detail"
        ],
        "title": "RefundAmountTooHigh"
    },
    "RefundCreate": {
        "properties": {
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string",
                            "maxLength": 500,
                            "minLength": 1
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "propertyNames": {
                    "maxLength": 40,
                    "minLength": 1
                },
                "type": "object",
                "maxProperties": 50,
                "title": "Metadata",
                "description": "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
            },
            "order_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Order Id"
            },
            "reason": {
                "$ref": "#/components/schemas/RefundReason"
            },
            "amount": {
                "type": "integer",
                "title": "Amount"
            },
            "comment": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Comment",
                "description": "An internal comment about the refund."
            },
            "revoke_benefits": {
                "type": "boolean",
                "title": "Revoke Benefits",
                "description": "Should this refund trigger the associated customer benefits to be revoked?\n\n**Note:**\nOnly allowed in case the `order` is a one-time purchase.\nSubscriptions automatically revoke customer benefits once the\nsubscription itself is revoked, i.e fully canceled.",
                "default": false
            }
        },
        "type": "object",
        "required": [
            "order_id",
            "reason",
            "amount"
        ],
        "title": "RefundCreate"
    },
    "RefundedAlready": {
        "properties": {
            "error": {
                "type": "string",
                "const": "RefundedAlready",
                "title": "Error"
            },
            "detail": {
                "type": "string",
                "title": "Detail"
            }
        },
        "type": "object",
        "required": [
            "error",
            "detail"
        ],
        "title": "RefundedAlready"
    },
    "Repository": {
        "properties": {
            "id": {
                "type": "string",
                "format": "uuid",
                "title": "Id"
            },
            "platform": {
                "$ref": "#/components/schemas/Platforms"
            },
            "is_private": {
                "type": "boolean",
                "title": "Is Private"
            },
            "name": {
                "type": "string",
                "title": "Name",
                "examples": [
                    "MyOrg"
                ]
            },
            "description": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Description"
            },
            "stars": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Stars",
                "examples": [
                    1337
                ]
            },
            "license": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "License"
            },
            "homepage": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Homepage"
            },
            "profile_settings": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/RepositoryProfileSettings"
                    },
                    {
                        "type": "null"
                    }
                ],
                "description": "Settings for the repository profile"
            },
            "organization": {
                "$ref": "#/components/schemas/ExternalOrganization"
            },
            "internal_organization": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/Organization"
                    },
                    {
                        "type": "null"
                    }
                ]
            }
        },
        "type": "object",
        "required": [
            "id",
            "platform",
            "is_private",
            "name",
            "description",
            "stars",
            "license",
            "homepage",
            "profile_settings",
            "organization",
            "internal_organization"
        ],
        "title": "Repository"
    },
    "RepositoryProfileSettings": {
        "properties": {
            "description": {
                "anyOf": [
                    {
                        "type": "string",
                        "maxLength": 240
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Description",
                "description": "A description of the repository"
            },
            "cover_image_url": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Cover Image Url",
                "description": "A URL to a cover image"
            },
            "featured_organizations": {
                "anyOf": [
                    {
                        "items": {
                            "type": "string",
                            "format": "uuid4"
                        },
                        "type": "array"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Featured Organizations",
                "description": "A list of featured organizations"
            },
            "highlighted_subscription_tiers": {
                "anyOf": [
                    {
                        "items": {
                            "type": "string",
                            "format": "uuid4"
                        },
                        "type": "array"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Highlighted Subscription Tiers",
                "description": "A list of highlighted subscription tiers"
            },
            "links": {
                "anyOf": [
                    {
                        "items": {
                            "type": "string",
                            "maxLength": 2083,
                            "minLength": 1,
                            "format": "uri"
                        },
                        "type": "array"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Links",
                "description": "A list of links related to the repository"
            }
        },
        "type": "object",
        "title": "RepositoryProfileSettings"
    },
    "RepositoryProfileSettingsUpdate": {
        "properties": {
            "set_description": {
                "anyOf": [
                    {
                        "type": "boolean"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Set Description"
            },
            "description": {
                "anyOf": [
                    {
                        "type": "string",
                        "maxLength": 240
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Description"
            },
            "set_cover_image_url": {
                "anyOf": [
                    {
                        "type": "boolean"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Set Cover Image Url"
            },
            "cover_image_url": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Cover Image Url"
            },
            "featured_organizations": {
                "anyOf": [
                    {
                        "items": {
                            "type": "string",
                            "format": "uuid4"
                        },
                        "type": "array"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Featured Organizations"
            },
            "highlighted_subscription_tiers": {
                "anyOf": [
                    {
                        "items": {
                            "type": "string",
                            "format": "uuid4"
                        },
                        "type": "array",
                        "maxItems": 3
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Highlighted Subscription Tiers"
            },
            "links": {
                "anyOf": [
                    {
                        "items": {
                            "type": "string",
                            "maxLength": 2083,
                            "minLength": 1,
                            "format": "uri"
                        },
                        "type": "array"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Links"
            }
        },
        "type": "object",
        "title": "RepositoryProfileSettingsUpdate"
    },
    "RepositoryUpdate": {
        "properties": {
            "profile_settings": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/RepositoryProfileSettingsUpdate"
                    },
                    {
                        "type": "null"
                    }
                ]
            }
        },
        "type": "object",
        "title": "RepositoryUpdate"
    },
    "ResourceNotFound": {
        "properties": {
            "error": {
                "type": "string",
                "const": "ResourceNotFound",
                "title": "Error"
            },
            "detail": {
                "type": "string",
                "title": "Detail"
            }
        },
        "type": "object",
        "required": [
            "error",
            "detail"
        ],
        "title": "ResourceNotFound"
    },
    "RevokeTokenResponse": {
        "properties": {},
        "type": "object",
        "title": "RevokeTokenResponse"
    },
    "S3DownloadURL": {
        "properties": {
            "url": {
                "type": "string",
                "title": "Url"
            },
            "headers": {
                "additionalProperties": {
                    "type": "string"
                },
                "type": "object",
                "title": "Headers",
                "default": {}
            },
            "expires_at": {
                "type": "string",
                "format": "date-time",
                "title": "Expires At"
            }
        },
        "type": "object",
        "required": [
            "url",
            "expires_at"
        ],
        "title": "S3DownloadURL"
    },
    "S3FileCreateMultipart": {
        "properties": {
            "parts": {
                "items": {
                    "$ref": "#/components/schemas/S3FileCreatePart"
                },
                "type": "array",
                "title": "Parts"
            }
        },
        "type": "object",
        "required": [
            "parts"
        ],
        "title": "S3FileCreateMultipart"
    },
    "S3FileCreatePart": {
        "properties": {
            "number": {
                "type": "integer",
                "title": "Number"
            },
            "chunk_start": {
                "type": "integer",
                "title": "Chunk Start"
            },
            "chunk_end": {
                "type": "integer",
                "title": "Chunk End"
            },
            "checksum_sha256_base64": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Checksum Sha256 Base64"
            }
        },
        "type": "object",
        "required": [
            "number",
            "chunk_start",
            "chunk_end"
        ],
        "title": "S3FileCreatePart"
    },
    "S3FileUploadCompletedPart": {
        "properties": {
            "number": {
                "type": "integer",
                "title": "Number"
            },
            "checksum_etag": {
                "type": "string",
                "title": "Checksum Etag"
            },
            "checksum_sha256_base64": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Checksum Sha256 Base64"
            }
        },
        "type": "object",
        "required": [
            "number",
            "checksum_etag",
            "checksum_sha256_base64"
        ],
        "title": "S3FileUploadCompletedPart"
    },
    "S3FileUploadMultipart": {
        "properties": {
            "id": {
                "type": "string",
                "title": "Id"
            },
            "path": {
                "type": "string",
                "title": "Path"
            },
            "parts": {
                "items": {
                    "$ref": "#/components/schemas/S3FileUploadPart"
                },
                "type": "array",
                "title": "Parts"
            }
        },
        "type": "object",
        "required": [
            "id",
            "path",
            "parts"
        ],
        "title": "S3FileUploadMultipart"
    },
    "S3FileUploadPart": {
        "properties": {
            "number": {
                "type": "integer",
                "title": "Number"
            },
            "chunk_start": {
                "type": "integer",
                "title": "Chunk Start"
            },
            "chunk_end": {
                "type": "integer",
                "title": "Chunk End"
            },
            "checksum_sha256_base64": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Checksum Sha256 Base64"
            },
            "url": {
                "type": "string",
                "title": "Url"
            },
            "expires_at": {
                "type": "string",
                "format": "date-time",
                "title": "Expires At"
            },
            "headers": {
                "additionalProperties": {
                    "type": "string"
                },
                "type": "object",
                "title": "Headers",
                "default": {}
            }
        },
        "type": "object",
        "required": [
            "number",
            "chunk_start",
            "chunk_end",
            "url",
            "expires_at"
        ],
        "title": "S3FileUploadPart"
    },
    "Subscription": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "amount": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Amount"
            },
            "currency": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Currency"
            },
            "recurring_interval": {
                "$ref": "#/components/schemas/SubscriptionRecurringInterval"
            },
            "status": {
                "$ref": "#/components/schemas/SubscriptionStatus"
            },
            "current_period_start": {
                "type": "string",
                "format": "date-time",
                "title": "Current Period Start"
            },
            "current_period_end": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Current Period End"
            },
            "cancel_at_period_end": {
                "type": "boolean",
                "title": "Cancel At Period End"
            },
            "canceled_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Canceled At"
            },
            "started_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Started At"
            },
            "ends_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Ends At"
            },
            "ended_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Ended At"
            },
            "customer_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Customer Id"
            },
            "product_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Product Id"
            },
            "price_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Price Id"
            },
            "discount_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Discount Id"
            },
            "checkout_id": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "uuid4"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Checkout Id"
            },
            "customer_cancellation_reason": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/CustomerCancellationReason"
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "customer_cancellation_comment": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Cancellation Comment"
            },
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "type": "object",
                "title": "Metadata"
            },
            "custom_field_data": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "string",
                            "format": "date-time"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "type": "object",
                "title": "Custom Field Data",
                "description": "Key-value object storing custom field values."
            },
            "customer": {
                "$ref": "#/components/schemas/SubscriptionCustomer"
            },
            "user_id": {
                "type": "string",
                "format": "uuid4",
                "title": "User Id",
                "deprecated": true
            },
            "user": {
                "$ref": "#/components/schemas/SubscriptionUser",
                "deprecated": true
            },
            "product": {
                "$ref": "#/components/schemas/Product"
            },
            "price": {
                "$ref": "#/components/schemas/ProductPriceRecurring"
            },
            "discount": {
                "anyOf": [
                    {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DiscountFixedOnceForeverDurationBase"
                            },
                            {
                                "$ref": "#/components/schemas/DiscountFixedRepeatDurationBase"
                            },
                            {
                                "$ref": "#/components/schemas/DiscountPercentageOnceForeverDurationBase"
                            },
                            {
                                "$ref": "#/components/schemas/DiscountPercentageRepeatDurationBase"
                            }
                        ],
                        "title": "SubscriptionDiscount"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Discount"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "amount",
            "currency",
            "recurring_interval",
            "status",
            "current_period_start",
            "current_period_end",
            "cancel_at_period_end",
            "canceled_at",
            "started_at",
            "ends_at",
            "ended_at",
            "customer_id",
            "product_id",
            "price_id",
            "discount_id",
            "checkout_id",
            "customer_cancellation_reason",
            "customer_cancellation_comment",
            "metadata",
            "customer",
            "user_id",
            "user",
            "product",
            "price",
            "discount"
        ],
        "title": "Subscription"
    },
    "SubscriptionCancel": {
        "properties": {
            "cancel_at_period_end": {
                "anyOf": [
                    {
                        "type": "boolean"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Cancel At Period End",
                "description": "Cancel an active subscription once the current period ends.\n\nOr uncancel a subscription currently set to be revoked at period end."
            },
            "revoke": {
                "anyOf": [
                    {
                        "type": "boolean",
                        "const": true
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Revoke",
                "description": "Cancel and revoke an active subscription immediately"
            },
            "customer_cancellation_reason": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/CustomerCancellationReason"
                    },
                    {
                        "type": "null"
                    }
                ],
                "description": "Customer reason for cancellation.\n\nHelpful to monitor reasons behind churn for future improvements.\n\nOnly set this in case your own service is requesting the reason from the\ncustomer. Or you know based on direct conversations, i.e support, with\nthe customer.\n\n* `too_expensive`: Too expensive for the customer.\n* `missing_features`: Customer is missing certain features.\n* `switched_service`: Customer switched to another service.\n* `unused`: Customer is not using it enough.\n* `customer_service`: Customer is not satisfied with the customer service.\n* `low_quality`: Customer is unhappy with the quality.\n* `too_complex`: Customer considers the service too complicated.\n* `other`: Other reason(s)."
            },
            "customer_cancellation_comment": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Customer Cancellation Comment",
                "description": "Customer feedback and why they decided to cancel.\n\n**IMPORTANT:**\nDo not use this to store internal notes! It's intended to be input\nfrom the customer and is therefore also available in their Polar\npurchases library.\n\nOnly set this in case your own service is requesting the reason from the\ncustomer. Or you copy a message directly from a customer\nconversation, i.e support."
            }
        },
        "type": "object",
        "title": "SubscriptionCancel"
    },
    "SubscriptionCustomer": {
        "properties": {
            "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Created At",
                "description": "Creation timestamp of the object."
            },
            "modified_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Modified At",
                "description": "Last modification timestamp of the object."
            },
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id",
                "description": "The ID of the object."
            },
            "metadata": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "type": "object",
                "title": "Metadata"
            },
            "email": {
                "type": "string",
                "title": "Email"
            },
            "email_verified": {
                "type": "boolean",
                "title": "Email Verified"
            },
            "name": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Name"
            },
            "billing_address": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/Address"
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "tax_id": {
                "anyOf": [
                    {
                        "prefixItems": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/TaxIDFormat"
                            }
                        ],
                        "type": "array",
                        "maxItems": 2,
                        "minItems": 2
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Tax Id"
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id"
            },
            "avatar_url": {
                "type": "string",
                "title": "Avatar Url"
            }
        },
        "type": "object",
        "required": [
            "created_at",
            "modified_at",
            "id",
            "metadata",
            "email",
            "email_verified",
            "name",
            "billing_address",
            "tax_id",
            "organization_id",
            "avatar_url"
        ],
        "title": "SubscriptionCustomer"
    },
    "SubscriptionUpdatePrice": {
        "properties": {
            "product_price_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Product Price Id",
                "description": "Update subscription to another price."
            },
            "proration_behavior": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/SubscriptionProrationBehavior"
                    },
                    {
                        "type": "null"
                    }
                ],
                "description": "Determine how to handle the proration billing. If not provided, will use the default organization setting."
            }
        },
        "type": "object",
        "required": [
            "product_price_id"
        ],
        "title": "SubscriptionUpdatePrice"
    },
    "SubscriptionUser": {
        "properties": {
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id"
            },
            "email": {
                "type": "string",
                "title": "Email"
            },
            "public_name": {
                "type": "string",
                "title": "Public Name"
            },
            "avatar_url": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Avatar Url"
            },
            "github_username": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Github Username"
            }
        },
        "type": "object",
        "required": [
            "id",
            "email",
            "public_name"
        ],
        "title": "SubscriptionUser"
    },
    "TokenResponse": {
        "properties": {
            "access_token": {
                "type": "string",
                "title": "Access Token"
            },
            "token_type": {
                "type": "string",
                "const": "Bearer",
                "title": "Token Type"
            },
            "expires_in": {
                "type": "integer",
                "title": "Expires In"
            },
            "refresh_token": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Refresh Token"
            },
            "scope": {
                "type": "string",
                "title": "Scope"
            },
            "id_token": {
                "type": "string",
                "title": "Id Token"
            }
        },
        "type": "object",
        "required": [
            "access_token",
            "token_type",
            "expires_in",
            "refresh_token",
            "scope",
            "id_token"
        ],
        "title": "TokenResponse"
    },
    "Unauthorized": {
        "properties": {
            "error": {
                "type": "string",
                "const": "Unauthorized",
                "title": "Error"
            },
            "detail": {
                "type": "string",
                "title": "Detail"
            }
        },
        "type": "object",
        "required": [
            "error",
            "detail"
        ],
        "title": "Unauthorized"
    },
    "UserInfoOrganization": {
        "properties": {
            "sub": {
                "type": "string",
                "title": "Sub"
            },
            "name": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Name"
            }
        },
        "type": "object",
        "required": [
            "sub"
        ],
        "title": "UserInfoOrganization"
    },
    "UserInfoUser": {
        "properties": {
            "sub": {
                "type": "string",
                "title": "Sub"
            },
            "name": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Name"
            },
            "email": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Email"
            },
            "email_verified": {
                "anyOf": [
                    {
                        "type": "boolean"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Email Verified"
            }
        },
        "type": "object",
        "required": [
            "sub"
        ],
        "title": "UserInfoUser"
    },
    "ValidatedLicenseKey": {
        "properties": {
            "id": {
                "type": "string",
                "format": "uuid4",
                "title": "Id"
            },
            "organization_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Organization Id"
            },
            "user_id": {
                "type": "string",
                "format": "uuid4",
                "title": "User Id",
                "deprecated": true
            },
            "customer_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Customer Id"
            },
            "user": {
                "$ref": "#/components/schemas/LicenseKeyUser",
                "deprecated": true
            },
            "customer": {
                "$ref": "#/components/schemas/LicenseKeyCustomer"
            },
            "benefit_id": {
                "type": "string",
                "format": "uuid4",
                "title": "Benefit Id",
                "description": "The benefit ID.",
                "x-polar-selector-widget": {
                    "displayProperty": "description",
                    "resourceName": "Benefit",
                    "resourceRoot": "/v1/benefits"
                }
            },
            "key": {
                "type": "string",
                "title": "Key"
            },
            "display_key": {
                "type": "string",
                "title": "Display Key"
            },
            "status": {
                "$ref": "#/components/schemas/LicenseKeyStatus"
            },
            "limit_activations": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Limit Activations"
            },
            "usage": {
                "type": "integer",
                "title": "Usage"
            },
            "limit_usage": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Limit Usage"
            },
            "validations": {
                "type": "integer",
                "title": "Validations"
            },
            "last_validated_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Last Validated At"
            },
            "expires_at": {
                "anyOf": [
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "type": "null"
                    }
                ],
                "title": "Expires At"
            },
            "activation": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/LicenseKeyActivationBase"
                    },
                    {
                        "type": "null"
                    }
                ]
            }
        },
        "type": "object",
        "required": [
            "id",
            "organization_id",
            "user_id",
            "customer_id",
            "user",
            "customer",
            "benefit_id",
            "key",
            "display_key",
            "status",
            "limit_activations",
            "usage",
            "limit_usage",
            "validations",
            "last_validated_at",
            "expires_at"
        ],
        "title": "ValidatedLicenseKey"
    },
    "ValidationError": {
        "properties": {
            "loc": {
                "items": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ]
                },
                "type": "array",
                "title": "Location"
            },
            "msg": {
                "type": "string",
                "title": "Message"
            },
            "type": {
                "type": "string",
                "title": "Error Type"
            }
        },
        "type": "object",
        "required": [
            "loc",
            "msg",
            "type"
        ],
        "title": "ValidationError"
    },
    "WebhookBenefitCreatedPayload": {
        "properties": {
            "type": {
                "type": "string",
                "const": "benefit.created",
                "title": "Type"
            },
            "data": {
                "$ref": "#/components/schemas/Benefit",
                "title": "Benefit"
            }
        },
        "type": "object",
        "required": [
            "type",
            "data"
        ],
        "title": "WebhookBenefitCreatedPayload",
        "description": "Sent when a new benefit is created.\n\n**Discord & Slack support:** Basic"
    },
    "WebhookBenefitGrantCreatedPayload": {
        "properties": {
            "type": {
                "type": "string",
                "const": "benefit_grant.created",
                "title": "Type"
            },
            "data": {
                "$ref": "#/components/schemas/BenefitGrantWebhook"
            }
        },
        "type": "object",
        "required": [
            "type",
            "data"
        ],
        "title": "WebhookBenefitGrantCreatedPayload",
        "description": "Sent when a new benefit grant is created.\n\n**Discord & Slack support:** Basic"
    },
    "WebhookBenefitGrantRevokedPayload": {
        "properties": {
            "type": {
                "type": "string",
                "const": "benefit_grant.revoked",
                "title": "Type"
            },
            "data": {
                "$ref": "#/components/schemas/BenefitGrantWebhook"
            }
        },
        "type": "object",
        "required": [
            "type",
            "data"
        ],
        "title": "WebhookBenefitGrantRevokedPayload",
        "description": "Sent when a new benefit grant is revoked.\n\n**Discord & Slack support:** Basic"
    },
    "WebhookBenefitGrantUpdatedPayload": {
        "properties": {
            "type": {
                "type": "string",
                "const": "benefit_grant.updated",
                "title": "Type"
            },
            "data": {
                "$ref": "#/components/schemas/BenefitGrantWebhook"
            }
        },
        "type": "object",
        "required": [
            "type",
            "data"
        ],
        "title": "WebhookBenefitGrantUpdatedPayload",
        "description": "Sent when a new benefit grant is updated.\n\n**Discord & Slack support:** Basic"
    },
    "WebhookBenefitUpdatedPayload": {
        "properties": {
            "type": {
                "type": "string",
                "const": "benefit.updated",
                "title": "Type"
            },
            "data": {
                "$ref": "#/components/schemas/Benefit",
                "title": "Benefit"
            }
        },
        "type": "object",
        "required": [
            "type",
            "data"
        ],
        "title": "WebhookBenefitUpdatedPayload",
        "description": "Sent when a benefit is updated.\n\n**Discord & Slack support:** Basic"
    },
    "WebhookCheckoutCreatedPayload": {
        "properties": {
            "type": {
                "type": "string",
                "const": "checkout.created",
                "title": "Type"
            },
            "data": {
                "$ref": "#/components/schemas/Checkout"
            }
        },
        "type": "object",
        "required": [
            "type",
            "data"
        ],
        "title": "WebhookCheckoutCreatedPayload",
        "description": "Sent when a new checkout is created.\n\n**Discord & Slack support:** Basic"
    },
    "WebhookCheckoutUpdatedPayload": {
        "properties": {
            "type": {
                "type": "string",
                "const": "checkout.updated",
                "title": "Type"
            },
            "data": {
                "$ref": "#/components/schemas/Checkout"
            }
        },
        "type": "object",
        "required": [
            "type",
            "data"
        ],
        "title": "WebhookCheckoutUpdatedPayload",
        "description": "Sent when a checkout is updated.\n\n**Discord & Slack support:** Basic"
    },
    "WebhookOrderCreatedPayload": {
        "properties": {
            "type": {
                "type": "string",
                "const": "order.created",
                "title": "Type"
            },
            "data": {
                "$ref": "#/components/schemas/Order"
            }
        },
        "type": "object",
        "required": [
            "type",
            "data"
        ],
        "title": "WebhookOrderCreatedPayload",
        "description": "Sent when a new order is created.\n\n**Discord & Slack support:** Full"
    },
    "WebhookOrderRefundedPayload": {
        "properties": {
            "type": {
                "type": "string",
                "const": "order.refunded",
                "title": "Type"
            },
            "data": {
                "$ref": "#/components/schemas/Order"
            }
        },
        "type": "object",
        "required": [
            "type",
            "data"
        ],
        "title": "WebhookOrderRefundedPayload",
        "description": "Sent when an order is fully or partially refunded.\n\n**Discord & Slack support:** Full"
    },
    "WebhookOrganizationUpdatedPayload": {
        "properties": {
            "type": {
                "type": "string",
                "const": "organization.updated",
                "title": "Type"
            },
            "data": {
                "$ref": "#/components/schemas/Organization"
            }
        },
        "type": "object",
        "required": [
            "type",
            "data"
        ],
        "title": "WebhookOrganizationUpdatedPayload",
        "description": "Sent when a organization is updated.\n\n**Discord & Slack support:** Basic"
    },
    "WebhookPledgeCreatedPayload": {
        "properties": {
            "type": {
                "type": "string",
                "const": "pledge.created",
                "title": "Type"
            },
            "data": {
                "$ref": "#/components/schemas/Pledge"
            }
        },
        "type": "object",
        "required": [
            "type",
            "data"
        ],
        "title": "WebhookPledgeCreatedPayload",
        "description": "Sent when a new pledge is created. Note that this does mean that the pledge has been paid yet.\n\n**Discord & Slack support:** Full"
    },
    "WebhookPledgeUpdatedPayload": {
        "properties": {
            "type": {
                "type": "string",
                "const": "pledge.updated",
                "title": "Type"
            },
            "data": {
                "$ref": "#/components/schemas/Pledge"
            }
        },
        "type": "object",
        "required": [
            "type",
            "data"
        ],
        "title": "WebhookPledgeUpdatedPayload",
        "description": "Sent when a pledge is updated.\n\n**Discord & Slack support:** Basic"
    },
    "WebhookProductCreatedPayload": {
        "properties": {
            "type": {
                "type": "string",
                "const": "product.created",
                "title": "Type"
            },
            "data": {
                "$ref": "#/components/schemas/Product"
            }
        },
        "type": "object",
        "required": [
            "type",
            "data"
        ],
        "title": "WebhookProductCreatedPayload",
        "description": "Sent when a new product is created.\n\n**Discord & Slack support:** Basic"
    },
    "WebhookProductUpdatedPayload": {
        "properties": {
            "type": {
                "type": "string",
                "const": "product.updated",
                "title": "Type"
            },
            "data": {
                "$ref": "#/components/schemas/Product"
            }
        },
        "type": "object",
        "required": [
            "type",
            "data"
        ],
        "title": "WebhookProductUpdatedPayload",
        "description": "Sent when a product is updated.\n\n**Discord & Slack support:** Basic"
    },
    "WebhookRefundCreatedPayload": {
        "properties": {
            "type": {
                "type": "string",
                "const": "refund.created",
                "title": "Type"
            },
            "data": {
                "$ref": "#/components/schemas/Refund"
            }
        },
        "type": "object",
        "required": [
            "type",
            "data"
        ],
        "title": "WebhookRefundCreatedPayload",
        "description": "Sent when a refund is created regardless of status.\n\n**Discord & Slack support:** Full"
    },
    "WebhookRefundUpdatedPayload": {
        "properties": {
            "type": {
                "type": "string",
                "const": "refund.updated",
                "title": "Type"
            },
            "data": {
                "$ref": "#/components/schemas/Refund"
            }
        },
        "type": "object",
        "required": [
            "type",
            "data"
        ],
        "title": "WebhookRefundUpdatedPayload",
        "description": "Sent when a refund is updated.\n\n**Discord & Slack support:** Full"
    },
    "WebhookSubscriptionActivePayload": {
        "properties": {
            "type": {
                "type": "string",
                "const": "subscription.active",
                "title": "Type"
            },
            "data": {
                "$ref": "#/components/schemas/Subscription"
            }
        },
        "type": "object",
        "required": [
            "type",
            "data"
        ],
        "title": "WebhookSubscriptionActivePayload",
        "description": "Sent when a subscription becomes active,\nwhether because it's a new paid subscription or because payment was recovered.\n\n**Discord & Slack support:** Full"
    },
    "WebhookSubscriptionCanceledPayload": {
        "properties": {
            "type": {
                "type": "string",
                "const": "subscription.canceled",
                "title": "Type"
            },
            "data": {
                "$ref": "#/components/schemas/Subscription"
            }
        },
        "type": "object",
        "required": [
            "type",
            "data"
        ],
        "title": "WebhookSubscriptionCanceledPayload",
        "description": "Sent when a subscription is canceled.\nCustomers might still have access until the end of the current period.\n\n**Discord & Slack support:** Full"
    },
    "WebhookSubscriptionCreatedPayload": {
        "properties": {
            "type": {
                "type": "string",
                "const": "subscription.created",
                "title": "Type"
            },
            "data": {
                "$ref": "#/components/schemas/Subscription"
            }
        },
        "type": "object",
        "required": [
            "type",
            "data"
        ],
        "title": "WebhookSubscriptionCreatedPayload",
        "description": "Sent when a new subscription is created.\n\n**Discord & Slack support:** Full"
    },
    "WebhookSubscriptionRevokedPayload": {
        "properties": {
            "type": {
                "type": "string",
                "const": "subscription.revoked",
                "title": "Type"
            },
            "data": {
                "$ref": "#/components/schemas/Subscription"
            }
        },
        "type": "object",
        "required": [
            "type",
            "data"
        ],
        "title": "WebhookSubscriptionRevokedPayload",
        "description": "Sent when a subscription is revoked, the user looses access immediately.\nHappens when the subscription is canceled, or payment is past due.\n\n**Discord & Slack support:** Full"
    },
    "WebhookSubscriptionUncanceledPayload": {
        "properties": {
            "type": {
                "type": "string",
                "const": "subscription.uncanceled",
                "title": "Type"
            },
            "data": {
                "$ref": "#/components/schemas/Subscription"
            }
        },
        "type": "object",
        "required": [
            "type",
            "data"
        ],
        "title": "WebhookSubscriptionUncanceledPayload",
        "description": "Sent when a subscription is uncanceled.\n\n**Discord & Slack support:** Full"
    },
    "WebhookSubscriptionUpdatedPayload": {
        "properties": {
            "type": {
                "type": "string",
                "const": "subscription.updated",
                "title": "Type"
            },
            "data": {
                "$ref": "#/components/schemas/Subscription"
            }
        },
        "type": "object",
        "required": [
            "type",
            "data"
        ],
        "title": "WebhookSubscriptionUpdatedPayload",
        "description": "Sent when a subscription is updated. This event fires for all changes to the subscription, including renewals.\n\nIf you want more specific events, you can listen to `subscription.active`, `subscription.canceled`, and `subscription.revoked`.\n\nTo listen specifically for renewals, you can listen to `order.created` events and check the `billing_reason` field.\n\n**Discord & Slack support:** On cancellation and revocation. Renewals are skipped."
    }
}